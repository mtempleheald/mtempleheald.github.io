{"version":3,"file":"index.mjs.js","sources":["../../../../../node_modules/svelte/store/index.mjs"],"sourcesContent":["import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n"],"names":["subscriber_queue","readable","value","start","subscribe","writable","noop","stop","subscribers","set","new_value","safe_not_equal","run_queue","length","i","s","push","update","fn","run","invalidate","subscriber","index","indexOf","splice","derived","stores","initial_value","single","Array","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","is_function","unsubscribers","map","store","run_all"],"mappings":"8KAGA,MAAMA,EAAmB,GAMzB,SAASC,EAASC,EAAOC,GACrB,MAAO,CACHC,UAAWC,EAASH,EAAOC,GAAOC,WAQ1C,SAASC,EAASH,EAAOC,EAAQG,GAC7B,IAAIC,EACJ,MAAMC,EAAc,GACpB,SAASC,EAAIC,GACT,GAAIC,EAAeT,EAAOQ,KACtBR,EAAQQ,EACJH,GAAM,CACN,MAAMK,GAAaZ,EAAiBa,OACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAYK,OAAQC,GAAK,EAAG,CAC5C,MAAMC,EAAIP,EAAYM,GACtBC,EAAE,KACFf,EAAiBgB,KAAKD,EAAGb,GAE7B,GAAIU,EAAW,CACX,IAAK,IAAIE,EAAI,EAAGA,EAAId,EAAiBa,OAAQC,GAAK,EAC9Cd,EAAiBc,GAAG,GAAGd,EAAiBc,EAAI,IAEhDd,EAAiBa,OAAS,IA0B1C,MAAO,CAAEJ,IAAAA,EAAKQ,OArBd,SAAgBC,GACZT,EAAIS,EAAGhB,KAoBWE,UAlBtB,SAAmBe,EAAKC,EAAad,GACjC,MAAMe,EAAa,CAACF,EAAKC,GAMzB,OALAZ,EAAYQ,KAAKK,GACU,IAAvBb,EAAYK,SACZN,EAAOJ,EAAMM,IAAQH,GAEzBa,EAAIjB,GACG,KACH,MAAMoB,EAAQd,EAAYe,QAAQF,IACnB,IAAXC,GACAd,EAAYgB,OAAOF,EAAO,GAEH,IAAvBd,EAAYK,SACZN,IACAA,EAAO,SAMvB,SAASkB,EAAQC,EAAQR,EAAIS,GACzB,MAAMC,GAAUC,MAAMC,QAAQJ,GACxBK,EAAeH,EACf,CAACF,GACDA,EACAM,EAAOd,EAAGL,OAAS,EACzB,OAAOZ,EAAS0B,GAAgBlB,IAC5B,IAAIwB,GAAS,EACb,MAAMC,EAAS,GACf,IAAIC,EAAU,EACVC,EAAU9B,EACd,MAAM+B,EAAO,KACT,GAAIF,EACA,OAEJC,IACA,MAAME,EAASpB,EAAGU,EAASM,EAAO,GAAKA,EAAQzB,GAC3CuB,EACAvB,EAAI6B,GAGJF,EAAUG,EAAYD,GAAUA,EAAShC,GAG3CkC,EAAgBT,EAAaU,KAAI,CAACC,EAAO5B,IAAMV,EAAUsC,GAAQxC,IACnEgC,EAAOpB,GAAKZ,EACZiC,KAAa,GAAKrB,GACdmB,GACAI,OAEL,KACCF,GAAY,GAAKrB,OAIrB,OAFAmB,GAAS,EACTI,IACO,WACHM,EAAQH,GACRJ"}