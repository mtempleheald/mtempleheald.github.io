{"version":3,"file":"store.js","sources":["../../../../../../node_modules/@sveltech/routify/runtime/store.js"],"sourcesContent":["import { writable, derived } from 'svelte/store'\nimport '../typedef'\nimport { currentLocation } from './utils'\n\nwindow.routify = window.routify || {}\n\n/** @type {import('svelte/store').Writable<RouteNode>} */\nexport const route = writable(null) // the actual route being rendered\n\n/** @type {import('svelte/store').Writable<RouteNode[]>} */\nexport const routes = writable([]) // all routes\nroutes.subscribe(routes => (window.routify.routes = routes))\n\nexport let rootContext = writable({ component: { params: {} } })\n\n/** @type {import('svelte/store').Writable<RouteNode>} */\nexport const urlRoute = writable(null)  // the route matching the url\n\n/** @type {import('svelte/store').Writable<String>} */\nexport const basepath = (() => {\n    const { set, subscribe } = writable(\"\")\n\n    return {\n        subscribe,\n        set(value) {\n            if (value.match(/^[/(]/))\n                set(value)\n            else console.warn('Basepaths must start with / or (')\n        },\n        update() { console.warn('Use assignment or set to update basepaths.') }\n    }\n})()\n\nexport const location = derived( // the part of the url matching the basepath\n    [basepath, urlRoute],\n    ([$basepath, $route]) => {\n        const [, base, path] = currentLocation().match(`^(${$basepath})(${$route.regex})`) || []\n        return { base, path }\n    }\n)\n\nexport const prefetchPath = writable(\"\")"],"names":["window","routify","route","writable","routes","subscribe","rootContext","component","params","urlRoute","basepath","set","[object Object]","value","match","console","warn","location","derived","$basepath","$route","base","path","currentLocation","regex"],"mappings":"8HAIAA,OAAOC,QAAUD,OAAOC,SAAW,GAGvB,MAACC,EAAQC,EAAS,MAGjBC,EAASD,EAAS,IAC/BC,EAAOC,WAAUD,GAAWJ,OAAOC,QAAQG,OAASA,IAE1C,IAACE,EAAcH,EAAS,CAAEI,UAAW,CAAEC,OAAQ,MAG7C,MAACC,EAAWN,EAAS,MAGpBO,EAAW,MACpB,MAAMC,IAAEA,EAAGN,UAAEA,GAAcF,EAAS,IAEpC,MAAO,CACHE,UAAAA,EACAO,IAAIC,GACIA,EAAMC,MAAM,SACZH,EAAIE,GACHE,QAAQC,KAAK,qCAEtBJ,SAAWG,QAAQC,KAAK,iDAVR,GAcXC,EAAWC,EACpB,CAACR,EAAUD,IACX,EAAEU,EAAWC,MACT,OAASC,EAAMC,GAAQC,IAAkBT,MAAM,KAAKK,MAAcC,EAAOI,WAAa,GACtF,MAAO,CAAEH,KAAAA,EAAMC,KAAAA"}