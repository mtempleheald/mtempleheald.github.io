{"version":3,"file":"middleware.js","sources":["../../../../../../node_modules/@sveltech/routify/runtime/middleware.js"],"sourcesContent":["/** \n * Node payload\n * @typedef {Object} NodePayload\n * @property {RouteNode=} file current node\n * @property {RouteNode=} parent parent of the current node\n * @property {StateObject=} state state shared by every node in the walker\n * @property {Object=} scope scope inherited by descendants in the scope\n *\n * State Object\n * @typedef {Object} StateObject\n * @prop {TreePayload=} treePayload payload from the tree\n * \n * Node walker proxy\n * @callback NodeWalkerProxy\n * @param {NodePayload} NodePayload\n */\n\n\n/**\n * Node middleware\n * @description Walks through the nodes of a tree\n * @example middleware = createNodeMiddleware(payload => {payload.file.name = 'hello'})(treePayload))\n * @param {NodeWalkerProxy} fn \n */\nfunction createNodeMiddleware(fn) {\n\n    /**    \n     * NodeMiddleware payload receiver\n     * @param {TreePayload} payload\n     */\n    const inner = async function execute(payload) {\n        return await nodeMiddleware(payload.tree, fn, { state: { treePayload: payload } })\n    }\n\n    /**    \n     * NodeMiddleware sync payload receiver\n     * @param {TreePayload} payload\n     */\n    inner.sync = function executeSync(payload) {\n        return nodeMiddlewareSync(payload.tree, fn, { state: { treePayload: payload } })\n    }\n\n    return inner\n}\n\n/**\n * Node walker\n * @param {Object} file mutable file\n * @param {NodeWalkerProxy} fn function to be called for each file\n * @param {NodePayload=} payload \n */\nasync function nodeMiddleware(file, fn, payload) {\n    const { state, scope, parent } = payload || {}\n    payload = {\n        file,\n        parent,\n        state: state || {},            //state is shared by all files in the walk\n        scope: clone(scope || {}),     //scope is inherited by descendants\n    }\n\n    await fn(payload)\n\n    if (file.children) {\n        payload.parent = file\n        await Promise.all(file.children.map(_file => nodeMiddleware(_file, fn, payload)))\n    }\n    return payload\n}\n\n/**\n * Node walker (sync version)\n * @param {Object} file mutable file\n * @param {NodeWalkerProxy} fn function to be called for each file\n * @param {NodePayload=} payload \n */\nfunction nodeMiddlewareSync(file, fn, payload) {\n    const { state, scope, parent } = payload || {}\n    payload = {\n        file,\n        parent,\n        state: state || {},            //state is shared by all files in the walk\n        scope: clone(scope || {}),     //scope is inherited by descendants\n    }\n\n    fn(payload)\n\n    if (file.children) {\n        payload.parent = file\n        file.children.map(_file => nodeMiddlewareSync(_file, fn, payload))\n    }\n    return payload\n}\n\n\n/**\n * Clone with JSON\n * @param {T} obj \n * @returns {T} JSON cloned object\n * @template T\n */\nfunction clone(obj) { return JSON.parse(JSON.stringify(obj)) }\n\nexport {\n    nodeMiddleware,\n    nodeMiddlewareSync,\n    createNodeMiddleware\n}\n"],"names":["createNodeMiddleware","fn","inner","async","payload","nodeMiddleware","tree","state","treePayload","sync","nodeMiddlewareSync","file","scope","parent","clone","children","Promise","all","map","_file","obj","JSON","parse","stringify"],"mappings":"AAwBA,SAASA,EAAqBC,GAM1B,MAAMC,EAAQC,eAAuBC,GACjC,aAAaC,EAAeD,EAAQE,KAAML,EAAI,CAAEM,MAAO,CAAEC,YAAaJ,MAW1E,OAJAF,EAAMO,KAAO,SAAqBL,GAC9B,OAAOM,EAAmBN,EAAQE,KAAML,EAAI,CAAEM,MAAO,CAAEC,YAAaJ,MAGjEF,EASXC,eAAeE,EAAeM,EAAMV,EAAIG,GACpC,MAAMG,MAAEA,EAAKK,MAAEA,EAAKC,OAAEA,GAAWT,GAAW,GAc5C,OAbAA,EAAU,CACNO,KAAAA,EACAE,OAAAA,EACAN,MAAOA,GAAS,GAChBK,MAAOE,EAAMF,GAAS,WAGpBX,EAAGG,GAELO,EAAKI,WACLX,EAAQS,OAASF,QACXK,QAAQC,IAAIN,EAAKI,SAASG,KAAIC,GAASd,EAAec,EAAOlB,EAAIG,OAEpEA,EASX,SAASM,EAAmBC,EAAMV,EAAIG,GAClC,MAAMG,MAAEA,EAAKK,MAAEA,EAAKC,OAAEA,GAAWT,GAAW,GAc5C,OAbAA,EAAU,CACNO,KAAAA,EACAE,OAAAA,EACAN,MAAOA,GAAS,GAChBK,MAAOE,EAAMF,GAAS,KAG1BX,EAAGG,GAECO,EAAKI,WACLX,EAAQS,OAASF,EACjBA,EAAKI,SAASG,KAAIC,GAAST,EAAmBS,EAAOlB,EAAIG,MAEtDA,EAUX,SAASU,EAAMM,GAAO,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH"}