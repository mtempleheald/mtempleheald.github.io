function t(t){const r=async function(n){return await e(n.tree,t,{state:{treePayload:n}})};return r.sync=function(e){return n(e.tree,t,{state:{treePayload:e}})},r}async function e(t,n,a){const{state:c,scope:s,parent:i}=a||{};return a={file:t,parent:i,state:c||{},scope:r(s||{})},await n(a),t.children&&(a.parent=t,await Promise.all(t.children.map((t=>e(t,n,a))))),a}function n(t,e,a){const{state:c,scope:s,parent:i}=a||{};return a={file:t,parent:i,state:c||{},scope:r(s||{})},e(a),t.children&&(a.parent=t,t.children.map((t=>n(t,e,a)))),a}function r(t){return JSON.parse(JSON.stringify(t))}export{t as createNodeMiddleware,e as nodeMiddleware,n as nodeMiddlewareSync};
//# sourceMappingURL=middleware.js.map
