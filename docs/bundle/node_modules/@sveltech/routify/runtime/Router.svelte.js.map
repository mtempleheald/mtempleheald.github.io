{"version":3,"file":"Router.svelte.js","sources":["../../../../../../node_modules/@sveltech/routify/runtime/Router.svelte"],"sourcesContent":["<script>\n  import { setContext, onDestroy } from 'svelte'\n  import Route from './Route.svelte'\n  import Prefetcher from './Prefetcher.svelte'\n  import { init } from './navigator.js'\n  import { route, routes as routesStore, prefetchPath } from './store.js'\n  import { suppressWarnings } from './utils'\n  import defaultConfig from '../runtime.config'\n\n  export let routes\n  export let config = {}\n\n  let layouts\n  let navigator\n\n  window.routify = window.routify || {}\n  window.routify.inBrowser = !window.navigator.userAgent.match('jsdom')\n\n  Object.entries(config).forEach(([key, value]) => {\n    defaultConfig[key] = value\n  })\n\n  suppressWarnings()\n\n\n  const updatePage = (...args) => navigator && navigator.updatePage(...args)\n\n  setContext('routifyupdatepage', updatePage)\n\n  const callback = res => (layouts = res)\n\n  const cleanup = () => {\n    if (!navigator) return\n    navigator.destroy()\n    navigator = null\n  }\n\n  let initTimeout = null\n\n  // init is async to prevent a horrible bug that completely disable reactivity\n  // in the host component -- something like the component's update function is\n  // called before its fragment is created, and since the component is then seen\n  // as already dirty, it is never scheduled for update again, and remains dirty\n  // forever... I failed to isolate the precise conditions for the bug, but the\n  // faulty update is triggered by a change in the route store, and so offseting\n  // store initialization by one tick gives the host component some time to\n  // create its fragment. The root cause it probably a bug in Svelte with deeply\n  // intertwinned store and reactivity.\n  const doInit = () => {\n    clearTimeout(initTimeout)\n    initTimeout = setTimeout(() => {\n      cleanup()\n      navigator = init(routes, callback)\n      routesStore.set(routes)\n      navigator.updatePage()\n    })\n  }\n\n  $: if (routes) doInit()\n\n  onDestroy(cleanup)\n</script>\n\n{#if layouts && $route !== null}\n  <Route {layouts} isRoot={true} />\n{/if}\n\n\n<Prefetcher />"],"names":["ctx","layouts","navigator","routes","config","window","routify","inBrowser","userAgent","match","Object","entries","forEach","key","value","defaultConfig","suppressWarnings","setContext","args","updatePage","callback","res","cleanup","destroy","initTimeout","onDestroy","clearTimeout","setTimeout","init","routesStore","set"],"mappings":"ooBAgE2B,8MADtBA,MAAsB,OAAXA,wHAAXA,MAAsB,OAAXA,0QAnDVC,EACAC,UAJOC,aACAC,QAKXC,OAAOC,QAAUD,OAAOC,YACxBD,OAAOC,QAAQC,WAAaF,OAAOH,UAAUM,UAAUC,MAAM,SAE7DC,OAAOC,QAAQP,GAAQQ,WAAUC,EAAKC,MACpCC,EAAcF,GAAOC,KAGvBE,IAKAC,EAAW,yBAFYC,IAAShB,GAAaA,EAAUiB,cAAcD,WAI/DE,EAAWC,OAAQpB,EAAUoB,GAE7BC,OACCpB,IACLA,EAAUqB,UACVrB,EAAY,WAGVsB,EAAc,YAuBlBC,EAAUH,2GAFHnB,IATLuB,aAAaF,GACbA,EAAcG,iBACZL,IACApB,EAAY0B,EAAKzB,EAAQiB,GACzBS,EAAYC,IAAI3B,GAChBD,EAAUiB"}