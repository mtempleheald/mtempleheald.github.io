{"version":3,"file":"Route.svelte.js","sources":["../../../../../../node_modules/@sveltech/routify/runtime/Route.svelte"],"sourcesContent":["<script>\n  // @ts-check\n  /** @typedef {{component():*, path: string}} Decorator */\n  /** @typedef {ClientNode | Decorator} LayoutOrDecorator */\n  /**\n   * @typedef {Object} Context\n   * @prop {ClientNode} layout\n   * @prop {ClientNode} component\n   * @prop {LayoutOrDecorator} child\n   * @prop {SvelteComponent} ComponentFile\n   * */\n\n  import '../typedef.js'\n  import { getContext, setContext, onDestroy, onMount, tick } from 'svelte'\n  import { writable, get } from 'svelte/store'\n  import { metatags, afterPageLoad } from './helpers.js'\n  import { route, routes, rootContext } from './store'\n  import { handleScroll } from './utils'\n  import { onAppLoaded } from './utils/onAppLoaded.js'\n\n  /** @type {LayoutOrDecorator[]} */\n  export let layouts = []\n  export let scoped = {}\n  export let Decorator = null\n  export let childOfDecorator = false\n  export let isRoot = false\n\n  let scopedSync = {}\n  let isDecorator = false\n\n  /** @type {HTMLElement} */\n  let parentElement\n\n  /** @type {LayoutOrDecorator} */\n  let layout = null\n\n  /** @type {LayoutOrDecorator} */\n  let lastLayout = null\n\n  /** @type {LayoutOrDecorator[]} */\n  let remainingLayouts = []\n\n  const context = writable(null)\n\n  /** @type {import(\"svelte/store\").Writable<Context>} */\n  const parentContextStore = getContext('routify')\n\n  isDecorator = Decorator && !childOfDecorator\n  setContext('routify', context)\n\n  $: if (isDecorator) {\n    const decoratorLayout = {\n      component: () => Decorator,\n      path: `${layouts[0].path}__decorator`,\n      isDecorator: true,\n    }\n    layouts = [decoratorLayout, ...layouts]\n  }\n\n  $: [layout, ...remainingLayouts] = layouts\n\n  /** @param {HTMLElement} el */\n  function setParent(el) {\n    parentElement = el.parentElement\n  }\n\n  /** @param {SvelteComponent} componentFile */\n  function onComponentLoaded(componentFile) {\n    /** @type {Context} */\n    const parentContext = get(parentContextStore)\n\n    scopedSync = { ...scoped }\n    lastLayout = layout\n    if (remainingLayouts.length === 0) onLastComponentLoaded()\n    const ctx = {\n      layout: isDecorator ? parentContext.layout : layout,\n      component: layout,\n      route: $route,\n      componentFile,\n      child: isDecorator\n        ? parentContext.child\n        : get(context) && get(context).child,\n    }\n    context.set(ctx)\n    if (isRoot) rootContext.set(ctx)\n\n    if (parentContext && !isDecorator)\n      parentContextStore.update(store => {\n        store.child = layout || store.child\n        return store\n      })\n  }\n\n  /**  @param {LayoutOrDecorator} layout */\n  function setComponent(layout) {\n    let PendingComponent = layout.component()\n    if (PendingComponent instanceof Promise)\n      PendingComponent.then(onComponentLoaded)\n    else onComponentLoaded(PendingComponent)\n  }\n  $: setComponent(layout)\n\n  async function onLastComponentLoaded() {\n    afterPageLoad._hooks.forEach(hook => hook(layout.api))\n    await tick()\n    handleScroll(parentElement)\n    if (!window['routify'].appLoaded) {\n      const pagePath = $context.component.path\n      const routePath = $route.path\n      const isOnCurrentRoute = pagePath === routePath //maybe we're getting redirected\n\n      // Let everyone know the last child has rendered\n      if (!window['routify'].stopAutoReady && isOnCurrentRoute) {\n        onAppLoaded({ path: pagePath, metatags })\n      }\n    }\n  }\n</script>\n\n{#if $context}\n  {#if $context.component.isLayout === false}\n    {#each [$context] as { component, componentFile } (component.path)}\n      <svelte:component\n        this={componentFile}\n        let:scoped={scopeToChild}\n        let:decorator\n        {scoped}\n        {scopedSync}\n        {...layout.param || {}} />\n    {/each}\n    <!-- we need to check for remaining layouts, in case this component is a destroyed layout -->\n  {:else if remainingLayouts.length}\n    {#each [$context] as { component, componentFile } (component.path)}\n      <svelte:component\n        this={componentFile}\n        let:scoped={scopeToChild}\n        let:decorator\n        {scoped}\n        {scopedSync}\n        {...layout.param || {}}>\n        <svelte:self\n          layouts={[...remainingLayouts]}\n          Decorator={typeof decorator !== 'undefined' ? decorator : Decorator}\n          childOfDecorator={layout.isDecorator}\n          scoped={{ ...scoped, ...scopeToChild }} />\n      </svelte:component>\n    {/each}\n  {/if}\n{/if}\n\n<!-- get the parent element for scroll functionality -->\n{#if !parentElement}\n  <span use:setParent />\n{/if}\n"],"names":["ctx","component","isLayout","length","path","isDecorator","param","scopeToChild","parentElement","layouts","scoped","Decorator","childOfDecorator","isRoot","scopedSync","layout","remainingLayouts","context","writable","parentContextStore","getContext","onComponentLoaded","componentFile","parentContext","get","afterPageLoad","_hooks","forEach","hook","api","tick","handleScroll","window","appLoaded","pagePath","$context","isOnCurrentRoute","$route","stopAutoReady","onAppLoaded","metatags","onLastComponentLoaded","route","child","set","rootContext","update","store","setContext","decoratorLayout","PendingComponent","Promise","then","setComponent","el"],"mappings":"shCAwHuC,IAAhCA,KAASC,UAAUC,WAWdF,KAAiBG,qXACjBH,iBAA2CA,MAAUI,6MAArDJ,sOAXAA,iBAA2CA,MAAUI,sMAArDJ,yPAoBWA,qBACmB,IAAdA,MAA4BA,MAAYA,sBACxCA,KAAOK,uBACZL,QAAWA,6GAHXA,qCACmB,IAAdA,MAA4BA,MAAYA,gCACxCA,KAAOK,uCACZL,QAAWA,+KALtBA,KAAOM,iBALLN,wDACMO,wCAAAA,8UAIRP,KAAOM,mEALLN,qVANFA,KAAOM,iBALLN,wSAKFA,KAAOM,0BALLN,uaAJTA,cAgCCA,qHAhCDA,8GAgCCA,mMAxHAQ,WAVOC,gBACAC,mBACAC,EAAY,0BACZC,GAAmB,aACnBC,GAAS,KAEhBC,KACAT,GAAc,EAMdU,EAAS,KAMTC,WAEEC,EAAUC,EAAS,iCAGnBC,EAAqBC,EAAW,oBAsB7BC,EAAkBC,SAEnBC,EAAgBC,EAAIL,OAE1BL,MAAkBJ,IAEc,IAA5BM,EAAiBb,4BA8BrBsB,EAAcC,OAAOC,SAAQC,GAAQA,EAAKb,EAAOc,aAC3CC,IACNC,EAAavB,IACRwB,OAAgB,QAAEC,iBACfC,EAAWC,EAASlC,UAAUG,KAE9BgC,EAAmBF,IADPG,EAAOjC,MAIpB4B,OAAgB,QAAEM,eAAiBF,GACtCG,GAAcnC,KAAM8B,EAAUM,SAAAA,KAxCCC,SAC7BzC,GACJe,OAAQV,EAAckB,EAAcR,OAASA,EAC7Cd,UAAWc,EACX2B,MAAOL,EACPf,cAAAA,EACAqB,MAAOtC,EACHkB,EAAcoB,MACdnB,EAAIP,IAAYO,EAAIP,GAAS0B,OAEnC1B,EAAQ2B,IAAI5C,GACRa,GAAQgC,EAAYD,IAAI5C,GAExBuB,IAAkBlB,GACpBc,EAAmB2B,QAAOC,IACxBA,EAAMJ,MAAQ5B,GAAUgC,EAAMJ,MACvBI,YA1Cb1C,EAAcM,IAAcC,EAC5BoC,EAAW,UAAW/B,yOAEfZ,SACC4C,GACJhD,cAAiBU,EACjBP,KAASK,EAAQ,GAAGL,mBACpBC,aAAa,OAEfI,GAAWwC,KAAoBxC,yBAG7BM,KAAWC,GAAoBP,4DAmCbM,OAChBmC,EAAmBnC,EAAOd,YAC1BiD,aAA4BC,QAC9BD,EAAiBE,KAAK/B,GACnBA,EAAkB6B,GAEtBG,CAAatC,8BAtCGuC,OACjB9C,EAAgB8C,EAAG9C"}