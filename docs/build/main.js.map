{"version":3,"file":"main.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte-navigator/src/utils.js","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-navigator/src/contexts.js","../../node_modules/svelte-navigator/src/paths.js","../../node_modules/svelte-navigator/src/warning.js","../../node_modules/svelte-navigator/src/routes.js","../../node_modules/svelte-navigator/src/history.js","../../node_modules/svelte-navigator/src/a11y.js","../../node_modules/svelte-navigator/src/Router.svelte","../../node_modules/svelte-navigator/src/hooks.js","../../node_modules/svelte-navigator/src/Route.svelte","../../node_modules/svelte-navigator/src/Link.svelte","../../node_modules/snarkdown/dist/snarkdown.es.js","../../src/common.js","../../src/Blog.svelte","../../src/Topic.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.4' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nexport const isUndefined = value => typeof value === \"undefined\";\n\nexport const isFunction = value => typeof value === \"function\";\n\nexport const isNumber = value => typeof value === \"number\";\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nexport function shouldNavigate(event) {\n  return (\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n  );\n}\n\nexport function createCounter() {\n  let i = 0;\n  /**\n   * Returns an id and increments the internal state\n   * @returns {number}\n   */\n  return () => i++;\n}\n\n/**\n * Create a globally unique id\n *\n * @returns {string} An id\n */\nexport function createGlobalId() {\n  return Math.random()\n    .toString(36)\n    .substring(2);\n}\n\nexport function findClosest(tagName, element) {\n  while (element && element.tagName !== tagName) {\n    // eslint-disable-next-line no-param-reassign\n    element = element.parentNode;\n  }\n  return element;\n}\n\nexport const isSSR = typeof window === \"undefined\";\n\nexport function addListener(target, type, handler) {\n  target.addEventListener(type, handler);\n  return () => target.removeEventListener(type, handler);\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","/*\n * Adapted from https://github.com/EmilTholin/svelte-routing\n *\n * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n */\n\nconst createKey = ctxName => `@@svnav-ctx__${ctxName}`;\n\n// Use strings instead of objects, so different versions of\n// svelte-navigator can potentially still work together\nexport const LOCATION = createKey(\"LOCATION\");\nexport const ROUTER = createKey(\"ROUTER\");\nexport const ROUTE = createKey(\"ROUTE\");\nexport const ROUTE_PARAMS = createKey(\"ROUTE_PARAMS\");\nexport const FOCUS_ELEM = createKey(\"FOCUS_ELEM\");\n","export const paramRegex = /^:(.+)/;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport const startsWith = (string, search) =>\n  string.substr(0, search.length) === search;\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isRootSegment = segment => segment === \"\";\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isDynamic = segment => paramRegex.test(segment);\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nexport const isSplat = segment => segment[0] === \"*\";\n\n/**\n * Strip potention splat and splatname of the end of a path\n * @param {string} str\n * @return {string}\n */\nexport const stripSplat = str => str.replace(/\\*.*$/, \"\");\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nexport const stripSlashes = str => str.replace(/(^\\/+|\\/+$)/g, \"\");\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nexport function segmentize(uri, filterFalsy = false) {\n  const segments = stripSlashes(uri).split(\"/\");\n  return filterFalsy ? segments.filter(Boolean) : segments;\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nexport const addQuery = (pathname, query) =>\n  pathname + (query ? `?${query}` : \"\");\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nexport function combinePaths(basepath, path) {\n  const barePath =\n    path === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`;\n  return `${stripSlashes(barePath)}/`;\n}\n\n/**\n * Normalizes a basepath\n *\n * @param {string} path\n * @returns {string}\n *\n * @example\n * normalizePath(\"base/path/\") // -> \"/base/path\"\n */\nexport const normalizePath = path => `/${stripSlashes(path)}`;\n\n/**\n * Joins and normalizes multiple path fragments\n *\n * @param {...string} pathFragments\n * @returns {string}\n */\nexport function join(...pathFragments) {\n  const joinFragment = fragment => segmentize(fragment, true).join(\"/\");\n  const joinedSegments = pathFragments.map(joinFragment).join(\"/\");\n  return normalizePath(joinedSegments);\n}\n","import { isFunction } from \"./utils\";\n\n// We start from 1 here, so we can check if an origin id has been passed\n// by using `originId || <fallback>`\nexport const LINK_ID = 1;\nexport const ROUTE_ID = 2;\nexport const ROUTER_ID = 3;\nexport const USE_FOCUS_ID = 4;\nexport const USE_LOCATION_ID = 5;\nexport const USE_MATCH_ID = 6;\nexport const USE_NAVIGATE_ID = 7;\nexport const USE_PARAMS_ID = 8;\nexport const USE_RESOLVABLE_ID = 9;\nexport const USE_RESOLVE_ID = 10;\nexport const NAVIGATE_ID = 11;\n\nconst labels = {\n  [LINK_ID]: \"Link\",\n  [ROUTE_ID]: \"Route\",\n  [ROUTER_ID]: \"Router\",\n  [USE_FOCUS_ID]: \"useFocus\",\n  [USE_LOCATION_ID]: \"useLocation\",\n  [USE_MATCH_ID]: \"useMatch\",\n  [USE_NAVIGATE_ID]: \"useNavigate\",\n  [USE_PARAMS_ID]: \"useParams\",\n  [USE_RESOLVABLE_ID]: \"useResolvable\",\n  [USE_RESOLVE_ID]: \"useResolve\",\n  [NAVIGATE_ID]: \"navigate\",\n};\n\nexport const createLabel = labelId => labels[labelId];\n\nexport function createIdentifier(labelId, props) {\n  let attr;\n  if (labelId === ROUTE_ID) {\n    attr = props.path ? `path=\"${props.path}\"` : \"default\";\n  } else if (labelId === LINK_ID) {\n    attr = `to=\"${props.to}\"`;\n  } else if (labelId === ROUTER_ID) {\n    attr = `basepath=\"${props.basepath || \"\"}\"`;\n  }\n  return `<${createLabel(labelId)} ${attr || \"\"} />`;\n}\n\nexport function createMessage(labelId, message, props, originId) {\n  const origin = props && createIdentifier(originId || labelId, props);\n  const originMsg = origin ? `\\n\\nOccurred in: ${origin}` : \"\";\n  const label = createLabel(labelId);\n  const msg = isFunction(message) ? message(label) : message;\n  return `<${label}> ${msg}${originMsg}`;\n}\n\nexport const createMessageHandler = handler => (...args) =>\n  handler(createMessage(...args));\n\nexport const fail = createMessageHandler(message => {\n  throw new Error(message);\n});\n\n// eslint-disable-next-line no-console\nexport const warn = createMessageHandler(console.warn);\n","import {\n  segmentize,\n  join,\n  addQuery,\n  startsWith,\n  paramRegex,\n  isSplat,\n  isRootSegment,\n  isDynamic,\n  stripSplat,\n  normalizePath,\n} from \"./paths\";\nimport { ROUTER_ID, fail } from \"./warning\";\nimport { isUndefined } from \"./utils\";\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nexport function rankRoute(route, index) {\n  const score = route.default\n    ? 0\n    : segmentize(route.fullPath).reduce((acc, segment) => {\n        let nextScore = acc;\n        nextScore += SEGMENT_POINTS;\n\n        if (isRootSegment(segment)) {\n          nextScore += ROOT_POINTS;\n        } else if (isDynamic(segment)) {\n          nextScore += DYNAMIC_POINTS;\n        } else if (isSplat(segment)) {\n          nextScore -= SEGMENT_POINTS + SPLAT_PENALTY;\n        } else {\n          nextScore += STATIC_POINTS;\n        }\n\n        return nextScore;\n      }, 0);\n\n  return { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nexport function rankRoutes(routes) {\n  return (\n    routes\n      .map(rankRoute)\n      // If two routes have the exact same score, we go by index instead\n      .sort((a, b) => {\n        if (a.score < b.score) {\n          return 1;\n        }\n        if (a.score > b.score) {\n          return -1;\n        }\n        return a.index - b.index;\n      })\n  );\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { fullPath, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nexport function pick(routes, uri) {\n  let bestMatch;\n  let defaultMatch;\n\n  const [uriPathname] = uri.split(\"?\");\n  const uriSegments = segmentize(uriPathname);\n  const isRootUri = uriSegments[0] === \"\";\n  const ranked = rankRoutes(routes);\n\n  for (let i = 0, l = ranked.length; i < l; i++) {\n    const { route } = ranked[i];\n    let missed = false;\n    const params = {};\n\n    // eslint-disable-next-line no-shadow\n    const createMatch = uri => ({ ...route, params, uri });\n\n    if (route.default) {\n      defaultMatch = createMatch(uri);\n      continue;\n    }\n\n    const routeSegments = segmentize(route.fullPath);\n    const max = Math.max(uriSegments.length, routeSegments.length);\n    let index = 0;\n\n    for (; index < max; index++) {\n      const routeSegment = routeSegments[index];\n      const uriSegment = uriSegments[index];\n\n      if (!isUndefined(routeSegment) && isSplat(routeSegment)) {\n        // Hit a splat, just grab the rest, and return a match\n        // uri:   /files/documents/work\n        // route: /files/* or /files/*splatname\n        const splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n        params[splatName] = uriSegments\n          .slice(index)\n          .map(decodeURIComponent)\n          .join(\"/\");\n        break;\n      }\n\n      if (isUndefined(uriSegment)) {\n        // URI is shorter than the route, no match\n        // uri:   /users\n        // route: /users/:userId\n        missed = true;\n        break;\n      }\n\n      const dynamicMatch = paramRegex.exec(routeSegment);\n\n      if (dynamicMatch && !isRootUri) {\n        const value = decodeURIComponent(uriSegment);\n        params[dynamicMatch[1]] = value;\n      } else if (routeSegment !== uriSegment) {\n        // Current segments don't match, not dynamic, not splat, so no match\n        // uri:   /users/123/settings\n        // route: /users/:id/profile\n        missed = true;\n        break;\n      }\n    }\n\n    if (!missed) {\n      bestMatch = createMatch(join(...uriSegments.slice(0, index)));\n      break;\n    }\n  }\n\n  return bestMatch || defaultMatch || null;\n}\n\n/**\n * Check if the `route.fullPath` matches the `uri`.\n * @param {Object} route\n * @param {string} uri\n * @return {?object}\n */\nexport function match(route, uri) {\n  return pick([route], uri);\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nexport function resolve(to, base) {\n  // /foo/bar, /baz/qux => /foo/bar\n  if (startsWith(to, \"/\")) {\n    return to;\n  }\n\n  const [toPathname, toQuery] = to.split(\"?\");\n  const [basePathname] = base.split(\"?\");\n  const toSegments = segmentize(toPathname);\n  const baseSegments = segmentize(basePathname);\n\n  // ?a=b, /users?b=c => /users?a=b\n  if (toSegments[0] === \"\") {\n    return addQuery(basePathname, toQuery);\n  }\n\n  // profile, /users/789 => /users/789/profile\n  if (!startsWith(toSegments[0], \".\")) {\n    const pathname = baseSegments.concat(toSegments).join(\"/\");\n    return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n  }\n\n  // ./       , /users/123 => /users/123\n  // ../      , /users/123 => /users\n  // ../..    , /users/123 => /\n  // ../../one, /a/b/c/d   => /a/b/one\n  // .././one , /a/b/c/d   => /a/b/c/one\n  const allSegments = baseSegments.concat(toSegments);\n  const segments = [];\n\n  allSegments.forEach(segment => {\n    if (segment === \"..\") {\n      segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return addQuery(`/${segments.join(\"/\")}`, toQuery);\n}\n\n/**\n * Normalizes a location for consumption by `Route` children and the `Router`.\n * It removes the apps basepath from the pathname\n * and sets default values for `search` and `hash` properties.\n *\n * @param {Object} location The current global location supplied by the history component\n * @param {string} basepath The applications basepath (i.e. when serving from a subdirectory)\n *\n * @returns The normalized location\n */\nexport function normalizeLocation(location, basepath) {\n  const { pathname, hash = \"\", search = \"\", state } = location;\n  const baseSegments = segmentize(basepath, true);\n  const pathSegments = segmentize(pathname, true);\n  while (baseSegments.length) {\n    if (baseSegments[0] !== pathSegments[0]) {\n      fail(\n        ROUTER_ID,\n        `Invalid state: All locations must begin with the basepath \"${basepath}\", found \"${pathname}\"`,\n      );\n    }\n    baseSegments.shift();\n    pathSegments.shift();\n  }\n  return {\n    pathname: join(...pathSegments),\n    hash,\n    search,\n    state,\n  };\n}\n\nconst normalizeUrlFragment = frag => (frag.length === 1 ? \"\" : frag);\n\n/**\n * Creates a location object from an url.\n * It is used to create a location from the url prop used in SSR\n *\n * @param {string} url The url string (e.g. \"/path/to/somewhere\")\n *\n * @returns {{ pathname: string; search: string; hash: string }} The location\n */\nexport function createLocation(url) {\n  const searchIndex = url.indexOf(\"?\");\n  const hashIndex = url.indexOf(\"#\");\n  const hasSearchIndex = searchIndex !== -1;\n  const hasHashIndex = hashIndex !== -1;\n  const hash = hasHashIndex ? normalizeUrlFragment(url.substr(hashIndex)) : \"\";\n  const pathnameAndSearch = hasHashIndex ? url.substr(0, hashIndex) : url;\n  const search = hasSearchIndex\n    ? normalizeUrlFragment(pathnameAndSearch.substr(searchIndex))\n    : \"\";\n  const pathname = hasSearchIndex\n    ? pathnameAndSearch.substr(0, searchIndex)\n    : pathnameAndSearch;\n  return { pathname, search, hash };\n}\n\n/**\n * Resolves a link relative to the parent Route and the Routers basepath.\n *\n * @param {string} path The given path, that will be resolved\n * @param {string} routeBase The current Routes base path\n * @param {string} appBase The basepath of the app. Used, when serving from a subdirectory\n * @returns {string} The resolved path\n *\n * @example\n * resolveLink(\"relative\", \"/routeBase\", \"/\") // -> \"/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/\") // -> \"/absolute\"\n * resolveLink(\"relative\", \"/routeBase\", \"/base\") // -> \"/base/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/base\") // -> \"/base/absolute\"\n */\nexport function resolveLink(path, routeBase, appBase) {\n  return join(appBase, resolve(path, routeBase));\n}\n\n/**\n * Get the uri for a Route, by matching it against the current location.\n *\n * @param {string} routePath The Routes resolved path\n * @param {string} pathname The current locations pathname\n */\nexport function extractBaseUri(routePath, pathname) {\n  const fullPath = normalizePath(stripSplat(routePath));\n  const baseSegments = segmentize(fullPath, true);\n  const pathSegments = segmentize(pathname, true).slice(0, baseSegments.length);\n  const routeMatch = match({ fullPath }, join(...pathSegments));\n  return routeMatch && routeMatch.uri;\n}\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nimport { createLocation } from \"./routes\";\nimport { createGlobalId, isSSR, isNumber, addListener } from \"./utils\";\nimport { warn, NAVIGATE_ID } from \"./warning\";\n\nconst POP = \"POP\";\nconst PUSH = \"PUSH\";\nconst REPLACE = \"REPLACE\";\n\nfunction getLocation(source) {\n  return {\n    ...source.location,\n    pathname: encodeURI(decodeURI(source.location.pathname)),\n    state: source.history.state,\n    _key: (source.history.state && source.history.state._key) || \"initial\",\n  };\n}\n\nfunction createHistory(source) {\n  let listeners = [];\n  let location = getLocation(source);\n  let action = POP;\n\n  const notifyListeners = (listenerFns = listeners) =>\n    listenerFns.forEach(listener => listener({ location, action }));\n\n  return {\n    get location() {\n      return location;\n    },\n    listen(listener) {\n      listeners.push(listener);\n\n      const popstateListener = () => {\n        location = getLocation(source);\n        action = POP;\n        notifyListeners([listener]);\n      };\n\n      // Call listener when it is registered\n      notifyListeners([listener]);\n\n      const unlisten = addListener(source, \"popstate\", popstateListener);\n      return () => {\n        unlisten();\n        listeners = listeners.filter(fn => fn !== listener);\n      };\n    },\n    /**\n     * Navigate to a new absolute route.\n     *\n     * @param {string|number} to The path to navigate to.\n     *\n     * If `to` is a number we will navigate to the stack entry index + `to`\n     * (-> `navigate(-1)`, is equivalent to hitting the back button of the browser)\n     * @param {Object} options\n     * @param {*} [options.state] The state will be accessible through `location.state`\n     * @param {boolean} [options.replace=false] Replace the current entry in the history\n     * stack, instead of pushing on a new one\n     */\n    navigate(to, options) {\n      const { state = {}, replace = false } = options || {};\n      action = replace ? REPLACE : PUSH;\n      if (isNumber(to)) {\n        if (options) {\n          warn(\n            NAVIGATE_ID,\n            \"Navigation options (state or replace) are not supported, \" +\n              \"when passing a number as the first argument to navigate. \" +\n              \"They are ignored.\",\n          );\n        }\n        action = POP;\n        source.history.go(to);\n      } else {\n        const keyedState = { ...state, _key: createGlobalId() };\n        // try...catch iOS Safari limits to 100 pushState calls\n        try {\n          source.history[replace ? \"replaceState\" : \"pushState\"](\n            keyedState,\n            \"\",\n            to,\n          );\n        } catch (e) {\n          source.location[replace ? \"replace\" : \"assign\"](to);\n        }\n      }\n\n      location = getLocation(source);\n      notifyListeners();\n    },\n  };\n}\n\nfunction createStackFrame(state, uri) {\n  return { ...createLocation(uri), state };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n  let index = 0;\n  let stack = [createStackFrame(null, initialPathname)];\n\n  return {\n    // This is just for testing...\n    get entries() {\n      return stack;\n    },\n    get location() {\n      return stack[index];\n    },\n    addEventListener() {},\n    removeEventListener() {},\n    history: {\n      get state() {\n        return stack[index].state;\n      },\n      pushState(state, title, uri) {\n        index++;\n        // Throw away anything in the stack with an index greater than the current index.\n        // This happens, when we go back using `go(-n)`. The index is now less than `stack.length`.\n        // If we call `go(+n)` the stack entries with an index greater than the current index can\n        // be reused.\n        // However, if we navigate to a path, instead of a number, we want to create a new branch\n        // of navigation.\n        stack = stack.slice(0, index);\n        stack.push(createStackFrame(state, uri));\n      },\n      replaceState(state, title, uri) {\n        stack[index] = createStackFrame(state, uri);\n      },\n      go(to) {\n        const newIndex = index + to;\n        if (newIndex < 0 || newIndex > stack.length - 1) {\n          return;\n        }\n        index = newIndex;\n      },\n    },\n  };\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = !!(\n  !isSSR &&\n  window.document &&\n  window.document.createElement\n);\n// Use memory history in iframes (for example in Svelte REPL)\nconst isEmbeddedPage = !isSSR && window.location.origin === \"null\";\nconst globalHistory = createHistory(\n  canUseDOM && !isEmbeddedPage ? window : createMemorySource(),\n);\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","import { get } from \"svelte/store\";\nimport { tick } from \"svelte\";\nimport { warn, ROUTER_ID, ROUTE_ID } from \"./warning\";\nimport { addListener } from \"./utils\";\n\n// We need to keep the focus candidate in a separate file, so svelte does\n// not update, when we mutate it.\n// Also, we need a single global reference, because taking focus needs to\n// work globally, even if we have multiple top level routers\n// eslint-disable-next-line import/no-mutable-exports\nexport let focusCandidate = null;\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let initialNavigation = true;\n\n/**\n * Check if RouterA is above RouterB in the document\n * @param {number} routerIdA The first Routers id\n * @param {number} routerIdB The second Routers id\n */\nfunction isAbove(routerIdA, routerIdB) {\n  const routerMarkers = document.querySelectorAll(\"[data-svnav-router]\");\n  for (let i = 0; i < routerMarkers.length; i++) {\n    const node = routerMarkers[i];\n    const currentId = Number(node.dataset.svnavRouter);\n    if (currentId === routerIdA) return true;\n    if (currentId === routerIdB) return false;\n  }\n  return false;\n}\n\n/**\n * Check if a Route candidate is the best choice to move focus to,\n * and store the best match.\n * @param {{\n     level: number;\n     routerId: number;\n     route: {\n       id: number;\n       focusElement: import(\"svelte/store\").Readable<Promise<Element>|null>;\n     }\n   }} item A Route candidate, that updated and is visible after a navigation\n */\nexport function pushFocusCandidate(item) {\n  if (\n    // Best candidate if it's the only candidate...\n    !focusCandidate ||\n    // Route is nested deeper, than previous candidate\n    // -> Route change was triggered in the deepest affected\n    // Route, so that's were focus should move to\n    item.level > focusCandidate.level ||\n    // If the level is identical, we want to focus the first Route in the document,\n    // so we pick the first Router lookin from page top to page bottom.\n    (item.level === focusCandidate.level &&\n      isAbove(item.routerId, focusCandidate.routerId))\n  ) {\n    focusCandidate = item;\n  }\n}\n\n/**\n * Reset the focus candidate.\n */\nexport function clearFocusCandidate() {\n  focusCandidate = null;\n}\n\nexport function initialNavigationOccurred() {\n  initialNavigation = false;\n}\n\n/*\n * `focus` Adapted from https://github.com/oaf-project/oaf-side-effects/blob/master/src/index.ts\n *\n * https://github.com/oaf-project/oaf-side-effects/blob/master/LICENSE\n */\nexport function focus(elem) {\n  if (!elem) return false;\n  const TABINDEX = \"tabindex\";\n  try {\n    if (!elem.hasAttribute(TABINDEX)) {\n      elem.setAttribute(TABINDEX, \"-1\");\n      let unlisten;\n      // We remove tabindex after blur to avoid weird browser behavior\n      // where a mouse click can activate elements with tabindex=\"-1\".\n      const blurListener = () => {\n        elem.removeAttribute(TABINDEX);\n        unlisten();\n      };\n      unlisten = addListener(elem, \"blur\", blurListener);\n    }\n    elem.focus();\n    return document.activeElement === elem;\n  } catch (e) {\n    // Apparently trying to focus a disabled element in IE can throw.\n    // See https://stackoverflow.com/a/1600194/2476884\n    return false;\n  }\n}\n\nexport function isEndMarker(elem, id) {\n  return Number(elem.dataset.svnavRouteEnd) === id;\n}\n\nexport function isHeading(elem) {\n  return /^H[1-6]$/i.test(elem.tagName);\n}\n\nfunction query(selector, parent = document) {\n  return parent.querySelector(selector);\n}\n\nexport function queryHeading(id) {\n  const marker = query(`[data-svnav-route-start=\"${id}\"]`);\n  let current = marker.nextElementSibling;\n  while (!isEndMarker(current, id)) {\n    if (isHeading(current)) {\n      return current;\n    }\n    const heading = query(\"h1,h2,h3,h4,h5,h6\", current);\n    if (heading) {\n      return heading;\n    }\n    current = current.nextElementSibling;\n  }\n  return null;\n}\n\nexport function handleFocus(route) {\n  Promise.resolve(get(route.focusElement)).then(elem => {\n    const focusElement = elem || queryHeading(route.id);\n    if (!focusElement) {\n      warn(\n        ROUTER_ID,\n        \"Could not find an element to focus. \" +\n          \"You should always render a header for accessibility reasons, \" +\n          'or set a custom focus element via the \"useFocus\" hook. ' +\n          \"If you don't want this Route or Router to manage focus, \" +\n          'pass \"primary={false}\" to it.',\n        route,\n        ROUTE_ID,\n      );\n    }\n    const headingFocused = focus(focusElement);\n    if (headingFocused) return;\n    focus(document.documentElement);\n  });\n}\n\nexport const createTriggerFocus = (a11yConfig, announcementText, location) => (\n  manageFocus,\n  announceNavigation,\n) =>\n  // Wait until the dom is updated, so we can look for headings\n  tick().then(() => {\n    if (!focusCandidate || initialNavigation) {\n      initialNavigationOccurred();\n      return;\n    }\n    if (manageFocus) {\n      handleFocus(focusCandidate.route);\n    }\n    if (a11yConfig.announcements && announceNavigation) {\n      const { path, fullPath, meta, params, uri } = focusCandidate.route;\n      const announcementMessage = a11yConfig.createAnnouncement(\n        { path, fullPath, meta, params, uri },\n        get(location),\n      );\n      Promise.resolve(announcementMessage).then(message => {\n        announcementText.set(message);\n      });\n    }\n    clearFocusCandidate();\n  });\n\nexport const visuallyHiddenStyle =\n  \"position:absolute;\" +\n  \"width:1px;\" +\n  \"height:1px;\" +\n  \"padding:0;\" +\n  \"overflow:hidden;\" +\n  \"clip:rect(0,0,0,0);\" +\n  \"white-space:nowrap;\" +\n  \"border:0;\";\n","<script context=\"module\">\n  // eslint-disable-next-line import/order\n  import { createCounter } from \"./utils\";\n\n  const createId = createCounter();\n</script>\n\n<script>\n  /*\n   * Adapted from https://github.com/EmilTholin/svelte-routing\n   *\n   * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n   */\n\n  import { getContext, setContext, onMount } from \"svelte\";\n  import { writable } from \"svelte/store\";\n  import { LOCATION, ROUTER } from \"./contexts\";\n  import { globalHistory } from \"./history\";\n  import { normalizePath } from \"./paths\";\n  import { pick, match, normalizeLocation, createLocation } from \"./routes\";\n  import { isSSR } from \"./utils\";\n  import { warn, ROUTER_ID } from \"./warning\";\n  import {\n    pushFocusCandidate,\n    visuallyHiddenStyle,\n    createTriggerFocus,\n  } from \"./a11y\";\n\n  const defaultBasepath = \"/\";\n\n  export let basepath = defaultBasepath;\n  export let url = null;\n  export let history = globalHistory;\n  export let primary = true;\n  export let a11y = {};\n\n  const a11yConfig = {\n    createAnnouncement: route => `Navigated to ${route.uri}`,\n    announcements: true,\n    ...a11y,\n  };\n\n  // Remember the initial `basepath`, so we can fire a warning\n  // when the user changes it later\n  const initialBasepath = basepath;\n  const normalizedBasepath = normalizePath(basepath);\n\n  const locationContext = getContext(LOCATION);\n  const routerContext = getContext(ROUTER);\n\n  const isTopLevelRouter = !locationContext;\n  const routerId = createId();\n\n  const manageFocus = primary && !(routerContext && !routerContext.manageFocus);\n  const announcementText = writable(\"\");\n\n  const routes = writable([]);\n  const activeRoute = writable(null);\n  // Used in SSR to synchronously set that a Route is active.\n  let hasActiveRoute = false;\n\n  // Nesting level of router.\n  // We will need this to identify sibling routers, when moving\n  // focus on navigation, so we can focus the first possible router\n  const level = isTopLevelRouter ? 0 : routerContext.level + 1;\n\n  // If we're running an SSR we force the location to the `url` prop\n  const getInitialLocation = () =>\n    normalizeLocation(\n      isSSR ? createLocation(url) : history.location,\n      normalizedBasepath,\n    );\n  const location = isTopLevelRouter\n    ? writable(getInitialLocation())\n    : locationContext;\n  const prevLocation = writable($location);\n\n  const triggerFocus = createTriggerFocus(\n    a11yConfig,\n    announcementText,\n    location,\n  );\n\n  const createRouteFilter = routeId => routeList =>\n    routeList.filter(routeItem => routeItem.id !== routeId);\n\n  function registerRoute(route) {\n    if (isSSR) {\n      // In SSR we should set the activeRoute immediately if it is a match.\n      // If there are more Routes being registered after a match is found,\n      // we just skip them.\n      if (hasActiveRoute) {\n        return;\n      }\n\n      const matchingRoute = match(route, $location.pathname);\n      if (matchingRoute) {\n        hasActiveRoute = true;\n        // Return the match in SSR mode, so the matched Route can use it immediatly.\n        // Waiting for activeRoute to update does not work, because it updates\n        // after the Route is initialized\n        return matchingRoute; // eslint-disable-line consistent-return\n      }\n    } else {\n      routes.update(prevRoutes => {\n        // Remove an old version of the updated route,\n        // before pushing the new version\n        const nextRoutes = createRouteFilter(route.id)(prevRoutes);\n        nextRoutes.push(route);\n        return nextRoutes;\n      });\n    }\n  }\n\n  function unregisterRoute(routeId) {\n    routes.update(createRouteFilter(routeId));\n  }\n\n  if (!isTopLevelRouter && basepath !== defaultBasepath) {\n    warn(\n      ROUTER_ID,\n      'Only top-level Routers can have a \"basepath\" prop. It is ignored.',\n      { basepath },\n    );\n  }\n  $: if (basepath !== initialBasepath) {\n    warn(ROUTER_ID, 'You cannot change the \"basepath\" prop. It is ignored.');\n  }\n\n  // This reactive statement will be run when the Router is created\n  // when there are no Routes and then again the following tick, so it\n  // will not find an active Route in SSR and in the browser it will only\n  // pick an active Route after all Routes have been registered.\n  $: {\n    const bestMatch = pick($routes, $location.pathname);\n    activeRoute.set(bestMatch);\n  }\n\n  // Manage focus and announce navigation to screen reader users\n  $: {\n    if (isTopLevelRouter) {\n      const hasHash = !!$location.hash;\n      // When a hash is present in the url, we skip focus management, because\n      // focusing a different element will prevent in-page jumps (See #3)\n      const shouldManageFocus = !hasHash && manageFocus;\n      // We don't want to make an announcement, when the hash changes,\n      // but the active route stays the same\n      const announceNavigation =\n        !hasHash || $location.pathname !== $prevLocation.pathname;\n      triggerFocus(shouldManageFocus, announceNavigation);\n    }\n  }\n\n  // Queue matched Route, so top level Router can decide which Route to focus.\n  // Non primary Routers should just be ignored\n  $: if (manageFocus && $activeRoute && $activeRoute.primary) {\n    pushFocusCandidate({ level, routerId, route: $activeRoute });\n  }\n\n  if (isTopLevelRouter) {\n    // The topmost Router in the tree is responsible for updating\n    // the location store and supplying it through context.\n    onMount(() => {\n      const unlisten = history.listen(changedHistory => {\n        const normalizedLocation = normalizeLocation(\n          changedHistory.location,\n          normalizedBasepath,\n        );\n        prevLocation.set($location);\n        location.set(normalizedLocation);\n      });\n\n      return unlisten;\n    });\n\n    setContext(LOCATION, location);\n  }\n\n  setContext(ROUTER, {\n    activeRoute,\n    registerRoute,\n    unregisterRoute,\n    manageFocus,\n    level,\n    id: routerId,\n    history: isTopLevelRouter ? history : routerContext.history,\n    basepath: isTopLevelRouter ? normalizedBasepath : routerContext.basepath,\n  });\n</script>\n\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-router={routerId} />\n\n<slot />\n\n{#if isTopLevelRouter && manageFocus && a11yConfig.announcements}\n  <div\n    role=\"status\"\n    aria-atomic=\"true\"\n    aria-live=\"polite\"\n    style={visuallyHiddenStyle}\n  >\n    {$announcementText}\n  </div>\n{/if}\n","import { getContext, onDestroy, tick } from \"svelte\";\nimport { derived, get, writable } from \"svelte/store\";\nimport { LOCATION, ROUTER, ROUTE, ROUTE_PARAMS, FOCUS_ELEM } from \"./contexts\";\nimport { resolveLink, match, normalizeLocation } from \"./routes\";\nimport { isNumber } from \"./utils\";\nimport {\n  fail,\n  createLabel,\n  USE_FOCUS_ID,\n  ROUTER_ID,\n  USE_LOCATION_ID,\n  ROUTE_ID,\n  USE_RESOLVE_ID,\n  USE_RESOLVABLE_ID,\n  USE_NAVIGATE_ID,\n  USE_MATCH_ID,\n  USE_PARAMS_ID,\n} from \"./warning\";\n\n/**\n * Check if a component or hook have been created outside of a\n * context providing component\n * @param {number} componentId\n * @param {*} props\n * @param {string?} ctxKey\n * @param {number?} ctxProviderId\n */\nexport function usePreflightCheck(\n  componentId,\n  props,\n  ctxKey = ROUTER,\n  ctxProviderId = ROUTER_ID,\n) {\n  const ctx = getContext(ctxKey);\n  if (!ctx) {\n    fail(\n      componentId,\n      label =>\n        `You cannot use ${label} outside of a ${createLabel(ctxProviderId)}.`,\n      props,\n    );\n  }\n}\n\nconst toReadonly = ctx => {\n  const { subscribe } = getContext(ctx);\n  return { subscribe };\n};\n\n/**\n * Access the current location via a readable store.\n * @returns {import(\"svelte/store\").Readable<{\n    pathname: string;\n    search: string;\n    hash: string;\n    state: {};\n  }>}\n *\n * @example\n  ```html\n  <script>\n    import { useLocation } from \"svelte-navigator\";\n\n    const location = useLocation();\n\n    $: console.log($location);\n    // {\n    //   pathname: \"/blog\",\n    //   search: \"?id=123\",\n    //   hash: \"#comments\",\n    //   state: {}\n    // }\n  </script>\n  ```\n */\nexport function useLocation() {\n  usePreflightCheck(USE_LOCATION_ID);\n  return toReadonly(LOCATION);\n}\n\n/**\n * @typedef {{\n    path: string;\n    fullPath: string;\n    uri: string;\n    params: {};\n  }} RouteMatch\n */\n\n/**\n * @typedef {import(\"svelte/store\").Readable<RouteMatch|null>} RouteMatchStore\n */\n\n/**\n * Access the history of top level Router.\n */\nexport function useHistory() {\n  const { history } = getContext(ROUTER);\n  return history;\n}\n\n/**\n * Access the base of the parent Route.\n */\nexport function useRouteBase() {\n  const route = getContext(ROUTE);\n  return route ? derived(route, _route => _route.base) : writable(\"/\");\n}\n\n/**\n * Resolve a given link relative to the current `Route` and the `Router`s `basepath`.\n * It is used under the hood in `Link` and `useNavigate`.\n * You can use it to manually resolve links, when using the `link` or `links` actions.\n *\n * @returns {(path: string) => string}\n *\n * @example\n  ```html\n  <script>\n    import { link, useResolve } from \"svelte-navigator\";\n\n    const resolve = useResolve();\n    // `resolvedLink` will be resolved relative to its parent Route\n    // and the Routers `basepath`\n    const resolvedLink = resolve(\"relativePath\");\n  </script>\n\n  <a href={resolvedLink} use:link>Relative link</a>\n  ```\n */\nexport function useResolve() {\n  usePreflightCheck(USE_RESOLVE_ID);\n  const routeBase = useRouteBase();\n  const { basepath: appBase } = getContext(ROUTER);\n  /**\n   * Resolves the path relative to the current route and basepath.\n   *\n   * @param {string} path The path to resolve\n   * @returns {string} The resolved path\n   */\n  const resolve = path => resolveLink(path, get(routeBase), appBase);\n  return resolve;\n}\n\n/**\n * Resolve a given link relative to the current `Route` and the `Router`s `basepath`.\n * It is used under the hood in `Link` and `useNavigate`.\n * You can use it to manually resolve links, when using the `link` or `links` actions.\n *\n * @returns {import(\"svelte/store\").Readable<string>}\n *\n * @example\n  ```html\n  <script>\n    import { link, useResolvable } from \"svelte-navigator\";\n\n    // `resolvedLink` will be resolved relative to its parent Route\n    // and the Routers `basepath`.\n    const resolvedLink = useResolvable(\"relativePath\");\n  </script>\n\n  <a href={$resolvedLink} use:link>Relative link</a>\n  ```\n */\nexport function useResolvable(path) {\n  usePreflightCheck(USE_RESOLVABLE_ID);\n  const routeBase = useRouteBase();\n  const { basepath: appBase } = getContext(ROUTER);\n  return derived(routeBase, _routeBase =>\n    resolveLink(path, _routeBase, appBase),\n  );\n}\n\n/**\n * A hook, that returns a context-aware version of `navigate`.\n * It will automatically resolve the given link relative to the current Route.\n * It will also resolve a link against the `basepath` of the Router.\n *\n * @example\n  ```html\n  <!-- App.svelte -->\n  <script>\n    import { link, Route } from \"svelte-navigator\";\n    import RouteComponent from \"./RouteComponent.svelte\";\n  </script>\n\n  <Router>\n    <Route path=\"route1\">\n      <RouteComponent />\n    </Route>\n    <!-- ... -->\n  </Router>\n\n  <!-- RouteComponent.svelte -->\n  <script>\n    import { useNavigate } from \"svelte-navigator\";\n\n    const navigate = useNavigate();\n  </script>\n\n  <button on:click=\"{() => navigate('relativePath')}\">\n    go to /route1/relativePath\n  </button>\n  <button on:click=\"{() => navigate('/absolutePath')}\">\n    go to /absolutePath\n  </button>\n  ```\n  *\n  * @example\n  ```html\n  <!-- App.svelte -->\n  <script>\n    import { link, Route } from \"svelte-navigator\";\n    import RouteComponent from \"./RouteComponent.svelte\";\n  </script>\n\n  <Router basepath=\"/base\">\n    <Route path=\"route1\">\n      <RouteComponent />\n    </Route>\n    <!-- ... -->\n  </Router>\n\n  <!-- RouteComponent.svelte -->\n  <script>\n    import { useNavigate } from \"svelte-navigator\";\n\n    const navigate = useNavigate();\n  </script>\n\n  <button on:click=\"{() => navigate('relativePath')}\">\n    go to /base/route1/relativePath\n  </button>\n  <button on:click=\"{() => navigate('/absolutePath')}\">\n    go to /base/absolutePath\n  </button>\n  ```\n */\nexport function useNavigate() {\n  usePreflightCheck(USE_NAVIGATE_ID);\n  const resolve = useResolve();\n  const { navigate } = useHistory();\n  /**\n   * Navigate to a new route.\n   * Resolves the link relative to the current route and basepath.\n   *\n   * @param {string|number} to The path to navigate to.\n   *\n   * If `to` is a number we will navigate to the stack entry index + `to`\n   * (-> `navigate(-1)`, is equivalent to hitting the back button of the browser)\n   * @param {Object} options\n   * @param {*} [options.state]\n   * @param {boolean} [options.replace=false]\n   */\n  const navigateRelative = (to, options) => {\n    // If to is a number, we navigate to the target stack entry via `history.go`.\n    // Otherwise resolve the link\n    const target = isNumber(to) ? to : resolve(to);\n    return navigate(target, options);\n  };\n  return navigateRelative;\n}\n\n/**\n * Use Svelte Navigators matching without needing to use a Route.\n * Returns a readable store with the potential match,\n * that changes, when the location changes.\n *\n * The provided path will be resolved relatively,\n * as you're used to with all paths in Svelte Navigator\n *\n * @param {string} path The path, to match against.\n * It works just like a Route path\n * @returns {RouteMatchStore} The matched route.\n * Returns `null`, when nothing could be matched\n *\n * @example\n  ```html\n  <script>\n    import { useMatch } from \"svelte-navigator\";\n\n    const relativeMatch = useMatch(\"relative/path/:to/*somewhere\");\n    const absoluteMatch = useMatch(\"/absolute/path/:to/*somewhere\");\n\n    $: console.log($relativeMatch.params.to);\n    $: console.log($absoluteMatch.params.somewhere);\n  </script>\n  ```\n */\nexport function useMatch(path) {\n  usePreflightCheck(USE_MATCH_ID);\n  const location = useLocation();\n  const resolve = useResolve();\n  const { basepath: appBase } = getContext(ROUTER);\n  const resolvedPath = resolve(path);\n  const { pathname: fullPath } = normalizeLocation(\n    { pathname: resolvedPath },\n    appBase,\n  );\n  return derived(location, loc => match({ fullPath, path }, loc.pathname));\n}\n\n/**\n * Access the parent Routes matched params and wildcards\n * @returns {import(\"svelte/store\").Readable<{\n     [param: string]: any;\n   }>} A readable store containing the matched parameters and wildcards\n *\n * @example\n  ```html\n  <!--\n    Somewhere inside <Route path=\"user/:id/*splat\" />\n    with a current url of \"/myApp/user/123/pauls-profile\"\n  -->\n  <script>\n    import { useParams } from \"svelte-navigator\";\n\n    const params = useParams();\n\n    $: console.log($params); // -> { id: \"123\", splat: \"pauls-profile\" }\n  </script>\n\n  <h3>Welcome user {$params.id}! bleep bloop...</h3>\n  ```\n */\nexport function useParams() {\n  usePreflightCheck(USE_PARAMS_ID, null, ROUTE, ROUTE_ID);\n  return toReadonly(ROUTE_PARAMS);\n}\n\n/**\n * Provide a custom element to focus, when the parent route is visited.\n * It returns the `registerFocus` function you can call manually with an\n * Element or use as a Svelte action via the `use` directive.\n *\n * @example\n  ```html\n  <!-- Using `registerFocus` as a Svelte action: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n  </script>\n\n  <h1>Don't worry about me...</h1>\n  <p use:registerFocus>Here, look at me!</p>\n  ```\n  * @example\n  ```html\n  <!-- Calling `registerFocus` manually: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { onMount } from \"svelte\";\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n\n    let focusElement;\n\n    onMount(() => registerFocus(focusElement))\n  </script>\n\n  <h1>Don't worry about me...</h1>\n  <p bind:this={focusElement}>Here, look at me!</p>\n  ```\n  * @example\n  ```html\n  <!-- Using `registerFocus` asyncronously: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { onMount } from \"svelte\";\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n\n    const lazyImport = import(\"./MyComponent.svelte\").then(module => module.default);\n  </script>\n\n  {#await lazyImport then MyComponent}\n    <MyComponent {registerFocus} />\n  {/await}\n\n  <!-- MyComponent.svelte -->\n  <script>\n    export let registerFocus;\n  </script>\n\n  <h1 use:registerFocus>Hi there!</h1>\n  ```\n */\nexport function useFocus() {\n  usePreflightCheck(USE_FOCUS_ID, null, ROUTE, ROUTE_ID);\n  const location = useLocation();\n  const focusElement = getContext(FOCUS_ELEM);\n\n  let resolve;\n  const unsubscribe = location.subscribe(() => {\n    const lazyElement = new Promise(_resolve => {\n      resolve = _resolve;\n    });\n    focusElement.set(lazyElement);\n  });\n\n  onDestroy(unsubscribe);\n\n  return node => {\n    let unmounted = false;\n    const innerUnsubscribe = location.subscribe(() => {\n      tick().then(() => {\n        if (!unmounted) {\n          resolve(node);\n        }\n      });\n    });\n    return {\n      destroy() {\n        unmounted = true;\n        innerUnsubscribe();\n      },\n    };\n  };\n}\n","<script context=\"module\">\n  // eslint-disable-next-line import/order\n  import { createCounter } from \"./utils\";\n\n  const createId = createCounter();\n</script>\n\n<script>\n  /*\n   * Adapted from https://github.com/EmilTholin/svelte-routing\n   *\n   * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n   */\n\n  import { getContext, onDestroy, setContext } from \"svelte\";\n  import { writable, get } from \"svelte/store\";\n  import Router from \"./Router.svelte\";\n  import { ROUTER, ROUTE, ROUTE_PARAMS, FOCUS_ELEM } from \"./contexts\";\n  import {\n    useLocation,\n    useNavigate,\n    useRouteBase,\n    usePreflightCheck,\n  } from \"./hooks\";\n  import { isSSR } from \"./utils\";\n  import { extractBaseUri } from \"./routes\";\n  import { join } from \"./paths\";\n  import { ROUTE_ID } from \"./warning\";\n\n  export let path = \"\";\n  export let component = null;\n  export let meta = {};\n  export let primary = true;\n\n  usePreflightCheck(ROUTE_ID, $$props);\n\n  const id = createId();\n\n  const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n  const parentBase = useRouteBase();\n  const location = useLocation();\n  const focusElement = writable(null);\n\n  // In SSR we cannot wait for $activeRoute to update,\n  // so we use the match returned from `registerRoute` instead\n  let ssrMatch;\n\n  const route = writable();\n  $: {\n    // The route store will be re-computed whenever props, location or parentBase change\n    const isDefault = path === \"\";\n    const rawBase = join($parentBase, path);\n    const updatedRoute = {\n      id,\n      path,\n      meta,\n      // If no path prop is given, this Route will act as the default Route\n      // that is rendered if no other Route in the Router is a match\n      default: isDefault,\n      fullPath: isDefault ? \"\" : rawBase,\n      base: isDefault\n        ? $parentBase\n        : extractBaseUri(rawBase, $location.pathname),\n      primary,\n      focusElement,\n    };\n    route.set(updatedRoute);\n    // If we're in SSR mode and the Route matches,\n    // `registerRoute` will return the match\n    ssrMatch = registerRoute(updatedRoute);\n  }\n\n  $: isActive = !!(ssrMatch || ($activeRoute && $activeRoute.id === id));\n\n  const params = writable({});\n  $: if (isActive) {\n    const { params: activeParams } = ssrMatch || $activeRoute;\n    params.set(activeParams);\n  }\n\n  setContext(ROUTE, route);\n  setContext(ROUTE_PARAMS, params);\n  setContext(FOCUS_ELEM, focusElement);\n\n  // We need to call useNavigate after the route is set,\n  // so we can use the routes path for link resolution\n  const navigate = useNavigate();\n\n  // There is no need to unregister Routes in SSR since it will all be\n  // thrown away anyway\n  if (!isSSR) {\n    onDestroy(() => unregisterRoute(id));\n  }\n</script>\n\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-route-start={id} />\n{#if isActive}\n  <Router {primary}>\n    <!--\n      `$params` always returns `{}` in SSR in Route, because it will\n      update after component initialisation has already happend.\n      `get(params)` always works, but is not reactive, so we can't\n      use it in client rendered mode\n    -->\n    {#if component !== null}\n      <svelte:component\n        this={component}\n        location={$location}\n        {navigate}\n        {...isSSR ? get(params) : $params}\n        {...$$restProps}\n      />\n    {:else}\n      <slot\n        params={isSSR ? get(params) : $params}\n        location={$location}\n        {navigate}\n      />\n    {/if}\n  </Router>\n{/if}\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-route-end={id} />\n","<script>\n  /*\n   * Adapted from https://github.com/EmilTholin/svelte-routing\n   *\n   * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n   */\n\n  import { createEventDispatcher } from \"svelte\";\n  import {\n    useLocation,\n    useResolve,\n    useHistory,\n    usePreflightCheck,\n  } from \"./hooks\";\n  import { shouldNavigate, isFunction } from \"./utils\";\n  import { startsWith } from \"./paths\";\n  import { LINK_ID } from \"./warning\";\n\n  export let to;\n  export let replace = false;\n  export let state = {};\n  export let getProps = null;\n\n  usePreflightCheck(LINK_ID, $$props);\n\n  const location = useLocation();\n  const dispatch = createEventDispatcher();\n  const resolve = useResolve();\n  const { navigate } = useHistory();\n\n  // We need to pass location here to force re-resolution of the link,\n  // when the pathname changes. Otherwise we could end up with stale path params,\n  // when for example an :id changes in the parent Routes path\n  $: href = resolve(to, $location);\n  $: isPartiallyCurrent = startsWith($location.pathname, href);\n  $: isCurrent = href === $location.pathname;\n  $: ariaCurrent = isCurrent ? { \"aria-current\": \"page\" } : {};\n  $: props = (() => {\n    if (isFunction(getProps)) {\n      const dynamicProps = getProps({\n        location: $location,\n        href,\n        isPartiallyCurrent,\n        isCurrent,\n      });\n      return { ...$$restProps, ...dynamicProps };\n    }\n    return $$restProps;\n  })();\n\n  function onClick(event) {\n    dispatch(\"click\", event);\n\n    if (shouldNavigate(event)) {\n      event.preventDefault();\n      // Don't push another entry to the history stack when the user\n      // clicks on a Link to the page they are currently on.\n      const shouldReplace = isCurrent || replace;\n      navigate(href, { state, replace: shouldReplace });\n    }\n  }\n</script>\n\n<a {href} {...ariaCurrent} on:click={onClick} {...props}>\n  <slot />\n</a>\n","var e={\"\":[\"<em>\",\"</em>\"],_:[\"<strong>\",\"</strong>\"],\"*\":[\"<strong>\",\"</strong>\"],\"~\":[\"<s>\",\"</s>\"],\"\\n\":[\"<br />\"],\" \":[\"<br />\"],\"-\":[\"<hr />\"]};function n(e){return e.replace(RegExp(\"^\"+(e.match(/^(\\t| )+/)||\"\")[0],\"gm\"),\"\")}function r(e){return(e+\"\").replace(/\"/g,\"&quot;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\")}export default function t(a,c){var o,l,g,s,p,u=/((?:^|\\n+)(?:\\n---+|\\* \\*(?: \\*)+)\\n)|(?:^``` *(\\w*)\\n([\\s\\S]*?)\\n```$)|((?:(?:^|\\n+)(?:\\t|  {2,}).+)+\\n*)|((?:(?:^|\\n)([>*+-]|\\d+\\.)\\s+.*)+)|(?:!\\[([^\\]]*?)\\]\\(([^)]+?)\\))|(\\[)|(\\](?:\\(([^)]+?)\\))?)|(?:(?:^|\\n+)([^\\s].*)\\n(-{3,}|={3,})(?:\\n+|$))|(?:(?:^|\\n+)(#{1,6})\\s*(.+)(?:\\n+|$))|(?:`([^`].*?)`)|(  \\n\\n*|\\n{2,}|__|\\*\\*|[_*]|~~)/gm,m=[],h=\"\",i=c||{},d=0;function f(n){var r=e[n[1]||\"\"],t=m[m.length-1]==n;return r?r[1]?(t?m.pop():m.push(n),r[0|t]):r[0]:n}function $(){for(var e=\"\";m.length;)e+=f(m[m.length-1]);return e}for(a=a.replace(/^\\[(.+?)\\]:\\s*(.+)$/gm,function(e,n,r){return i[n.toLowerCase()]=r,\"\"}).replace(/^\\n+|\\n+$/g,\"\");g=u.exec(a);)l=a.substring(d,g.index),d=u.lastIndex,o=g[0],l.match(/[^\\\\](\\\\\\\\)*\\\\$/)||((p=g[3]||g[4])?o='<pre class=\"code '+(g[4]?\"poetry\":g[2].toLowerCase())+'\"><code'+(g[2]?' class=\"language-'+g[2].toLowerCase()+'\"':\"\")+\">\"+n(r(p).replace(/^\\n+|\\n+$/g,\"\"))+\"</code></pre>\":(p=g[6])?(p.match(/\\./)&&(g[5]=g[5].replace(/^\\d+/gm,\"\")),s=t(n(g[5].replace(/^\\s*[>*+.-]/gm,\"\"))),\">\"==p?p=\"blockquote\":(p=p.match(/\\./)?\"ol\":\"ul\",s=s.replace(/^(.*)(\\n|$)/gm,\"<li>$1</li>\")),o=\"<\"+p+\">\"+s+\"</\"+p+\">\"):g[8]?o='<img src=\"'+r(g[8])+'\" alt=\"'+r(g[7])+'\">':g[10]?(h=h.replace(\"<a>\",'<a href=\"'+r(g[11]||i[l.toLowerCase()])+'\">'),o=$()+\"</a>\"):g[9]?o=\"<a>\":g[12]||g[14]?o=\"<\"+(p=\"h\"+(g[14]?g[14].length:g[13]>\"=\"?1:2))+\">\"+t(g[12]||g[15],i)+\"</\"+p+\">\":g[16]?o=\"<code>\"+r(g[16])+\"</code>\":(g[17]||g[1])&&(o=f(g[17]||\"--\"))),h+=l,h+=o;return(h+a.substring(d)+$()).replace(/^\\n+|\\n+$/g,\"\")}\n//# sourceMappingURL=snarkdown.es.js.map\n","import snarkdown from 'snarkdown';\nexport async function loadMarkdownContent(path) {\n\tlet response = await fetch(path);\n\tif (response.status === 200) {\n\t\tlet data = await response.text();\n\t\treturn snarkdown(data);\n\t}\n}\nexport async function loadJsonContent(path) {\n\tlet response = await fetch(path);\n\tif (response.status === 200) {\n\t\tlet data = await response.json();\n\t\treturn data;\n\t}\n}","<script>\r\n  import { Route, Link } from \"svelte-navigator\";\r\n  import { loadMarkdownContent, loadJsonContent } from './common.js';\r\n\r\n  export let blogRoute;\r\n\r\n</script>\r\n\r\n\r\n<article>\r\n  <Route path=\":id\" let:params>\r\n    {#await loadMarkdownContent('/content/blogs/' + blogRoute + '.md')}\r\n      <p>loading blog...</p>\r\n    {:then content}\r\n      {@html content}\r\n    {:catch error}\r\n      <p>Error loading blog</p>\r\n      <p>{error.message}</p>\r\n    {/await}\r\n  </Route>\r\n  <Route>\r\n    <h1>Blog articles</h1>\r\n    {#await loadJsonContent('/content/blogs/_index.json')}\r\n      <p>loading blogs...</p>\r\n    {:then content}\r\n      <ul>\r\n      {#each content as b}\r\n        <li><Link to=\"./{b.link}\">{b.title}</Link></li>\r\n      {/each}\r\n      </ul>\r\n    {:catch error}      \r\n      <p>Error loading blogs</p>\r\n      <p>{error.message}</p>\r\n    {/await}\r\n  </Route>\r\n</article>\r\n\r\n\r\n<style>\r\n  article {\r\n    max-width: 1000px;\r\n    margin: auto;\r\n    padding-bottom: 2rem;\r\n  }\r\n</style>","<script>\r\n  import { Route, Link } from \"svelte-navigator\";\r\n  import { loadMarkdownContent, loadJsonContent } from './common.js';\r\n\r\n  export let topicRoute;\r\n\r\n</script>\r\n\r\n\r\n<article>\r\n  <Route path=\":id\" let:params>\r\n    {#await loadMarkdownContent('/content/topics/' + topicRoute + '.md')}\r\n      <p>loading topic...</p>\r\n    {:then content}\r\n      {@html content}\r\n    {:catch error}\r\n      <p>Error loading topic</p>\r\n      <p>{error.message}</p>\r\n    {/await}\r\n  </Route>\r\n  <Route>\r\n    <h1>Topics of Interest</h1>\r\n    {#await loadJsonContent('/content/topics/_index.json')}\r\n      <p>loading topics...</p>\r\n    {:then content}      \r\n      <ul>\r\n      {#each content as t}\r\n        <li><Link to=\"./{t.link}\">{t.title}</Link></li>\r\n      {/each}\r\n      </ul>\r\n    {:catch error}      \r\n      <p>Error loading topics</p>\r\n      <p>{error.message}</p>\r\n    {/await}\r\n  </Route>\r\n</article>\r\n\r\n\r\n<style>\r\n  article {\r\n    max-width: 1000px;\r\n    margin: auto;\r\n  }\r\n</style>","<script>\n  import { Router, Route } from \"svelte-navigator\";\n  import snarkdown from 'snarkdown';\n  import Header from './Header.svelte';\n  import Footer from './Footer.svelte';\n  import Blog from './Blog.svelte';\n  import Topic from './Topic.svelte';\n  import { loadMarkdownContent, loadJsonContent } from './common.js';\n</script>\n\n\n\n<Router>\n  <Header></Header>\n  <main>\n\n    <Route path=\"/\">\n        {#await loadMarkdownContent('/content/index.md')}\n          <p>loading blog...</p>\n        {:then content}\n          {@html content}\n        {:catch error}\n          <p>Error loading content</p>\n          <p>{error.message}</p>\n        {/await}\n    </Route>\n\n    <Route path=\"blog/*blogRoute\" component={Blog} />\n\n    <Route path=\"topic/*topicRoute\" component={Topic} />\n\n    <Route path=\"about\">\n      {#await loadMarkdownContent('/content/about.md')}\n          <p>loading blog...</p>\n        {:then content}\n          {@html content}\n        {:catch error}\n          <p>Error loading content</p>\n          <p>{error.message}</p>\n        {/await}\n    </Route>\n\n    <Route>\n      {#await loadMarkdownContent('/content/404.md')}\n          <p>loading blog...</p>\n        {:then content}\n          {@html content}\n        {:catch error}\n          <p>Error loading content</p>\n          <p>{error.message}</p>\n        {/await}\n    </Route>\n\n  </main>\n  <Footer></Footer>\n</Router>\n\n\n\n<style>\nmain {\n  margin-top: 1rem;\n  min-height: 75vh;\n  padding: 0 2rem;\n}\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","set_data","wholeText","set_style","important","setProperty","HtmlTag","[object Object]","this","e","n","html","nodeName","t","h","innerHTML","Array","from","childNodes","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","event","createEvent","initCustomEvent","custom_event","call","setContext","context","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","flushing","seen_callbacks","update","pop","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","index","resolved","child_ctx","current","needs_flush","blocks","m","mount","error","catch","hasCatch","pending","get_spread_update","levels","updates","to_null_out","accounted_for","get_spread_object","spread_props","create_component","mount_component","on_mount","new_on_destroy","map","filter","destroy_component","init","options","instance","create_fragment","not_equal","parent_component","prop_values","bound","Map","skip_bound","ready","ret","fill","make_dirty","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","indexOf","splice","$$props","obj","$$set","isUndefined","isFunction","isNumber","createCounter","isSSR","window","addListener","handler","addEventListener","removeEventListener","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","cleanup","sync","unsubscribers","createKey","ctxName","LOCATION","ROUTER","ROUTE","ROUTE_PARAMS","FOCUS_ELEM","paramRegex","startsWith","string","search","substr","isSplat","segment","stripSlashes","str","replace","segmentize","uri","filterFalsy","segments","split","Boolean","addQuery","pathname","query","normalizePath","path","join","pathFragments","joinedSegments","labels","1","2","3","4","5","6","7","8","9","10","11","createLabel","labelId","createMessage","message","originId","origin","to","basepath","createIdentifier","originMsg","label","createMessageHandler","args","fail","warn","console","rankRoute","route","score","default","fullPath","reduce","acc","nextScore","isRootSegment","test","isDynamic","SEGMENT_POINTS","pick","routes","bestMatch","defaultMatch","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","params","createMatch","routeSegments","routeSegment","uriSegment","splatName","decodeURIComponent","dynamicMatch","exec","match","normalizeLocation","location","hash","state","baseSegments","pathSegments","shift","normalizeUrlFragment","frag","createLocation","url","searchIndex","hashIndex","hasSearchIndex","hasHashIndex","pathnameAndSearch","resolveLink","routeBase","appBase","base","toPathname","toQuery","basePathname","toSegments","concat","allSegments","extractBaseUri","routePath","routeMatch","POP","getLocation","source","encodeURI","decodeURI","history","_key","createStackFrame","canUseDOM","isEmbeddedPage","globalHistory","listeners","action","notifyListeners","listenerFns","listener","unlisten","go","keyedState","random","toString","substring","createHistory","initialPathname","stack","entries","title","newIndex","createMemorySource","focusCandidate","initialNavigation","pushFocusCandidate","item","level","routerIdA","routerIdB","routerMarkers","querySelectorAll","currentId","Number","dataset","svnavRouter","isAbove","routerId","focus","elem","TABINDEX","hasAttribute","blurListener","activeElement","isEndMarker","id","svnavRouteEnd","selector","parent","querySelector","handleFocus","focusElement","nextElementSibling","tagName","heading","queryHeading","documentElement","createTriggerFocus","a11yConfig","announcementText","manageFocus","announceNavigation","announcements","meta","announcementMessage","createAnnouncement","createId","defaultBasepath","primary","a11y","initialBasepath","normalizedBasepath","locationContext","routerContext","isTopLevelRouter","activeRoute","hasActiveRoute","prevLocation","$location","triggerFocus","createRouteFilter","routeId","routeList","routeItem","listen","changedHistory","normalizedLocation","registerRoute","matchingRoute","prevRoutes","nextRoutes","unregisterRoute","$routes","hasHash","shouldManageFocus","$prevLocation","$activeRoute","usePreflightCheck","componentId","ctxKey","ctxProviderId","useLocation","toReadonly","useHistory","useRouteBase","_route","useResolve","parentBase","ssrMatch","navigate","useNavigate","isDefault","rawBase","$parentBase","updatedRoute","isActive","activeParams","getProps","dispatch","href","isPartiallyCurrent","isCurrent","ariaCurrent","aria-current","dynamicProps","$$restProps","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","shouldNavigate","preventDefault","*","~","\n"," ","-","RegExp","g","u","f","$","toLowerCase","lastIndex","async","loadMarkdownContent","response","fetch","status","snarkdown","loadJsonContent","json","link","blogRoute","topicRoute","Blog","Topic","body"],"mappings":"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"}