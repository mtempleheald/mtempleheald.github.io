import{S as Wn,i as Xn,s as Yn,k as p,q as i,a as u,l as t,m as o,r as k,h as s,c as l,n as h,p as y,b as c,I as a,C as En}from"../chunks/index.de0bb5b5.js";function Zn(On){let w,Z,z,S,$,J,x,Vn='<code class="language-js"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"/assets/js/RoundCorners.js"</span> type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code>',O,f,v,nn,sn,an,pn,tn,V,d,_,on,en,r,L,cn,un,M,ln,kn,q,rn,dn,R,mn,bn,A,fn,vn,j,gn,F,m,D,hn,yn,g,P,wn,xn,H,Cn,Tn,N,Sn,U,C,Fn='<code class="language-js"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token function">RoundCorners</span><span class="token punctuation">(</span><span class="token string">"rounded-example"</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code>',G,K,Q,B,Bn,W,T,Un=`<code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">//Check if browser supports this, if not then quit</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>document<span class="token punctuation">.</span>getElementById <span class="token operator">||</span> <span class="token operator">!</span>document<span class="token punctuation">.</span>createElement<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">var</span> b <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'msie 5'</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'opera'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">Blend</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> alpha</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">//Returns a colour equal to a blend of the fore and background colours</span>
	<span class="token keyword">var</span> fgc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	fgc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> a<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	fgc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> a<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	fgc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> a<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> bgc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	bgc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> b<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	bgc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> b<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	bgc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> b<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token punctuation">(</span>
		<span class="token string">'#'</span> <span class="token operator">+</span>
		<span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>fgc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>bgc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> fgc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> alpha<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span>
		<span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>fgc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>bgc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> fgc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> alpha<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span>
		<span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>fgc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>bgc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> fgc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> alpha<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">rgb2hex</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">var</span> hex <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> i<span class="token punctuation">;</span>
	<span class="token keyword">var</span> regexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">([0-9]+)[, ]+([0-9]+)[, ]+([0-9]+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	array <span class="token operator">=</span> regexp<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		hex <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">return</span> <span class="token string">'#'</span> <span class="token operator">+</span> hex<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">getDivStyle</span><span class="token punctuation">(</span><span class="token parameter">xdiv<span class="token punctuation">,</span> IEStyleAttr<span class="token punctuation">,</span> CSSStyleAttr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">var</span> elem <span class="token operator">=</span> xdiv<span class="token punctuation">;</span>
	<span class="token keyword">var</span> xproperty<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>elem<span class="token punctuation">.</span>currentStyle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		xproperty <span class="token operator">=</span> elem<span class="token punctuation">.</span>currentStyle<span class="token punctuation">[</span>IEStyleAttr<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>getComputedStyle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">var</span> compStyle <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>elem<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		xproperty <span class="token operator">=</span> <span class="token function">rgb2hex</span><span class="token punctuation">(</span>compStyle<span class="token punctuation">.</span><span class="token function">getPropertyValue</span><span class="token punctuation">(</span>CSSStyleAttr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">return</span> <span class="token string">'transparent'</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">return</span> xproperty<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">getDivs</span><span class="token punctuation">(</span><span class="token parameter">className</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">//Create array of divs with class='rounded'</span>
	<span class="token keyword">var</span> divs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//create an array containing ALL divs on the page</span>
	<span class="token keyword">var</span> regexp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">'\\b'</span> <span class="token operator">+</span> className <span class="token operator">+</span> <span class="token string">'\\b'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> el<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>regexp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>el<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>className<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
			<span class="token comment">//If div has class='rounded'...</span>
			divs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>el<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//add to divs array</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">return</span> divs<span class="token punctuation">;</span> <span class="token comment">//return array</span>
<span class="token punctuation">&#125;</span>

Math<span class="token punctuation">.</span><span class="token function-variable function">sqr</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> x <span class="token operator">*</span> x<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">MakeDivs</span><span class="token punctuation">(</span><span class="token parameter">divSquare<span class="token punctuation">,</span> bgcolour<span class="token punctuation">,</span> colour<span class="token punctuation">,</span> radiusx<span class="token punctuation">,</span> radiusy<span class="token punctuation">,</span> topl<span class="token punctuation">,</span> topr<span class="token punctuation">,</span> botl<span class="token punctuation">,</span> botr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">var</span> divT <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Create top container div</span>
	divT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> bgcolour<span class="token punctuation">;</span>
	<span class="token keyword">var</span> divB <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Create bottom container div</span>
	divB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> bgcolour<span class="token punctuation">;</span>
	<span class="token keyword">var</span> marginArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> y<span class="token punctuation">,</span> newMargin<span class="token punctuation">,</span> k<span class="token punctuation">,</span> bgcount<span class="token punctuation">,</span> fgcount<span class="token punctuation">,</span> blendcount<span class="token punctuation">;</span>
	<span class="token keyword">var</span> subdivT<span class="token punctuation">,</span> subdivB<span class="token punctuation">,</span> divTempT<span class="token punctuation">,</span> divTempB<span class="token punctuation">,</span> blendratio<span class="token punctuation">,</span> u1<span class="token punctuation">,</span> u2<span class="token punctuation">,</span> v1<span class="token punctuation">,</span> v2<span class="token punctuation">;</span>
	<span class="token comment">//Create an array representing margins...</span>
	marginArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>radiusx<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span>y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> y <span class="token operator">&lt;=</span> radiusy<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		newMargin <span class="token operator">=</span> radiusx <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>radiusy <span class="token operator">-</span> y<span class="token punctuation">)</span> <span class="token operator">/</span> radiusy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		marginArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>newMargin <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Calculate x for given y to 4 d.p.s, add to array...</span>
		<span class="token comment">//Build divs based on the array values...</span>
		bgcount <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>marginArr<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//number of pixels on row which are background</span>
		fgcount <span class="token operator">=</span> radiusx <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>marginArr<span class="token punctuation">[</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//number of pixels on row which are foreground</span>
		blendcount <span class="token operator">=</span> radiusx <span class="token operator">-</span> bgcount <span class="token operator">-</span> fgcount<span class="token punctuation">;</span> <span class="token comment">//number of pixels on row which are blended between the two</span>
		subdivT <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Create row wrapper div with margins set by bgcount and options in function call</span>
		subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>margin <span class="token operator">=</span> <span class="token string">'0px '</span> <span class="token operator">+</span> topr <span class="token operator">*</span> bgcount <span class="token operator">+</span> <span class="token string">'px 0px '</span> <span class="token operator">+</span> topl <span class="token operator">*</span> bgcount <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
		subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'1px'</span><span class="token punctuation">;</span>
		subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>
		subdivB <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Create row wrapper div with margins set by bgcount and options in function call</span>
		subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>margin <span class="token operator">=</span> <span class="token string">'0px '</span> <span class="token operator">+</span> botr <span class="token operator">*</span> bgcount <span class="token operator">+</span> <span class="token string">'px 0px '</span> <span class="token operator">+</span> botl <span class="token operator">*</span> bgcount <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
		subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'1px'</span><span class="token punctuation">;</span>
		subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>
		divTempT <span class="token operator">=</span> divT<span class="token punctuation">;</span>
		divTempB <span class="token operator">=</span> divB<span class="token punctuation">;</span>
		<span class="token comment">//Create wrapper for each blended pixel...</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span>k <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> blendcount<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
			<span class="token comment">//calculate x when y is at pixel edge  &amp;  y when x is at pixel edge...</span>
			u1 <span class="token operator">=</span> marginArr<span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token punctuation">(</span>bgcount <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			u2 <span class="token operator">=</span> marginArr<span class="token punctuation">[</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token punctuation">(</span>bgcount <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			v1 <span class="token operator">=</span>
				radiusy <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>radiusx <span class="token operator">-</span> <span class="token punctuation">(</span>bgcount <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> radiusx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span>
				<span class="token punctuation">(</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			v2 <span class="token operator">=</span>
				radiusy <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>radiusx <span class="token operator">-</span> <span class="token punctuation">(</span>bgcount <span class="token operator">+</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> radiusx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//Approximate to 0 or 1 if these values lie outside the box (to ensure that blendratio stays between 0 and 1)...</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>u1 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				u1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u1 <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				u1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>u2 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				u2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u2 <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				u2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>v1 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				v1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>v1 <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				v1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>v2 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				v2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>v2 <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				v2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token comment">//calculate blendratio (accurate when slope cuts through both sides OR both top and bottom, 1 of each results in approximation)...</span>
			blendratio <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token number">0.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>u1 <span class="token operator">+</span> u2<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v1 <span class="token operator">+</span> v2<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>blendratio <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				blendratio <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>blendratio <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				blendratio <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token function">Blend</span><span class="token punctuation">(</span>bgcolour<span class="token punctuation">,</span> colour<span class="token punctuation">,</span> blendratio<span class="token punctuation">)</span><span class="token punctuation">;</span>
			divTempT<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>subdivT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//add div within containing div (first div appended within top container div)</span>
			divTempT <span class="token operator">=</span> subdivT<span class="token punctuation">;</span>
			subdivT <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>margin <span class="token operator">=</span> <span class="token string">'0px '</span> <span class="token operator">+</span> topr <span class="token operator">+</span> <span class="token string">'px 0px '</span> <span class="token operator">+</span> topl <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
			subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'1px'</span><span class="token punctuation">;</span>
			subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>
			subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token function">Blend</span><span class="token punctuation">(</span>bgcolour<span class="token punctuation">,</span> colour<span class="token punctuation">,</span> blendratio<span class="token punctuation">)</span><span class="token punctuation">;</span>
			divTempB<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>subdivB<span class="token punctuation">,</span> divTempB<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
			divTempB <span class="token operator">=</span> subdivB<span class="token punctuation">;</span>
			subdivB <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>margin <span class="token operator">=</span> <span class="token string">'0px '</span> <span class="token operator">+</span> botr <span class="token operator">+</span> <span class="token string">'px 0px '</span> <span class="token operator">+</span> botl <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
			subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'1px'</span><span class="token punctuation">;</span>
			subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> colour<span class="token punctuation">;</span>
		subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> colour<span class="token punctuation">;</span>
		divTempT<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>subdivT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//add final nested div (foreground)</span>
		divTempB<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>subdivB<span class="token punctuation">,</span> divTempB<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	divSquare<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>divT<span class="token punctuation">,</span> divSquare<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//add top div to html before the div we are rounding</span>
	divSquare<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>divB<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">RoundCorners</span><span class="token punctuation">(</span><span class="token parameter">className<span class="token punctuation">,</span> radiusx<span class="token punctuation">,</span> radiusy<span class="token punctuation">,</span> topl<span class="token punctuation">,</span> topr<span class="token punctuation">,</span> botl<span class="token punctuation">,</span> botr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">//if (!Check()) return;</span>
	<span class="token keyword">var</span> bgcolour<span class="token punctuation">,</span> colour<span class="token punctuation">;</span>
	<span class="token keyword">var</span> v <span class="token operator">=</span> <span class="token function">getDivs</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Create array of divs with class='rounded'</span>
	<span class="token keyword">var</span> l <span class="token operator">=</span> v<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">//Count number of entries in the array</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token comment">//Do for each entry in the array</span>
		colour <span class="token operator">=</span> <span class="token function">getDivStyle</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'backgroundColor'</span><span class="token punctuation">,</span> <span class="token string">'background-color'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		bgcolour <span class="token operator">=</span> <span class="token function">getDivStyle</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">,</span> <span class="token string">'backgroundColor'</span><span class="token punctuation">,</span> <span class="token string">'background-color'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">MakeDivs</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> bgcolour<span class="token punctuation">,</span> colour<span class="token punctuation">,</span> radiusx<span class="token punctuation">,</span> radiusy<span class="token punctuation">,</span> topl<span class="token punctuation">,</span> topr<span class="token punctuation">,</span> botl<span class="token punctuation">,</span> botr<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`;return{c(){w=p("h1"),Z=i("Rounded corners using JavaScript without CSS3"),z=u(),S=p("p"),$=i(`This page is no longer displaying due to incompatibility with Sveltekit and my laziness.
So I’ve included the scripts inline below instead.`),J=u(),x=p("pre"),O=u(),f=p("div"),v=p("p"),nn=i("Before CSS3 introduced the border-radius property rounded corners were achieved on the web using 4 tiny images, held in location using div soup."),sn=p("br"),an=i(`
There was no separation of content from styles, ugly to maintain and inflexible to change.`),pn=p("br"),tn=i(`
I figured that JavaScript could fill the gap for me, so I built this.`),V=u(),d=p("div"),_=p("p"),on=i("It is quite simple, using the ellipse equation x²/a² + y²/b² = 1"),en=u(),r=p("ol"),L=p("li"),cn=i("Find div(s) with given tag."),un=u(),M=p("li"),ln=i("Infer the background-color of this element and its parent."),kn=u(),q=p("li"),rn=i("Loop through, pixel by pixel, the height of the curve (10 in this example)"),dn=u(),R=p("li"),mn=i("Loop through, pixel by pixel, the width of the curve (again 10 in this example)"),bn=u(),A=p("li"),fn=i("Calculate the colour needed to blend smoothly between the child and parent element (antialiasing)"),vn=u(),j=p("li"),gn=i("Create a new div, positioned appropriately that when all combined we see a curve."),F=u(),m=p("div"),D=p("p"),hn=i("This solution is far from perfect but was sufficient for my needs, notable issues:"),yn=u(),g=p("ul"),P=p("li"),wn=i("increases the size of the div by the vertical curve depth chosen"),xn=u(),H=p("li"),Cn=i("only works with divs, which wasn’t a problem when I wrote this prior to HTML5 semantic markup"),Tn=u(),N=p("li"),Sn=i("redundant with the introduction of border-radius"),U=u(),C=p("pre"),G=u(),K=p("hr"),Q=u(),B=p("h2"),Bn=i("RoundCorners.js"),W=u(),T=p("pre"),this.h()},l(n){w=t(n,"H1",{});var e=o(w);Z=k(e,"Rounded corners using JavaScript without CSS3"),e.forEach(s),z=l(n),S=t(n,"P",{});var In=o(S);$=k(In,`This page is no longer displaying due to incompatibility with Sveltekit and my laziness.
So I’ve included the scripts inline below instead.`),In.forEach(s),J=l(n),x=t(n,"PRE",{class:!0});var Gn=o(x);Gn.forEach(s),O=l(n),f=t(n,"DIV",{markdown:!0,class:!0,style:!0});var _n=o(f);v=t(_n,"P",{});var E=o(v);nn=k(E,"Before CSS3 introduced the border-radius property rounded corners were achieved on the web using 4 tiny images, held in location using div soup."),sn=t(E,"BR",{}),an=k(E,`
There was no separation of content from styles, ugly to maintain and inflexible to change.`),pn=t(E,"BR",{}),tn=k(E,`
I figured that JavaScript could fill the gap for me, so I built this.`),E.forEach(s),_n.forEach(s),V=l(n),d=t(n,"DIV",{markdown:!0,class:!0,style:!0});var X=o(d);_=t(X,"P",{});var Ln=o(_);on=k(Ln,"It is quite simple, using the ellipse equation x²/a² + y²/b² = 1"),Ln.forEach(s),en=l(X),r=t(X,"OL",{});var b=o(r);L=t(b,"LI",{});var Mn=o(L);cn=k(Mn,"Find div(s) with given tag."),Mn.forEach(s),un=l(b),M=t(b,"LI",{});var qn=o(M);ln=k(qn,"Infer the background-color of this element and its parent."),qn.forEach(s),kn=l(b),q=t(b,"LI",{});var Rn=o(q);rn=k(Rn,"Loop through, pixel by pixel, the height of the curve (10 in this example)"),Rn.forEach(s),dn=l(b),R=t(b,"LI",{});var An=o(R);mn=k(An,"Loop through, pixel by pixel, the width of the curve (again 10 in this example)"),An.forEach(s),bn=l(b),A=t(b,"LI",{});var jn=o(A);fn=k(jn,"Calculate the colour needed to blend smoothly between the child and parent element (antialiasing)"),jn.forEach(s),vn=l(b),j=t(b,"LI",{});var Dn=o(j);gn=k(Dn,"Create a new div, positioned appropriately that when all combined we see a curve."),Dn.forEach(s),b.forEach(s),X.forEach(s),F=l(n),m=t(n,"DIV",{markdown:!0,class:!0,style:!0});var Y=o(m);D=t(Y,"P",{});var Pn=o(D);hn=k(Pn,"This solution is far from perfect but was sufficient for my needs, notable issues:"),Pn.forEach(s),yn=l(Y),g=t(Y,"UL",{});var I=o(g);P=t(I,"LI",{});var Hn=o(P);wn=k(Hn,"increases the size of the div by the vertical curve depth chosen"),Hn.forEach(s),xn=l(I),H=t(I,"LI",{});var Nn=o(H);Cn=k(Nn,"only works with divs, which wasn’t a problem when I wrote this prior to HTML5 semantic markup"),Nn.forEach(s),Tn=l(I),N=t(I,"LI",{});var zn=o(N);Sn=k(zn,"redundant with the introduction of border-radius"),zn.forEach(s),I.forEach(s),Y.forEach(s),U=l(n),C=t(n,"PRE",{class:!0});var Kn=o(C);Kn.forEach(s),G=l(n),K=t(n,"HR",{}),Q=l(n),B=t(n,"H2",{});var Jn=o(B);Bn=k(Jn,"RoundCorners.js"),Jn.forEach(s),W=l(n),T=t(n,"PRE",{class:!0});var Qn=o(T);Qn.forEach(s),this.h()},h(){h(x,"class","language-js"),h(f,"markdown","1"),h(f,"class","rounded-example"),y(f,"background-color","lightsteelblue"),y(f,"color","blue"),y(f,"margin","10px"),h(d,"markdown","1"),h(d,"class","rounded-example"),y(d,"background-color","lightsteelblue"),y(d,"color","blue"),y(d,"margin","10px"),h(m,"markdown","1"),h(m,"class","rounded-example"),y(m,"background-color","lightsteelblue"),y(m,"color","blue"),y(m,"margin","10px"),h(C,"class","language-js"),h(T,"class","language-javascript")},m(n,e){c(n,w,e),a(w,Z),c(n,z,e),c(n,S,e),a(S,$),c(n,J,e),c(n,x,e),x.innerHTML=Vn,c(n,O,e),c(n,f,e),a(f,v),a(v,nn),a(v,sn),a(v,an),a(v,pn),a(v,tn),c(n,V,e),c(n,d,e),a(d,_),a(_,on),a(d,en),a(d,r),a(r,L),a(L,cn),a(r,un),a(r,M),a(M,ln),a(r,kn),a(r,q),a(q,rn),a(r,dn),a(r,R),a(R,mn),a(r,bn),a(r,A),a(A,fn),a(r,vn),a(r,j),a(j,gn),c(n,F,e),c(n,m,e),a(m,D),a(D,hn),a(m,yn),a(m,g),a(g,P),a(P,wn),a(g,xn),a(g,H),a(H,Cn),a(g,Tn),a(g,N),a(N,Sn),c(n,U,e),c(n,C,e),C.innerHTML=Fn,c(n,G,e),c(n,K,e),c(n,Q,e),c(n,B,e),a(B,Bn),c(n,W,e),c(n,T,e),T.innerHTML=Un},p:En,i:En,o:En,d(n){n&&s(w),n&&s(z),n&&s(S),n&&s(J),n&&s(x),n&&s(O),n&&s(f),n&&s(V),n&&s(d),n&&s(F),n&&s(m),n&&s(U),n&&s(C),n&&s(G),n&&s(K),n&&s(Q),n&&s(B),n&&s(W),n&&s(T)}}}class ns extends Wn{constructor(w){super(),Xn(this,w,null,Zn,Yn,{})}}export{ns as default};
