import{s as W,n as H}from"../chunks/scheduler.Cp24rM3s.js";import{S as X,i as Y,e as c,s as k,H as L,c as u,k as y,a as i,o as R,r as j,d as a,b as r,u as d,g as p}from"../chunks/index.CkxK-9SL.js";function Z(G){let l,D="Rounded corners using JavaScript without CSS3",h,m,N=`This page is no longer displaying due to incompatibility with Sveltekit and my laziness.
So I’ve included the scripts inline below instead.`,w,b,x,K='<code class="language-js"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"/assets/js/RoundCorners.js"</span> type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code>',C,t,P=`<p>Before CSS3 introduced the border-radius property rounded corners were achieved on the web using 4 tiny images, held in location using div soup.<br/>
There was no separation of content from styles, ugly to maintain and inflexible to change.<br/>
I figured that JavaScript could fill the gap for me, so I built this.</p>`,T,o,V="<p>It is quite simple, using the ellipse equation x²/a² + y²/b² = 1</p> <ol><li>Find div(s) with given tag.</li> <li>Infer the background-color of this element and its parent.</li> <li>Loop through, pixel by pixel, the height of the curve (10 in this example)</li> <li>Loop through, pixel by pixel, the width of the curve (again 10 in this example)</li> <li>Calculate the colour needed to blend smoothly between the child and parent element (antialiasing)</li> <li>Create a new div, positioned appropriately that when all combined we see a curve.</li></ol>",S,e,z="<p>This solution is far from perfect but was sufficient for my needs, notable issues:</p> <ul><li>increases the size of the div by the vertical curve depth chosen</li> <li>only works with divs, which wasn’t a problem when I wrote this prior to HTML5 semantic markup</li> <li>redundant with the introduction of border-radius</li></ul>",B,g,_,Q='<code class="language-js"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token function">RoundCorners</span><span class="token punctuation">(</span><span class="token string">"rounded-example"</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code>',M,I,E,f,O="RoundCorners.js",q,v,A,U=`<code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">//Check if browser supports this, if not then quit</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>document<span class="token punctuation">.</span>getElementById <span class="token operator">||</span> <span class="token operator">!</span>document<span class="token punctuation">.</span>createElement<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">var</span> b <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'msie 5'</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'opera'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">Blend</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> alpha</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">//Returns a colour equal to a blend of the fore and background colours</span>
	<span class="token keyword">var</span> fgc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	fgc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> a<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	fgc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> a<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	fgc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> a<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> bgc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	bgc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> b<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	bgc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> b<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	bgc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> b<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token punctuation">(</span>
		<span class="token string">'#'</span> <span class="token operator">+</span>
		<span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>fgc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>bgc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> fgc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> alpha<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span>
		<span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>fgc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>bgc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> fgc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> alpha<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span>
		<span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>fgc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>bgc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> fgc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> alpha<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">rgb2hex</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">var</span> hex <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> i<span class="token punctuation">;</span>
	<span class="token keyword">var</span> regexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">([0-9]+)[, ]+([0-9]+)[, ]+([0-9]+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	array <span class="token operator">=</span> regexp<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		hex <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">return</span> <span class="token string">'#'</span> <span class="token operator">+</span> hex<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">getDivStyle</span><span class="token punctuation">(</span><span class="token parameter">xdiv<span class="token punctuation">,</span> IEStyleAttr<span class="token punctuation">,</span> CSSStyleAttr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">var</span> elem <span class="token operator">=</span> xdiv<span class="token punctuation">;</span>
	<span class="token keyword">var</span> xproperty<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>elem<span class="token punctuation">.</span>currentStyle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		xproperty <span class="token operator">=</span> elem<span class="token punctuation">.</span>currentStyle<span class="token punctuation">[</span>IEStyleAttr<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>getComputedStyle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">var</span> compStyle <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>elem<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		xproperty <span class="token operator">=</span> <span class="token function">rgb2hex</span><span class="token punctuation">(</span>compStyle<span class="token punctuation">.</span><span class="token function">getPropertyValue</span><span class="token punctuation">(</span>CSSStyleAttr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">return</span> <span class="token string">'transparent'</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">return</span> xproperty<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">getDivs</span><span class="token punctuation">(</span><span class="token parameter">className</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">//Create array of divs with class='rounded'</span>
	<span class="token keyword">var</span> divs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//create an array containing ALL divs on the page</span>
	<span class="token keyword">var</span> regexp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">'\\b'</span> <span class="token operator">+</span> className <span class="token operator">+</span> <span class="token string">'\\b'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> el<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>regexp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>el<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>className<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
			<span class="token comment">//If div has class='rounded'...</span>
			divs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>el<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//add to divs array</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">return</span> divs<span class="token punctuation">;</span> <span class="token comment">//return array</span>
<span class="token punctuation">&#125;</span>

Math<span class="token punctuation">.</span><span class="token function-variable function">sqr</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> x <span class="token operator">*</span> x<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">MakeDivs</span><span class="token punctuation">(</span><span class="token parameter">divSquare<span class="token punctuation">,</span> bgcolour<span class="token punctuation">,</span> colour<span class="token punctuation">,</span> radiusx<span class="token punctuation">,</span> radiusy<span class="token punctuation">,</span> topl<span class="token punctuation">,</span> topr<span class="token punctuation">,</span> botl<span class="token punctuation">,</span> botr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">var</span> divT <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Create top container div</span>
	divT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> bgcolour<span class="token punctuation">;</span>
	<span class="token keyword">var</span> divB <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Create bottom container div</span>
	divB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> bgcolour<span class="token punctuation">;</span>
	<span class="token keyword">var</span> marginArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> y<span class="token punctuation">,</span> newMargin<span class="token punctuation">,</span> k<span class="token punctuation">,</span> bgcount<span class="token punctuation">,</span> fgcount<span class="token punctuation">,</span> blendcount<span class="token punctuation">;</span>
	<span class="token keyword">var</span> subdivT<span class="token punctuation">,</span> subdivB<span class="token punctuation">,</span> divTempT<span class="token punctuation">,</span> divTempB<span class="token punctuation">,</span> blendratio<span class="token punctuation">,</span> u1<span class="token punctuation">,</span> u2<span class="token punctuation">,</span> v1<span class="token punctuation">,</span> v2<span class="token punctuation">;</span>
	<span class="token comment">//Create an array representing margins...</span>
	marginArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>radiusx<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span>y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> y <span class="token operator">&lt;=</span> radiusy<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		newMargin <span class="token operator">=</span> radiusx <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>radiusy <span class="token operator">-</span> y<span class="token punctuation">)</span> <span class="token operator">/</span> radiusy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		marginArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>newMargin <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Calculate x for given y to 4 d.p.s, add to array...</span>
		<span class="token comment">//Build divs based on the array values...</span>
		bgcount <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>marginArr<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//number of pixels on row which are background</span>
		fgcount <span class="token operator">=</span> radiusx <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>marginArr<span class="token punctuation">[</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//number of pixels on row which are foreground</span>
		blendcount <span class="token operator">=</span> radiusx <span class="token operator">-</span> bgcount <span class="token operator">-</span> fgcount<span class="token punctuation">;</span> <span class="token comment">//number of pixels on row which are blended between the two</span>
		subdivT <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Create row wrapper div with margins set by bgcount and options in function call</span>
		subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>margin <span class="token operator">=</span> <span class="token string">'0px '</span> <span class="token operator">+</span> topr <span class="token operator">*</span> bgcount <span class="token operator">+</span> <span class="token string">'px 0px '</span> <span class="token operator">+</span> topl <span class="token operator">*</span> bgcount <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
		subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'1px'</span><span class="token punctuation">;</span>
		subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>
		subdivB <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Create row wrapper div with margins set by bgcount and options in function call</span>
		subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>margin <span class="token operator">=</span> <span class="token string">'0px '</span> <span class="token operator">+</span> botr <span class="token operator">*</span> bgcount <span class="token operator">+</span> <span class="token string">'px 0px '</span> <span class="token operator">+</span> botl <span class="token operator">*</span> bgcount <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
		subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'1px'</span><span class="token punctuation">;</span>
		subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>
		divTempT <span class="token operator">=</span> divT<span class="token punctuation">;</span>
		divTempB <span class="token operator">=</span> divB<span class="token punctuation">;</span>
		<span class="token comment">//Create wrapper for each blended pixel...</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span>k <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> blendcount<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
			<span class="token comment">//calculate x when y is at pixel edge  &amp;  y when x is at pixel edge...</span>
			u1 <span class="token operator">=</span> marginArr<span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token punctuation">(</span>bgcount <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			u2 <span class="token operator">=</span> marginArr<span class="token punctuation">[</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token punctuation">(</span>bgcount <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			v1 <span class="token operator">=</span>
				radiusy <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>radiusx <span class="token operator">-</span> <span class="token punctuation">(</span>bgcount <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> radiusx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span>
				<span class="token punctuation">(</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			v2 <span class="token operator">=</span>
				radiusy <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>radiusx <span class="token operator">-</span> <span class="token punctuation">(</span>bgcount <span class="token operator">+</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> radiusx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//Approximate to 0 or 1 if these values lie outside the box (to ensure that blendratio stays between 0 and 1)...</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>u1 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				u1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u1 <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				u1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>u2 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				u2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u2 <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				u2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>v1 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				v1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>v1 <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				v1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>v2 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				v2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>v2 <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				v2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token comment">//calculate blendratio (accurate when slope cuts through both sides OR both top and bottom, 1 of each results in approximation)...</span>
			blendratio <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token number">0.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>u1 <span class="token operator">+</span> u2<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v1 <span class="token operator">+</span> v2<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>blendratio <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				blendratio <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>blendratio <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				blendratio <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token function">Blend</span><span class="token punctuation">(</span>bgcolour<span class="token punctuation">,</span> colour<span class="token punctuation">,</span> blendratio<span class="token punctuation">)</span><span class="token punctuation">;</span>
			divTempT<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>subdivT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//add div within containing div (first div appended within top container div)</span>
			divTempT <span class="token operator">=</span> subdivT<span class="token punctuation">;</span>
			subdivT <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>margin <span class="token operator">=</span> <span class="token string">'0px '</span> <span class="token operator">+</span> topr <span class="token operator">+</span> <span class="token string">'px 0px '</span> <span class="token operator">+</span> topl <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
			subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'1px'</span><span class="token punctuation">;</span>
			subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>
			subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token function">Blend</span><span class="token punctuation">(</span>bgcolour<span class="token punctuation">,</span> colour<span class="token punctuation">,</span> blendratio<span class="token punctuation">)</span><span class="token punctuation">;</span>
			divTempB<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>subdivB<span class="token punctuation">,</span> divTempB<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
			divTempB <span class="token operator">=</span> subdivB<span class="token punctuation">;</span>
			subdivB <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>margin <span class="token operator">=</span> <span class="token string">'0px '</span> <span class="token operator">+</span> botr <span class="token operator">+</span> <span class="token string">'px 0px '</span> <span class="token operator">+</span> botl <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
			subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'1px'</span><span class="token punctuation">;</span>
			subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> colour<span class="token punctuation">;</span>
		subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> colour<span class="token punctuation">;</span>
		divTempT<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>subdivT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//add final nested div (foreground)</span>
		divTempB<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>subdivB<span class="token punctuation">,</span> divTempB<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	divSquare<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>divT<span class="token punctuation">,</span> divSquare<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//add top div to html before the div we are rounding</span>
	divSquare<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>divB<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">RoundCorners</span><span class="token punctuation">(</span><span class="token parameter">className<span class="token punctuation">,</span> radiusx<span class="token punctuation">,</span> radiusy<span class="token punctuation">,</span> topl<span class="token punctuation">,</span> topr<span class="token punctuation">,</span> botl<span class="token punctuation">,</span> botr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">//if (!Check()) return;</span>
	<span class="token keyword">var</span> bgcolour<span class="token punctuation">,</span> colour<span class="token punctuation">;</span>
	<span class="token keyword">var</span> v <span class="token operator">=</span> <span class="token function">getDivs</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Create array of divs with class='rounded'</span>
	<span class="token keyword">var</span> l <span class="token operator">=</span> v<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">//Count number of entries in the array</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token comment">//Do for each entry in the array</span>
		colour <span class="token operator">=</span> <span class="token function">getDivStyle</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'backgroundColor'</span><span class="token punctuation">,</span> <span class="token string">'background-color'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		bgcolour <span class="token operator">=</span> <span class="token function">getDivStyle</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">,</span> <span class="token string">'backgroundColor'</span><span class="token punctuation">,</span> <span class="token string">'background-color'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">MakeDivs</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> bgcolour<span class="token punctuation">,</span> colour<span class="token punctuation">,</span> radiusx<span class="token punctuation">,</span> radiusy<span class="token punctuation">,</span> topl<span class="token punctuation">,</span> topr<span class="token punctuation">,</span> botl<span class="token punctuation">,</span> botr<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`;return{c(){l=c("h1"),l.textContent=D,h=k(),m=c("p"),m.textContent=N,w=k(),b=c("pre"),x=new L(!1),C=k(),t=c("div"),t.innerHTML=P,T=k(),o=c("div"),o.innerHTML=V,S=k(),e=c("div"),e.innerHTML=z,B=k(),g=c("pre"),_=new L(!1),M=k(),I=c("hr"),E=k(),f=c("h2"),f.textContent=O,q=k(),v=c("pre"),A=new L(!1),this.h()},l(n){l=u(n,"H1",{"data-svelte-h":!0}),y(l)!=="svelte-27d8ik"&&(l.textContent=D),h=i(n),m=u(n,"P",{"data-svelte-h":!0}),y(m)!=="svelte-1l3s0sw"&&(m.textContent=N),w=i(n),b=u(n,"PRE",{class:!0});var s=R(b);x=j(s,!1),s.forEach(a),C=i(n),t=u(n,"DIV",{markdown:!0,class:!0,style:!0,"data-svelte-h":!0}),y(t)!=="svelte-1iy18qn"&&(t.innerHTML=P),T=i(n),o=u(n,"DIV",{markdown:!0,class:!0,style:!0,"data-svelte-h":!0}),y(o)!=="svelte-1g52md0"&&(o.innerHTML=V),S=i(n),e=u(n,"DIV",{markdown:!0,class:!0,style:!0,"data-svelte-h":!0}),y(e)!=="svelte-1hntcdh"&&(e.innerHTML=z),B=i(n),g=u(n,"PRE",{class:!0});var J=R(g);_=j(J,!1),J.forEach(a),M=i(n),I=u(n,"HR",{}),E=i(n),f=u(n,"H2",{"data-svelte-h":!0}),y(f)!=="svelte-k1dhiz"&&(f.textContent=O),q=i(n),v=u(n,"PRE",{class:!0});var F=R(v);A=j(F,!1),F.forEach(a),this.h()},h(){x.a=null,r(b,"class","language-js"),r(t,"markdown","1"),r(t,"class","rounded-example"),d(t,"background-color","lightsteelblue"),d(t,"color","blue"),d(t,"margin","10px"),r(o,"markdown","1"),r(o,"class","rounded-example"),d(o,"background-color","lightsteelblue"),d(o,"color","blue"),d(o,"margin","10px"),r(e,"markdown","1"),r(e,"class","rounded-example"),d(e,"background-color","lightsteelblue"),d(e,"color","blue"),d(e,"margin","10px"),_.a=null,r(g,"class","language-js"),A.a=null,r(v,"class","language-javascript")},m(n,s){p(n,l,s),p(n,h,s),p(n,m,s),p(n,w,s),p(n,b,s),x.m(K,b),p(n,C,s),p(n,t,s),p(n,T,s),p(n,o,s),p(n,S,s),p(n,e,s),p(n,B,s),p(n,g,s),_.m(Q,g),p(n,M,s),p(n,I,s),p(n,E,s),p(n,f,s),p(n,q,s),p(n,v,s),A.m(U,v)},p:H,i:H,o:H,d(n){n&&(a(l),a(h),a(m),a(w),a(b),a(C),a(t),a(T),a(o),a(S),a(e),a(B),a(g),a(M),a(I),a(E),a(f),a(q),a(v))}}}class sn extends X{constructor(l){super(),Y(this,l,null,Z,W,{})}}export{sn as component};
