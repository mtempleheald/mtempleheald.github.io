import{a as r,t as d}from"../chunks/disclose-version.BZtIaq82.js";import"../chunks/legacy.CtV6FHWp.js";import{s as a,f as m,i as p,r as t}from"../chunks/runtime.BZuNgBny.js";import{h as o}from"../chunks/html.BY5OYTWt.js";var b=d(`<h1>Rounded corners using JavaScript without CSS3</h1> <p>This page is no longer displaying due to incompatibility with Sveltekit and my laziness.
So I’ve included the scripts inline below instead.</p> <pre class="language-js"><!></pre> <div markdown="1" class="rounded-example" style="background-color: lightsteelblue; color: blue; margin: 10px;"><p>Before CSS3 introduced the border-radius property rounded corners were achieved on the web using 4 tiny images, held in location using div soup.<br> There was no separation of content from styles, ugly to maintain and inflexible to change.<br> I figured that JavaScript could fill the gap for me, so I built this.</p></div> <div markdown="1" class="rounded-example" style="background-color: lightsteelblue; color: blue; margin: 10px;"><p>It is quite simple, using the ellipse equation x²/a² + y²/b² = 1</p> <ol><li>Find div(s) with given tag.</li> <li>Infer the background-color of this element and its parent.</li> <li>Loop through, pixel by pixel, the height of the curve (10 in this example)</li> <li>Loop through, pixel by pixel, the width of the curve (again 10 in this example)</li> <li>Calculate the colour needed to blend smoothly between the child and parent element (antialiasing)</li> <li>Create a new div, positioned appropriately that when all combined we see a curve.</li></ol></div> <div markdown="1" class="rounded-example" style="background-color: lightsteelblue; color: blue; margin: 10px;"><p>This solution is far from perfect but was sufficient for my needs, notable issues:</p> <ul><li>increases the size of the div by the vertical curve depth chosen</li> <li>only works with divs, which wasn’t a problem when I wrote this prior to HTML5 semantic markup</li> <li>redundant with the introduction of border-radius</li></ul></div> <pre class="language-js"><!></pre> <hr> <h2>RoundCorners.js</h2> <pre class="language-javascript"><!></pre>`,1);function h(u){var e=b(),n=a(m(e),4),l=p(n);o(l,()=>'<code class="language-js"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"/assets/js/RoundCorners.js"</span> type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code>'),t(n);var s=a(n,8),k=p(s);o(k,()=>'<code class="language-js"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token function">RoundCorners</span><span class="token punctuation">(</span><span class="token string">"rounded-example"</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code>'),t(s);var c=a(s,6),i=p(c);o(i,()=>`<code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">//Check if browser supports this, if not then quit</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>document<span class="token punctuation">.</span>getElementById <span class="token operator">||</span> <span class="token operator">!</span>document<span class="token punctuation">.</span>createElement<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">var</span> b <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'msie 5'</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'opera'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">Blend</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> alpha</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">//Returns a colour equal to a blend of the fore and background colours</span>
	<span class="token keyword">var</span> fgc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	fgc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> a<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	fgc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> a<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	fgc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> a<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> bgc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	bgc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> b<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	bgc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> b<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	bgc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'0x'</span> <span class="token operator">+</span> b<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token punctuation">(</span>
		<span class="token string">'#'</span> <span class="token operator">+</span>
		<span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>fgc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>bgc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> fgc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> alpha<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span>
		<span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>fgc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>bgc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> fgc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> alpha<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span>
		<span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>fgc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>bgc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> fgc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> alpha<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">rgb2hex</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">var</span> hex <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> i<span class="token punctuation">;</span>
	<span class="token keyword">var</span> regexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">([0-9]+)[, ]+([0-9]+)[, ]+([0-9]+)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	array <span class="token operator">=</span> regexp<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		hex <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token string">'0'</span> <span class="token operator">+</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">return</span> <span class="token string">'#'</span> <span class="token operator">+</span> hex<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">getDivStyle</span><span class="token punctuation">(</span><span class="token parameter">xdiv<span class="token punctuation">,</span> IEStyleAttr<span class="token punctuation">,</span> CSSStyleAttr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">var</span> elem <span class="token operator">=</span> xdiv<span class="token punctuation">;</span>
	<span class="token keyword">var</span> xproperty<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>elem<span class="token punctuation">.</span>currentStyle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		xproperty <span class="token operator">=</span> elem<span class="token punctuation">.</span>currentStyle<span class="token punctuation">[</span>IEStyleAttr<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>getComputedStyle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">var</span> compStyle <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>elem<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		xproperty <span class="token operator">=</span> <span class="token function">rgb2hex</span><span class="token punctuation">(</span>compStyle<span class="token punctuation">.</span><span class="token function">getPropertyValue</span><span class="token punctuation">(</span>CSSStyleAttr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">return</span> <span class="token string">'transparent'</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">return</span> xproperty<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">getDivs</span><span class="token punctuation">(</span><span class="token parameter">className</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">//Create array of divs with class='rounded'</span>
	<span class="token keyword">var</span> divs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//create an array containing ALL divs on the page</span>
	<span class="token keyword">var</span> regexp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">'\\b'</span> <span class="token operator">+</span> className <span class="token operator">+</span> <span class="token string">'\\b'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> el<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>regexp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>el<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>className<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
			<span class="token comment">//If div has class='rounded'...</span>
			divs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>el<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//add to divs array</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">return</span> divs<span class="token punctuation">;</span> <span class="token comment">//return array</span>
<span class="token punctuation">&#125;</span>

Math<span class="token punctuation">.</span><span class="token function-variable function">sqr</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">return</span> x <span class="token operator">*</span> x<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">MakeDivs</span><span class="token punctuation">(</span><span class="token parameter">divSquare<span class="token punctuation">,</span> bgcolour<span class="token punctuation">,</span> colour<span class="token punctuation">,</span> radiusx<span class="token punctuation">,</span> radiusy<span class="token punctuation">,</span> topl<span class="token punctuation">,</span> topr<span class="token punctuation">,</span> botl<span class="token punctuation">,</span> botr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">var</span> divT <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Create top container div</span>
	divT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> bgcolour<span class="token punctuation">;</span>
	<span class="token keyword">var</span> divB <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Create bottom container div</span>
	divB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> bgcolour<span class="token punctuation">;</span>
	<span class="token keyword">var</span> marginArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">var</span> y<span class="token punctuation">,</span> newMargin<span class="token punctuation">,</span> k<span class="token punctuation">,</span> bgcount<span class="token punctuation">,</span> fgcount<span class="token punctuation">,</span> blendcount<span class="token punctuation">;</span>
	<span class="token keyword">var</span> subdivT<span class="token punctuation">,</span> subdivB<span class="token punctuation">,</span> divTempT<span class="token punctuation">,</span> divTempB<span class="token punctuation">,</span> blendratio<span class="token punctuation">,</span> u1<span class="token punctuation">,</span> u2<span class="token punctuation">,</span> v1<span class="token punctuation">,</span> v2<span class="token punctuation">;</span>
	<span class="token comment">//Create an array representing margins...</span>
	marginArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>radiusx<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span>y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> y <span class="token operator">&lt;=</span> radiusy<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		newMargin <span class="token operator">=</span> radiusx <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>radiusy <span class="token operator">-</span> y<span class="token punctuation">)</span> <span class="token operator">/</span> radiusy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		marginArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>newMargin <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Calculate x for given y to 4 d.p.s, add to array...</span>
		<span class="token comment">//Build divs based on the array values...</span>
		bgcount <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>marginArr<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//number of pixels on row which are background</span>
		fgcount <span class="token operator">=</span> radiusx <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>marginArr<span class="token punctuation">[</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//number of pixels on row which are foreground</span>
		blendcount <span class="token operator">=</span> radiusx <span class="token operator">-</span> bgcount <span class="token operator">-</span> fgcount<span class="token punctuation">;</span> <span class="token comment">//number of pixels on row which are blended between the two</span>
		subdivT <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Create row wrapper div with margins set by bgcount and options in function call</span>
		subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>margin <span class="token operator">=</span> <span class="token string">'0px '</span> <span class="token operator">+</span> topr <span class="token operator">*</span> bgcount <span class="token operator">+</span> <span class="token string">'px 0px '</span> <span class="token operator">+</span> topl <span class="token operator">*</span> bgcount <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
		subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'1px'</span><span class="token punctuation">;</span>
		subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>
		subdivB <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Create row wrapper div with margins set by bgcount and options in function call</span>
		subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>margin <span class="token operator">=</span> <span class="token string">'0px '</span> <span class="token operator">+</span> botr <span class="token operator">*</span> bgcount <span class="token operator">+</span> <span class="token string">'px 0px '</span> <span class="token operator">+</span> botl <span class="token operator">*</span> bgcount <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
		subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'1px'</span><span class="token punctuation">;</span>
		subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>
		divTempT <span class="token operator">=</span> divT<span class="token punctuation">;</span>
		divTempB <span class="token operator">=</span> divB<span class="token punctuation">;</span>
		<span class="token comment">//Create wrapper for each blended pixel...</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span>k <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> blendcount<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
			<span class="token comment">//calculate x when y is at pixel edge  &amp;  y when x is at pixel edge...</span>
			u1 <span class="token operator">=</span> marginArr<span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token punctuation">(</span>bgcount <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			u2 <span class="token operator">=</span> marginArr<span class="token punctuation">[</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token punctuation">(</span>bgcount <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			v1 <span class="token operator">=</span>
				radiusy <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>radiusx <span class="token operator">-</span> <span class="token punctuation">(</span>bgcount <span class="token operator">+</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> radiusx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span>
				<span class="token punctuation">(</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			v2 <span class="token operator">=</span>
				radiusy <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">sqr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>radiusx <span class="token operator">-</span> <span class="token punctuation">(</span>bgcount <span class="token operator">+</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> radiusx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//Approximate to 0 or 1 if these values lie outside the box (to ensure that blendratio stays between 0 and 1)...</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>u1 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				u1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u1 <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				u1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>u2 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				u2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>u2 <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				u2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>v1 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				v1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>v1 <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				v1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>v2 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				v2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>v2 <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				v2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token comment">//calculate blendratio (accurate when slope cuts through both sides OR both top and bottom, 1 of each results in approximation)...</span>
			blendratio <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token number">0.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>u1 <span class="token operator">+</span> u2<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v1 <span class="token operator">+</span> v2<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>blendratio <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				blendratio <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>blendratio <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
				blendratio <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token function">Blend</span><span class="token punctuation">(</span>bgcolour<span class="token punctuation">,</span> colour<span class="token punctuation">,</span> blendratio<span class="token punctuation">)</span><span class="token punctuation">;</span>
			divTempT<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>subdivT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//add div within containing div (first div appended within top container div)</span>
			divTempT <span class="token operator">=</span> subdivT<span class="token punctuation">;</span>
			subdivT <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>margin <span class="token operator">=</span> <span class="token string">'0px '</span> <span class="token operator">+</span> topr <span class="token operator">+</span> <span class="token string">'px 0px '</span> <span class="token operator">+</span> topl <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
			subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'1px'</span><span class="token punctuation">;</span>
			subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>
			subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token function">Blend</span><span class="token punctuation">(</span>bgcolour<span class="token punctuation">,</span> colour<span class="token punctuation">,</span> blendratio<span class="token punctuation">)</span><span class="token punctuation">;</span>
			divTempB<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>subdivB<span class="token punctuation">,</span> divTempB<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
			divTempB <span class="token operator">=</span> subdivB<span class="token punctuation">;</span>
			subdivB <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>margin <span class="token operator">=</span> <span class="token string">'0px '</span> <span class="token operator">+</span> botr <span class="token operator">+</span> <span class="token string">'px 0px '</span> <span class="token operator">+</span> botl <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>
			subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'1px'</span><span class="token punctuation">;</span>
			subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		subdivT<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> colour<span class="token punctuation">;</span>
		subdivB<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> colour<span class="token punctuation">;</span>
		divTempT<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>subdivT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//add final nested div (foreground)</span>
		divTempB<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>subdivB<span class="token punctuation">,</span> divTempB<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	divSquare<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>divT<span class="token punctuation">,</span> divSquare<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//add top div to html before the div we are rounding</span>
	divSquare<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>divB<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">RoundCorners</span><span class="token punctuation">(</span><span class="token parameter">className<span class="token punctuation">,</span> radiusx<span class="token punctuation">,</span> radiusy<span class="token punctuation">,</span> topl<span class="token punctuation">,</span> topr<span class="token punctuation">,</span> botl<span class="token punctuation">,</span> botr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">//if (!Check()) return;</span>
	<span class="token keyword">var</span> bgcolour<span class="token punctuation">,</span> colour<span class="token punctuation">;</span>
	<span class="token keyword">var</span> v <span class="token operator">=</span> <span class="token function">getDivs</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Create array of divs with class='rounded'</span>
	<span class="token keyword">var</span> l <span class="token operator">=</span> v<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">//Count number of entries in the array</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token comment">//Do for each entry in the array</span>
		colour <span class="token operator">=</span> <span class="token function">getDivStyle</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'backgroundColor'</span><span class="token punctuation">,</span> <span class="token string">'background-color'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		bgcolour <span class="token operator">=</span> <span class="token function">getDivStyle</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">,</span> <span class="token string">'backgroundColor'</span><span class="token punctuation">,</span> <span class="token string">'background-color'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">MakeDivs</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> bgcolour<span class="token punctuation">,</span> colour<span class="token punctuation">,</span> radiusx<span class="token punctuation">,</span> radiusy<span class="token punctuation">,</span> topl<span class="token punctuation">,</span> topr<span class="token punctuation">,</span> botl<span class="token punctuation">,</span> botr<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`),t(c),r(u,e)}export{h as component};
