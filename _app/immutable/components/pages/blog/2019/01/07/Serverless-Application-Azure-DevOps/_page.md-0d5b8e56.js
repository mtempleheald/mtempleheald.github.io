import{S as nT,i as uT,s as cT,k as l,q as i,a as n,l as r,m as a,r as s,h as o,c as u,n as f,J as pT,b as p,B as e,A as fI}from"../../../../../../../chunks/index-c16a1df2.js";function fT(V7){let st,Af,iu,at,Tf,kf,Lf,su,nt,di,Pf,zf,mi,Rf,au,gl,Sf,nu,C,vi,Df,Cf,bi,Mf,Bf,yi,Nf,jf,Ei,xf,qf,wi,Of,Hf,_i,Ff,uu,Xt,Ut,Xf,Uf,cu,Il,Gf,pu,te,Wf,Vf,$f,Jf,Kf,Yf,Qf,fu,ut,gi,h,Ii,Zf,eh,Ai,th,oh,Ti,lh,rh,ki,ih,sh,Li,ah,nh,Pi,uh,ch,zi,ph,fh,Ri,hh,dh,Si,mh,vh,Di,bh,yh,Gt,d,Ci,Eh,wh,Mi,_h,gh,Bi,Ih,Ah,Ni,Th,kh,ji,Lh,Ph,xi,zh,Rh,qi,Sh,Dh,Oi,Ch,Mh,Hi,Bh,Nh,Fi,jh,xh,m,Xi,qh,Oh,Ui,Hh,Fh,Gi,Xh,Uh,Wi,Gh,Wh,Vi,Vh,$h,$i,Jh,Kh,Ji,Yh,Qh,Ki,Zh,ed,Yi,td,od,Qi,ld,hu,Al,rd,du,ke,Zi,id,sd,es,ad,nd,ts,ud,mu,Tl,cd,vu,v,Qe,pd,fd,hd,Wt,dd,md,vd,Ze,bd,yd,Ed,wd,_d,gd,Vt,Id,Ad,Td,kd,de,Ld,Pd,zd,$t,Rd,Sd,Dd,Cd,Md,Jt,Bd,Nd,jd,xd,me,qd,Od,Hd,Kt,Fd,Xd,Ud,Gd,Wd,os,Vd,$d,Yt,Jd,Kd,Yd,Qd,ls,Zd,bu,kl,em,yu,Ll,tm,Eu,F,Pl,om,Qt,rs,lm,rm,is,im,sm,zl,am,ss,as,nm,um,Rl,cm,ns,us,pm,fm,Sl,hm,cs,ps,dm,mm,Dl,vm,fs,hs,bm,wu,Cl,ym,_u,_,ds,Em,wm,ms,_m,gm,vs,Im,Am,Ml,Tm,Zt,km,Lm,Bl,Pm,eo,zm,Rm,bs,Sm,Dm,ys,Cm,Mm,Es,Bm,gu,Nl,Nm,Iu,jl,jm,Au,oe,xl,xm,et,ws,qm,Om,_s,Hm,Fm,gs,Xm,Um,ql,Gm,tt,Is,Wm,Vm,As,$m,Jm,Ts,Km,Ym,Ol,Qm,ot,ks,Zm,ev,Ls,tv,ov,Ps,lv,rv,Hl,iv,lt,zs,sv,av,Rs,nv,uv,Ss,cv,Tu,ct,pv,fv,hv,ku,Fl,dv,Lu,k,mv,vv,bv,Ds,yv,Ev,wv,_v,to,gv,Iv,Av,Tv,oo,kv,Lv,Pu,Xl,Pv,zu,Ul,zv,Ru,Le,Cs,Rv,Sv,Ms,Dv,Cv,Bs,Mv,Su,Pe,Bv,Nv,jv,xv,qv,Du,ze,lo,Ov,Ns,Hv,Fv,Xv,ro,Uv,js,Gv,Wv,Vv,Gl,$v,Q,xs,Jv,Kv,qs,Yv,Qv,Os,Zv,eb,Hs,tb,ob,Wl,lb,Z,Fs,rb,ib,Xs,sb,ab,Us,nb,ub,Gs,cb,pb,Ws,fb,Cu,pt,hb,db,mb,Mu,ft,Vs,vb,bb,$s,yb,Bu,Vl,Eb,Nu,g,wb,io,_b,gb,Ib,Ab,Js,Tb,kb,Lb,Pb,Ks,zb,Rb,Sb,Db,so,Cb,Mb,ju,M,Bb,ao,Nb,jb,xb,qb,Ys,Ob,Hb,Fb,Xb,Qs,Ub,Gb,xu,$l,Wb,qu,Re,Zs,Vb,$b,ea,Jb,Kb,ta,Yb,Ou,no,$7=`<code class="language-undefined">&#123;
    &quot;IsEncrypted&quot;: false,
    &quot;Values&quot;: &#123;
        &quot;AzureWebJobsStorage&quot;: &quot;&quot;,
        &quot;FUNCTIONS_WORKER_RUNTIME&quot;: &quot;dotnet&quot;
    &#125;
&#125;</code>`,Hu,Jl,oa,Qb,Fu,uo,J7=`<code class="language-undefined">...
using Microsoft.Azure.WebJobs.Extensions.Http;
using Microsoft.Extensions.Logging;
namespace Company.Function
&#123;
    public static class http
    &#123;
        [FunctionName(&quot;http&quot;)]
        public static async Task&lt;IActionResult&gt; Run(
            [HttpTrigger(AuthorizationLevel.Function, &quot;get&quot;, &quot;post&quot;, Route = null)] HttpRequest req,
            ILogger log)
        &#123;
            ...
            string name = req.Query[&quot;name&quot;];
            ...
            return name != null
                ? (ActionResult)new OkObjectResult($&quot;Hello, &#123;name&#125;&quot;)
                : new BadRequestObjectResult(&quot;Please pass a name on the query string or in the request body&quot;);
        &#125;
    &#125;
&#125;</code>`,Xu,le,Zb,e1,t1,o1,l1,r1,i1,Uu,co,po,s1,a1,Gu,X,la,n1,u1,ra,c1,p1,ia,f1,h1,sa,d1,m1,aa,v1,Wu,Kl,b1,Vu,Yl,y1,$u,re,na,E1,w1,ua,_1,g1,ca,I1,A1,pa,T1,Ju,Ql,k1,Ku,ve,L1,fa,P1,z1,R1,fo,S1,D1,Yu,Zl,C1,Qu,ht,M1,ho,B1,N1,Zu,er,j1,ec,w,x1,ha,q1,O1,da,H1,F1,X1,U1,G1,W1,V1,$1,ma,J1,K1,Y1,Q1,Z1,tc,rt,e2,va,t2,o2,l2,oc,dt,tr,r2,mo,i2,s2,or,a2,vo,n2,lc,lr,u2,rc,ie,c2,p2,f2,h2,d2,m2,v2,ic,mt,b2,y2,E2,sc,Se,w2,_2,g2,I2,A2,ac,rr,T2,nc,ir,k2,uc,De,ba,L2,P2,ya,z2,R2,Ea,S2,cc,b,D2,bo,C2,M2,B2,N2,wa,j2,x2,_a,q2,O2,ga,H2,F2,X2,U2,Ia,G2,W2,Aa,V2,$2,pc,ee,J2,yo,K2,Y2,Q2,Z2,ey,ty,Eo,sr,hI,fc,ar,oy,hc,nr,ly,dc,B,wo,ry,Ta,iy,sy,ay,_o,ny,ka,uy,cy,py,go,fy,La,hy,dy,my,Io,vy,Pa,by,yy,Ey,Ao,wy,za,_y,gy,Iy,To,Ay,Ra,Ty,ky,mc,ur,Ly,vc,cr,O,Py,Sa,zy,Ry,Da,Sy,Dy,ko,Cy,My,By,Ny,jy,xy,bc,pr,qy,yc,Ce,Oy,Lo,Hy,Fy,Xy,Uy,Ec,U,Gy,Ca,Wy,Vy,Ma,$y,Jy,Ba,Ky,Yy,Qy,Zy,wc,Po,eE,zo,tE,_c,vt,Na,be,ja,oE,lE,xa,rE,iE,qa,sE,aE,Oa,nE,uE,S,ye,Ha,cE,pE,gc,fE,Ic,hE,Fa,dE,mE,Ee,Xa,vE,bE,Ua,yE,EE,Ac,wE,Ga,_E,gE,we,Wa,IE,AE,Tc,TE,kc,kE,Va,LE,PE,_e,$a,zE,RE,Ja,SE,DE,Ka,CE,ME,Lc,BE,ge,Ya,NE,jE,Pc,xE,Qa,qE,OE,zc,HE,Ie,Za,FE,XE,Rc,UE,en,GE,WE,Sc,VE,Ae,tn,$E,JE,on,KE,YE,Dc,QE,ln,ZE,Cc,fr,ew,Mc,bt,Ro,tw,rn,ow,lw,rw,So,iw,sn,sw,aw,Bc,hr,nw,Nc,yt,dr,uw,an,cw,pw,nn,fw,jc,Et,hw,Do,dw,mw,xc,mr,Co,vw,un,bw,yw,qc,vr,Ew,Oc,G,ww,Mo,_w,gw,Iw,Aw,Bo,Tw,kw,Lw,Pw,Hc,br,zw,Fc,y,Rw,cn,Sw,Dw,Cw,Mw,No,Bw,Nw,jo,jw,xw,qw,Ow,pn,Hw,Fw,Xw,Uw,fn,Gw,Ww,Xc,Me,hn,Vw,$w,dn,Jw,Kw,mn,Yw,Uc,H,Qw,Zw,e3,t3,o3,vn,l3,r3,i3,xo,s3,a3,Gc,wt,bn,n3,u3,yn,c3,Wc,yr,p3,Vc,Be,qo,f3,h3,d3,m3,Oo,v3,b3,y3,E3,Ho,w3,_3,g3,$c,Er,I3,Jc,wr,A3,Kc,_r,gr,Fo,T3,k3,Yc,Xo,K7=`<code class="language-undefined">$resourceGroup = &#39;mthtest01&#39;
$storageAccount = &quot;$($resourceGroup)apistorage&quot;
$appServiceplan = &quot;$($resourceGroup)plan&quot;
$functionApp = &quot;$($resourceGroup)api&quot;
az group create --name $resourceGroup --location westeurope
az storage account create --name $storageAccount --location westeurope --resource-group $resourceGroup --sku Standard_LRS
az appservice plan create --name $appServiceplan --resource-group $resourceGroup --sku B1 --is-linux
az functionapp create --resource-group $resourceGroup --plan $appServiceplan --name $functionApp --storage-account $storageAccount --runtime dotnet</code>`,Qc,Ne,Ir,Uo,L3,P3,z3,Ar,Go,R3,S3,D3,Tr,Wo,C3,M3,Zc,Vo,Y7=`<code class="language-undefined">az extension add --name storage-preview --debug
az storage blob service-properties update --account-name &quot;$(resourceGroup)ui&quot; --static-website --404-document 404.html --index-document index.html --debug</code>`,ep,kr,B3,tp,Lr,N3,op,Pr,j3,lp,je,En,x3,q3,wn,O3,H3,$o,F3,Jo,X3,U3,rp,_t,G3,Ko,W3,V3,ip,W,_n,$3,J3,gn,K3,Y3,In,Q3,Z3,zr,e_,Yo,t_,o_,An,l_,sp,N,r_,Qo,i_,s_,Zo,a_,n_,el,u_,c_,p_,f_,h_,d_,ap,Rr,m_,np,gt,Tn,tl,v_,b_,kn,ol,y_,up,Sr,E_,cp,Dr,w_,pp,se,Ln,__,g_,Pn,I_,A_,zn,T_,k_,Rn,L_,fp,Cr,P_,hp,ll,Q7=`<code class="language-json"><span class="token property">"variables"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        <span class="token property">"functionApp"</span><span class="token operator">:</span> <span class="token string">"[concat(resourceGroup().name, 'api')]"</span><span class="token punctuation">,</span>
        <span class="token property">"functionAppStorage"</span><span class="token operator">:</span> <span class="token string">"[concat(resourceGroup().name, 'apistorage')]"</span><span class="token punctuation">,</span>
        <span class="token property">"uiStorage"</span><span class="token operator">:</span> <span class="token string">"[concat(resourceGroup().name, 'ui')]"</span>
    <span class="token punctuation">&#125;</span></code>`,dp,ae,z_,R_,S_,rl,D_,C_,M_,B_,mp,il,Z7=`<code class="language-undefined">(Get-AzResourceProvider -ProviderNamespace Microsoft.Storage).ResourceTypes | Where &#123;$_.ResourceTypeName -eq &#39;storageAccounts&#39;&#125; | select -ExpandProperty ApiVersions
2018-07-01
2018-03-01-preview
...
2015-05-01-preview
(Get-AzResourceProvider -ProviderNamespace Microsoft.Web).ResourceTypes | Where &#123;$_.ResourceTypeName -eq &#39;sites&#39;&#125; | select -ExpandProperty ApiVersions
(Get-AzResourceProvider -ProviderNamespace Microsoft.Web).ResourceTypes | Where &#123;$_.ResourceTypeName -eq &#39;serverfarms&#39;&#125; | select -ExpandProperty ApiVersions
(Get-AzResourceProvider -ProviderNamespace Microsoft.Web).ResourceTypes | Where &#123;$_.ResourceTypeName -eq &#39;functions&#39;&#125; | select -ExpandProperty ApiVersions
2018-11-01
2018-02-01
...
2014-04-01</code>`,vp,It,N_,sl,j_,x_,bp,al,eT=`<code class="language-undefined">Connect-AzAccount
Select-AzSubscription -SubscriptionName &#39;Free Trial&#39;
New-AzResourceGroup -Name $resourceGroupName -Location &#39;North Europe&#39;
Test-AzResourceGroupDeployment -ResourceGroupName $resourceGroupName -TemplateFile .azuredeploy.json -Debug</code>`,yp,xe,q_,Sn,O_,H_,F_,X_,Ep,qe,Dn,nl,U_,G_,Cn,ul,W_,V_,Mn,cl,$_,wp,Oe,J_,pl,K_,Y_,Q_,Z_,_p,E,Mr,e4,Bn,t4,o4,Br,l4,Nn,r4,i4,fl,s4,jn,a4,n4,u4,Nr,c4,xn,p4,f4,jr,h4,qn,d4,m4,hl,v4,On,b4,y4,E4,xr,w4,Hn,_4,g4,dl,I4,Fn,A4,T4,k4,qr,L4,Xn,P4,gp,At,z4,ml,R4,S4,Ip,V,D4,vl,C4,M4,B4,N4,j4,x4,Un,q4,O4,Ap,$,H4,F4,X4,Gn,U4,G4,W4,Wn,V4,$4,J4,Tp,Or,K4,kp,J,Y4,Q4,Z4,bl,eg,tg,og,lg,Vn,rg,ig,Lp,Hr,sg,Pp,He,ag,yl,ng,ug,cg,pg,zp,Fr,fg,Rp,j,Xr,$n,hg,dg,mg,Jn,Kn,vg,bg,Ur,yg,El,Yn,Eg,wg,Qn,_g,gg,Zn,Ig,Ag,wl,Tg,eu,kg,Lg,Pg,tu,zg,Sp,Gr,Rg,Dp,Tt,ou,Sg,Dg,lu,Cg;return{c(){st=l("h1"),Af=i("Building a Serverless Application in Azure"),iu=n(),at=l("p"),Tf=i("Serverless computing is getting a lot of attention at the moment, touted as a great way to get to market quickly and popular with startups."),kf=l("br"),Lf=i(`
My aim with this project is to add this tool to my arsenal by building a small but realistically complex proof of concept application:`),su=n(),nt=l("ul"),di=l("li"),Pf=i("Backend built using Azure Functions written in C# and .NET Core"),zf=n(),mi=l("li"),Rf=i("Frontend hosted in Azure Static Content Hosting using AngularJS to connect to the backend service"),au=n(),gl=l("p"),Sf=i("Key principles:"),nu=n(),C=l("ul"),vi=l("li"),Df=i("Separate application logic and integration details to facilite unit testing, portability and supportability."),Cf=n(),bi=l("li"),Mf=i("Continuous deployment (CD) where every check-in to the master branch results in a production release."),Bf=n(),yi=l("li"),Nf=i("Open source, because why not? Maybe it is interesting to someone, or perhaps I can learn something from others who see it."),jf=n(),Ei=l("li"),xf=i("Try to be cloud agnostic, realistically this is only partially possible at present but let\u2019s see where we get up to."),qf=n(),wi=l("li"),Of=i("Establish clear cost management, arguably the most important factor regarding practicality."),Hf=n(),_i=l("li"),Ff=i("Minimum Viable Product (MVP) - A working application with no data persistence and limited security."),uu=n(),Xt=l("h3"),Ut=l("a"),Xf=i("Live application"),Uf=i("."),cu=n(),Il=l("h2"),Gf=i("Application Logic"),pu=n(),te=l("p"),Wf=i("Cricket is a darts game played by 2 or more people."),Vf=l("br"),$f=i(`
The idea is to tick off 3 of each of the numbers 15-20 plus the bull (centre bull counts double).`),Jf=l("br"),Kf=i(`
Hitting a number which you\u2019ve already completed but others haven\u2019t scores you those points.`),Yf=l("br"),Qf=i(`
The winner is the first to complete this checklist and also have the best score overall.`),fu=n(),ut=l("table"),gi=l("thead"),h=l("tr"),Ii=l("th"),Zf=i("Player"),eh=n(),Ai=l("th"),th=i("Bull"),oh=n(),Ti=l("th"),lh=i("20"),rh=n(),ki=l("th"),ih=i("19"),sh=n(),Li=l("th"),ah=i("18"),nh=n(),Pi=l("th"),uh=i("17"),ch=n(),zi=l("th"),ph=i("16"),fh=n(),Ri=l("th"),hh=i("15"),dh=n(),Si=l("th"),mh=i("Points"),vh=n(),Di=l("th"),bh=i("Ranking"),yh=n(),Gt=l("tbody"),d=l("tr"),Ci=l("td"),Eh=i("Player 1"),wh=n(),Mi=l("td"),_h=i("XXX"),gh=n(),Bi=l("td"),Ih=i("XXX"),Ah=n(),Ni=l("td"),Th=i("XXX"),kh=n(),ji=l("td"),Lh=i("XXX"),Ph=n(),xi=l("td"),zh=i("XXX"),Rh=n(),qi=l("td"),Sh=i("XXX"),Dh=n(),Oi=l("td"),Ch=i("XXX"),Mh=n(),Hi=l("td"),Bh=i("0"),Nh=n(),Fi=l("td"),jh=i("1"),xh=n(),m=l("tr"),Xi=l("td"),qh=i("Player 2"),Oh=n(),Ui=l("td"),Hh=i("XXX"),Fh=n(),Gi=l("td"),Xh=i("XXX"),Uh=n(),Wi=l("td"),Gh=i("XXX"),Wh=n(),Vi=l("td"),Vh=i("XXX"),$h=n(),$i=l("td"),Jh=i("XXX"),Kh=n(),Ji=l("td"),Yh=i("XXX"),Qh=n(),Ki=l("td"),Zh=i("XXX"),ed=n(),Yi=l("td"),td=i("100"),od=n(),Qi=l("td"),ld=i("2"),hu=n(),Al=l("p"),rd=i("There are additional extended rules too, notably:"),du=n(),ke=l("ul"),Zi=l("li"),id=i("Cutthroat - scores go on everybody else, not you, the winner has the lowest score at the end"),sd=n(),es=l("li"),ad=i("Require 3 - If all 3 hits on a number aren\u2019t completed within a single visit they aren\u2019t saved for the next visit"),nd=n(),ts=l("li"),ud=i("Unlimited vs round-based, usually 20 rounds"),mu=n(),Tl=l("h2"),cd=i("Development process"),vu=n(),v=l("ol"),Qe=l("li"),pd=i("Set up version control."),fd=l("br"),hd=i(`
I\u2019ve opted to use a GitHub-hosted `),Wt=l("a"),dd=i("Git repository"),md=i("."),vd=n(),Ze=l("li"),bd=i("Set up a development environment."),yd=l("br"),Ed=i(`
I\u2019ve chosen VS Code on Windows with extensions C#, .NET Core Test Explorer, Azure Functions.`),wd=l("br"),_d=i(`
I\u2019m working alone, there\u2019s no need for collaboration tools for this project, documentation to be housed with the code.`),gd=n(),Vt=l("li"),Id=i("Write the domain logic (C#, .NET Standard), ignorant of hosting considerations."),Ad=l("br"),Td=i(`
Testing (xUnit) with a pragmatic TDD approach, that is I\u2019m not writing code just to pass tests, but I am writing tests first.`),kd=n(),de=l("li"),Ld=i("Configure build pipeline, triggered from check-in to master."),Pd=l("br"),zd=i(`
Azure DevOps uses `),$t=l("a"),Rd=i("azure-pipelines.yml"),Sd=i("."),Dd=l("br"),Cd=i(`
I\u2019m a little uncomfortable now in terms of vendor lock-in, but at least I\u2019m building CI in from the start, defined in the codebase, can switch later.`),Md=n(),Jt=l("li"),Bd=i("Build the function wrappers (API) referencing the tested domain project (with tests) and add to build pipeline."),Nd=l("br"),jd=i(`
Now I\u2019m learning. It is immediately clear that this code can never be portable to AWS, GCP etc, wrappers would instead need to be built separately.`),xd=n(),me=l("li"),qd=i("Configure release pipeline, triggered from successful build/test."),Od=l("br"),Hd=i(`
Azure DevOps this is currently UI-driven, YAML expected `),Kt=l("a"),Fd=i("2018 Q4"),Xd=i("."),Ud=l("br"),Gd=i(`
Again, this is worryingly Azure-specific but it has to be to some extent, we\u2019re now connecting to the platform itself.`),Wd=n(),os=l("li"),Vd=i("Build independent integration tests, this is on hold but will probably use Postman on the command line (Newman)."),$d=n(),Yt=l("li"),Jd=i("Build the user interface and add to build/ release pipelines."),Kd=l("br"),Yd=i(`
I stick with consistent naming convention for collation purposes but this is an AngularJS (for now) project, not .NET.`),Qd=n(),ls=l("li"),Zd=i("Manual live smoke testing."),bu=n(),kl=l("h2"),em=i("Code structure and naming"),yu=n(),Ll=l("p"),tm=i("Projects:"),Eu=n(),F=l("ul"),Pl=l("li"),om=i("Mth.Darts.Cricket"),Qt=l("ul"),rs=l("li"),lm=i("Domain service (business logic), C#, .NET Standard"),rm=n(),is=l("li"),im=i("Minimise dependencies to maximise portability, reduce build times and improve supportability."),sm=n(),zl=l("li"),am=i("Mth.Darts.Cricket.Tests"),ss=l("ul"),as=l("li"),nm=i("Business logic tests, C#, xUnit"),um=n(),Rl=l("li"),cm=i("Mth.Darts.Cricket.Api"),ns=l("ul"),us=l("li"),pm=i("Application service (Azure functions) referencing the domain service, C#, .NET Core"),fm=n(),Sl=l("li"),hm=i("Mth.Darts.Cricket.Api.Tests"),cs=l("ul"),ps=l("li"),dm=i("Application service tests, C#, xUnit"),mm=n(),Dl=l("li"),vm=i("Mth.Darts.Cricket.Ui"),fs=l("ul"),hs=l("li"),bm=i("User interface, static web pages using AngularJS to reference the Api"),wu=n(),Cl=l("h2"),ym=i("Standards"),_u=n(),_=l("ul"),ds=l("li"),Em=i("1 file per class/ struct, even if only used in one place"),wm=n(),ms=l("li"),_m=i("Files names in a collation-friendly way, nested items to be prefixed with the parent name"),gm=n(),vs=l("li"),Im=i("Comments where they add value, must describe the why not the how (that should be obvious from the code)"),Am=n(),Ml=l("li"),Tm=i("Hold scoreboard state in nested structs not classes because "),Zt=l("a"),km=i("has no identity, defined by its data"),Lm=n(),Bl=l("li"),Pm=i("JSON Serialisation using Newtonsoft.Json - "),eo=l("a"),zm=i("use attributes to expose private properties"),Rm=n(),bs=l("li"),Sm=i("Adopt REST API standards, e.g. avoid verbs, pluralise collections always"),Dm=n(),ys=l("li"),Cm=i("single .gitignore file at root as usually recommended"),Mm=n(),Es=l("li"),Bm=i(".vscode settings checked-in could help future developers, no harm to the code to keep them"),gu=n(),Nl=l("h2"),Nm=i("API"),Iu=n(),jl=l("p"),jm=i("The connection between front and backend is through a REST API (Azure Function App) with 4 key endpoints (Functions):"),Au=n(),oe=l("ul"),xl=l("li"),xm=i("create match"),et=l("ul"),ws=l("li"),qm=i("requires list of players and match settings"),Om=n(),_s=l("li"),Hm=i("returns new match, initialised with zero scores/ hits"),Fm=n(),gs=l("li"),Xm=i("POST: /api/matches"),Um=n(),ql=l("li"),Gm=i("throw dart"),tt=l("ul"),Is=l("li"),Wm=i("requires current match state and details of the current throw"),Vm=n(),As=l("li"),$m=i("returns updated match"),Jm=n(),Ts=l("li"),Km=i("POST: /api/matches/123/"),Ym=n(),Ol=l("li"),Qm=i("undo throw"),ot=l("ul"),ks=l("li"),Zm=i("requires current match state (including history of throws)"),ev=n(),Ls=l("li"),tv=i("returns updated match state"),ov=n(),Ps=l("li"),lv=i("POST: /api/matches/123/undo"),rv=n(),Hl=l("li"),iv=i("start new game"),lt=l("ul"),zs=l("li"),sv=i("requires current match state (with current game marked as complete)"),av=n(),Rs=l("li"),nv=i("returns updated match state"),uv=n(),Ss=l("li"),cv=i("POST: /api/matches/123/newgame"),Tu=n(),ct=l("p"),pv=i("These are all independently deterministic but obviously need to be combined in a logical order to manage the flow of a Cricket darts match."),fv=l("br"),hv=i(`
This activity will be left to the caller to manage for the MVP, with persistent this may change.`),ku=n(),Fl=l("h2"),dv=i("Azure Functions"),Lu=n(),k=l("p"),mv=i("A key component of this serverless design is the use of scalable functions, for which I\u2019ve chosen Azure Functions."),vv=l("br"),bv=i(`
Azure deploys functions within an umbrella entity called a `),Ds=l("strong"),yv=i("Function App"),Ev=i("."),wv=l("br"),_v=i(`
Function Apps are considered infrastructure and the recommended deployment approach is to use `),to=l("a"),gv=i("Azure Resource Manager (ARM) templates"),Iv=i("."),Av=l("br"),Tv=i(`
Functions are considered code and the recommended deployment approach is to use `),oo=l("a"),kv=i("Zip Deployment"),Lv=i("."),Pu=n(),Xl=l("h2"),Pv=i("Create Function App manually"),zu=n(),Ul=l("p"),zv=i("In the interest of understanding before coding I experimented by manually creating a Function App using QuickStart (Azure Portal)."),Ru=n(),Le=l("ul"),Cs=l("li"),Rv=i("resource group: xmthcricket01"),Sv=n(),Ms=l("li"),Dv=i("function app: xmthcricket01functionapp"),Cv=n(),Bs=l("li"),Mv=i("storage account (required): xmthcricket01storageaccount"),Su=n(),Pe=l("p"),Bv=i("I feel that standards are important from the start so I settled on naming convention %owner%%application%%version%%resource%."),Nv=l("br"),jv=i(`
I avoided underscores, hyphens, mixed case because storage accounts don\u2019t allow them and consistency trumps appearance in my opinion.`),xv=l("br"),qv=i(`
I then examined the storage account, since I didn\u2019t understand its purpose.`),Du=n(),ze=l("ul"),lo=l("li"),Ov=i("Blob container "),Ns=l("em"),Hv=i("azure-webjobs-hosts"),Fv=i(" used for storing blob receipts, ensuring that each blob is only processed once."),Xv=n(),ro=l("li"),Uv=i("Blob container "),js=l("em"),Gv=i("azure-webjobs-secrets"),Wv=i(" used for storing keys/secrets required by the function app (I guess, can\u2019t find documentation)."),Vv=n(),Gl=l("li"),$v=i("File share xmthcricket01 which guessing from the name represents the function app"),Q=l("ul"),xs=l("li"),Jv=i(".nuget (capture NuGet dependencies)"),Kv=n(),qs=l("li"),Yv=i(".ssh (for connectivity)"),Qv=n(),Os=l("li"),Zv=i("data (ASP.NET compilation snapshots, function secrets + sample data)"),eb=n(),Hs=l("li"),tb=i("LogFiles (for if we opt to inject logging into our functions)"),ob=n(),Wl=l("li"),lb=i("site"),Z=l("ul"),Fs=l("li"),rb=i("deployments (deployment settings + history - will need to be tidied up at some point)"),ib=n(),Xs=l("li"),sb=i("diagnostics (diagnostics settings)"),ab=n(),Us=l("li"),nb=i("locks (empty)"),ub=n(),Gs=l("li"),cb=i("repository (source code depending on deployment approach)"),pb=n(),Ws=l("li"),fb=i("wwwroot (The published function app itself)"),Cu=n(),pt=l("p"),hb=i("Makes sense, everything needed to make the app run is stored in a storage account we own, though don\u2019t need to actively manage (serverless)."),db=l("br"),mb=i(`
I\u2019m not going to worry too much about the details except that:`),Mu=n(),ft=l("ul"),Vs=l("li"),vb=i("For automation purposes we need to replace the wwwroot directory contents"),bb=n(),$s=l("li"),yb=i("Deployment history could build up and storage accounts are paid for by size, so cleanup may be required"),Bu=n(),Vl=l("h2"),Eb=i("Create Function App with code"),Nu=n(),g=l("p"),wb=i("The most familiar way for me to create a C# HTTP trigger based function is the "),io=l("a"),_b=i("dotnet CLI"),gb=i(":"),Ib=l("br"),Ab=n(),Js=l("code"),Tb=i("dotnet new func"),kb=i(" to create the project from within a target folder"),Lb=l("br"),Pb=n(),Ks=l("code"),zb=i("dotnet new http"),Rb=i(" to create a new http trigger function within a function app project"),Sb=l("br"),Db=i(`
Producing the structure seen in the `),so=l("a"),Cb=i("Azure functions C# Developer reference"),Mb=i("."),ju=n(),M=l("p"),Bb=i("It is also possible using the "),ao=l("a"),Nb=i("azure-functions-core-tools"),jb=i(":"),xb=l("br"),qb=n(),Ys=l("code"),Ob=i("func init"),Hb=i(" to create a function app, selecting a runtime (dotnet, selected from list)"),Fb=l("br"),Xb=n(),Qs=l("code"),Ub=i("func new"),Gb=i(" to create a function, C# httpTrigger"),xu=n(),$l=l("p"),Wb=i("The end result is very similar:"),qu=n(),Re=l("ul"),Zs=l("li"),Vb=i(".csproj with netcoreapp2.1 set as the target framework"),$b=n(),ea=l("li"),Jb=i("host.json with version set to \u201C2.0\u201D"),Kb=n(),ta=l("li"),Yb=i("local.settings.json"),Ou=n(),no=l("pre"),Hu=n(),Jl=l("ul"),oa=l("li"),Qb=i("A hello world sample function; Company.Function.http"),Fu=n(),uo=l("pre"),Xu=n(),le=l("p"),Zb=i("Simple enough, an asynchronous JSON REST endpoint which accepts GET and POST methods, expects a / route, does some basic validation and returns a response."),e1=l("br"),t1=i(`
This is .NET Core so no surprises that logging is available by dependency injection.`),o1=l("br"),l1=i(`
This example has everything I need for now so no need to dwell on the details.`),r1=l("br"),i1=i(`
Time to build my own\u2026`),Uu=n(),co=l("p"),po=l("a"),s1=i("Mth.Darts.Cricket.Api.StartMatch"),a1=i(" should:"),Gu=n(),X=l("ul"),la=l("li"),n1=i("accept POST only"),u1=n(),ra=l("li"),c1=i("expect a route of /api/matches"),p1=n(),ia=l("li"),f1=i("expect parameters of scoring_mode, max_rounds and a list of [player[]], or a single json object containing all three"),h1=n(),sa=l("li"),d1=i("reference the domain service, specifically the Match constructor to get back a Match object, tested elsewhere"),m1=n(),aa=l("li"),v1=i("return a json object representing the Cricket match if all went well, an error message otherwise"),Wu=n(),Kl=l("h2"),b1=i("Testing Azure functions"),Vu=n(),Yl=l("p"),y1=i("There are several different facets to testing here:"),$u=n(),re=l("ol"),na=l("li"),E1=i("Logic - nothing to do with serverless design but the most important part in my opinion"),w1=n(),ua=l("li"),_1=i("Plumbing - does the function work as expected when called directly using an HttpRequest object?"),g1=n(),ca=l("li"),I1=i("Routing - does an HTTP request get picked up by the expected function?"),A1=n(),pa=l("li"),T1=i("Integration - When deployed does everything just work?"),Ju=n(),Ql=l("h3"),k1=i("Testing logic"),Ku=n(),ve=l("p"),L1=i("Nothing new here, create a test project using "),fa=l("code"),P1=i("dotnet new xunit"),z1=l("br"),R1=i(`
I did make things awkward for myself by restricting access on as much as possible so had to tweak the project to `),fo=l("a"),S1=i("make internals visible to the test project"),D1=i("."),Yu=n(),Zl=l("h3"),C1=i("Testing function plumbing"),Qu=n(),ht=l("p"),M1=i("No need to repeat anything here, I followed the guide to "),ho=l("a"),B1=i("testing azure functions"),N1=i(", extended it for multiple parameters and a different return value and used a JSON test file."),Zu=n(),er=l("h3"),j1=i("Testing function routing"),ec=n(),w=l("p"),x1=i("In REST terms a match can be considered a "),ha=l("em"),q1=i("resource"),O1=i(", a member of the matches "),da=l("em"),H1=i("collection"),F1=i("."),X1=l("br"),U1=i(`
To create a match we need to pass parameters to the uri, repeating the player parameter as many times as required.`),G1=l("br"),W1=i(`
For a 2 player match between Van Gerwen and Taylor we need to`),V1=l("br"),$1=n(),ma=l("code"),J1=i("POST /api/v1/matches/?scoring_mode=Standard&max_rounds=0&player[]=Van%20Gerwen&player[]=Taylor"),K1=l("br"),Y1=i(`
Initially there\u2019s no persistent data store, so this match isn\u2019t retrievable, but if it were it would be available at, e.g. /api/v1/matches/123.`),Q1=l("br"),Z1=i(`
Note that I converted player to player[] in the url, because this is what AngularJS and some backend frameworks consider correct, though I can\u2019t find a definitive answer on the matter anywhere.`),tc=n(),rt=l("p"),e2=i("To run Azure Functions locally from within the function app project use the Azure Functions Core Tools: "),va=l("code"),t2=i("func start"),o2=l("br"),l2=i(`
I\u2019ve opted to manually test routing using Postman for the MVP but intend to automate this eventually, using one of:`),oc=n(),dt=l("ul"),tr=l("li"),r2=i("Postman CLI tool "),mo=l("a"),i2=i("Newman"),s2=n(),or=l("li"),a2=i(".Net Core "),vo=l("a"),n2=i("Integration tests"),lc=n(),lr=l("h2"),u2=i("Continuous Integration, Delivery & Deployment"),rc=n(),ie=l("p"),c2=i("In modern software development there is no excuse to not have some form of continuous integration (CI)."),p2=l("br"),f2=i(`
Build and Test automation is usually easy and cheap to setup and pays for itself even in the short term.`),h2=l("br"),d2=i(`
It is also entirely within the control of the software development team.`),m2=l("br"),v2=i(`
How you implement this is dependent on the team and project requirements, for this project I\u2019m just building on the master branch.`),ic=n(),mt=l("p"),b2=i("Continuous delivery is just as valuable, all projects should strive for some degree of this, but it is significantly harder to implement."),y2=l("br"),E2=i(`
Release automation complexity depends on the technology stack and collaboration with TechOps but the benefits far outweigh the costs.`),sc=n(),Se=l("p"),w2=i("Continuous deployment takes this a step further, automating releases without human intervention, subject to quality gates from automated testing."),_2=l("br"),g2=i(`
This is a cultural thing, not all organisations or teams can work in this way for a myriad of reasons.`),I2=l("br"),A2=i(`
I can though, for this project, so that\u2019s the plan, straight to production after every build which passes tests.`),ac=n(),rr=l("h2"),T2=i("Build pipeline"),nc=n(),ir=l("p"),k2=i("Two mandatory requirements here:"),uc=n(),De=l("ul"),ba=l("li"),L2=i("Build automatically triggered every time the code is changed."),P2=n(),ya=l("li"),z2=i(`Build steps live with the code because who better to know how to build an application than the application developer?
And one optional requirement:`),R2=n(),Ea=l("li"),S2=i("Build should be target-agnostic for portability, to avoid vendor lock-in"),cc=n(),b=l("p"),D2=i("Focussing just on the mandatory requirements for the MVP I followed Microsoft\u2019s advice on "),bo=l("a"),C2=i("Linking Azure DevOps to GitHub"),M2=i("."),B2=l("br"),N2=i(`
I chose the `),wa=l("strong"),j2=i("GitHub App"),x2=i(` option because I didn\u2019t want it linked directly to my credentials.
In GitHub `),_a=l("strong"),q2=i("Azure Pipelines"),O2=i(" now shows up under "),ga=l("em"),H2=i("Settings > Integration & services > Installed GitHub Apps"),F2=i(" where I can configure it to restrict access to specific repositories or remove it altogether."),X2=l("br"),U2=i(`
In Azure DevOps `),Ia=l("strong"),G2=i("mtempleheald"),W2=i(" now shows up under "),Aa=l("em"),V2=i("Project Settings > Pipelines > Service Connections"),$2=i(", I can disconnect it here but it tells me that any configuration must be done on GitHub."),pc=n(),ee=l("p"),J2=i("During this process a default "),yo=l("a"),K2=i("azure-pipelines.yml"),Y2=i(" file was presented to me with the option to commit it, which I accepted. From here it didn\u2019t take long to configure a working build by chaining dotnet CLI commands together."),Q2=l("br"),Z2=i(`
It is very easy to break a build so having this set up early on is really important for stability, I\u2019d say that this is step 1 on the way to true DevOps, where the developers take responsibility for handover of artifacts.`),ey=l("br"),ty=i(`
Some nice visual feedback and convenient logging, plus a status badge is available for the project
`),Eo=l("a"),sr=l("img"),fc=n(),ar=l("h3"),oy=i("Build steps"),hc=n(),nr=l("p"),ly=i("Build steps used:"),dc=n(),B=l("ul"),wo=l("li"),ry=i("script: "),Ta=l("code"),iy=i("dotnet --version"),sy=i(" - check that we know which version of .NET lives on the Microsoft-managed build agent"),ay=n(),_o=l("li"),ny=i("script: "),ka=l("code"),uy=i("dotnet build '<project>' --configuration $(buildConfiguration)"),cy=i(" - build a named project"),py=n(),go=l("li"),fy=i("task: "),La=l("code"),hy=i("DotNetCoreCLI@2"),dy=i(" - run tests"),my=n(),Io=l("li"),vy=i("script: "),Pa=l("code"),by=i("dotnet publish '<function_app_project>' --output '<target_dir>'"),yy=i(" - prepare function app artifacts for publication"),Ey=n(),Ao=l("li"),wy=i("task: "),za=l("code"),_y=i("CopyFiles@2"),gy=i(" - copy specified files to artifact drop location"),Iy=n(),To=l("li"),Ay=i("task: "),Ra=l("code"),Ty=i("PublishBuildArtifacts@1"),ky=i(" - publish the artifacts ready for the release pipeline"),mc=n(),ur=l("p"),Ly=i("output of dotnet publish:"),vc=n(),cr=l("ul"),O=l("li"),Py=i(`FunctionApp
`),Sa=l("em"),zy=i("bin/"),Ry=i(` StartMatch
`),Da=l("em"),Sy=i("function.json"),Dy=i(` host.json * *.deps.json
which seems to match the `),ko=l("a"),Cy=i("continuous deployment requirements"),My=i("."),By=l("br"),Ny=i(`
What this doesn\u2019t make clear however is that the top level folder is not expected within the zip file.`),jy=l("br"),xy=i(`
This is important as it means that the build pipeline does not need to provide the name for the deployed artifact and facilitates a multi-environment deployment from a single build artifact (assuming everything else is parameterised appropriately).`),bc=n(),pr=l("h2"),qy=i("Azure DevOps Artifacts"),yc=n(),Ce=l("p"),Oy=i("It is good practice to keep build and release steps separate "),Lo=l("a"),Hy=i("The 12 Factor App"),Fy=i("."),Xy=l("br"),Uy=i(`
This makes sense, there may be some overlap but build steps are developer controlled and release steps are about environment config and is more of a TechOps role unless you truly embrace DevOps.`),Ec=n(),U=l("p"),Gy=i("In the terminology of Azure DevOps I need to publish an "),Ca=l("strong"),Wy=i("artifact"),Vy=i(" on the "),Ma=l("strong"),$y=i("build pipeline"),Jy=i(" to make it available to the "),Ba=l("strong"),Ky=i("release pipeline"),Yy=i("."),Qy=l("br"),Zy=i(`
This is simple, but very easy to make mistakes, so it is useful to be able to debug pipeline execution.`),wc=n(),Po=l("p"),eE=i("It helps to understand how files are stored on the build/release agents, "),zo=l("a"),tE=i("pre-defined variables"),_c=n(),vt=l("table"),Na=l("thead"),be=l("tr"),ja=l("th"),oE=i("Path structure"),lE=n(),xa=l("th"),rE=i("System."),iE=n(),qa=l("th"),sE=i("Build."),aE=n(),Oa=l("th"),nE=i("Agent."),uE=n(),S=l("tbody"),ye=l("tr"),Ha=l("td"),cE=i("/agent/"),pE=n(),gc=l("td"),fE=n(),Ic=l("td"),hE=n(),Fa=l("td"),dE=i("HomeDirectory"),mE=n(),Ee=l("tr"),Xa=l("td"),vE=i("/agent/work/"),bE=n(),Ua=l("td"),yE=i("WorkFolder"),EE=n(),Ac=l("td"),wE=n(),Ga=l("td"),_E=i("RootDirectory WorkFolder"),gE=n(),we=l("tr"),Wa=l("td"),IE=i("/agent/work/1"),AE=n(),Tc=l("td"),TE=n(),kc=l("td"),kE=n(),Va=l("td"),LE=i("BuildDirectory"),PE=n(),_e=l("tr"),$a=l("td"),zE=i("/agent/work/1/s"),RE=n(),Ja=l("td"),SE=i("DefaultWorkingDirectory"),DE=n(),Ka=l("td"),CE=i("SourcesDirectory"),ME=n(),Lc=l("td"),BE=n(),ge=l("tr"),Ya=l("td"),NE=i("/agent/work/1/b"),jE=n(),Pc=l("td"),xE=n(),Qa=l("td"),qE=i("BinariesDirectory"),OE=n(),zc=l("td"),HE=n(),Ie=l("tr"),Za=l("td"),FE=i("/agent/work/1/a"),XE=n(),Rc=l("td"),UE=n(),en=l("td"),GE=i("ArtifactStagingDirectory StagingDirectory"),WE=n(),Sc=l("td"),VE=n(),Ae=l("tr"),tn=l("td"),$E=i("/agent/work/r1/a"),JE=n(),on=l("td"),KE=i("ArtifactsDirectory DefaultWorkingDirectory"),YE=n(),Dc=l("td"),QE=n(),ln=l("td"),ZE=i("ReleaseDirectory"),Cc=n(),fr=l("p"),ew=i("Most of these steps provide useful information but if it isn\u2019t enough we can add extra debug information:"),Mc=n(),bt=l("ul"),Ro=l("li"),tw=i("To debug build steps add "),rn=l("code"),ow=i("system.debug: true"),lw=i(" to azure-pipelines.yml."),rw=n(),So=l("li"),iw=i("To debug release steps add "),sn=l("em"),sw=i("system.debug"),aw=i(" to the Variables tab on the UI, with a value of true."),Bc=n(),hr=l("p"),nw=i("A notable issue I had was with the release pipeline being unable to find the published function app artifact, despite triple-checking paths and successful step execution:"),Nc=n(),yt=l("ul"),dr=l("li"),uw=i("Zip up function app - "),an=l("em"),cw=i("Successfully created archive: /home/vsts/work/1/a/11.zip"),pw=n(),nn=l("li"),fw=i("Publish Build Artifacts - no listed output (suspicious but successful)"),jc=n(),Et=l("p"),hw=i("It turns out that the publish step was failing silently because I\u2019d put an incorrect parameter in. I only figured this out by looking at the "),Do=l("a"),dw=i("source code"),mw=i(" of the suspicious step. There are 2 allowed values for artifactType; \u2018Container\u2019 and \u2018FilePath\u2019. Turns out I\u2019d been passing the description of container instead (\u2018Azure Pipelines/TFS\u2019) - oops!"),xc=n(),mr=l("ul"),Co=l("li"),vw=i("Publish Build Artifacts - "),un=l("em"),bw=i("Upload \u2018/home/vsts/work/1/a\u2019 to file container: \u2019#/2495698/drop\u2019"),yw=i(" - success!"),qc=n(),vr=l("h2"),Ew=i("Release pipeline"),Oc=n(),G=l("p"),ww=i("Azure DevOps release pipelines currently work differently from build pipelines, although release pipeline Configuration as code (YAML) is "),Mo=l("a"),_w=i("planned for 2018 Q4"),gw=i("."),Iw=l("br"),Aw=i(`
That being said, tasks are common but categorised (build, utility, test, package, deploy, tool) - `),Bo=l("a"),Tw=i("code"),kw=i("."),Lw=l("br"),Pw=i(`
So there is nothing stopping me from adding release steps to the azure-pipelines.yml file above, but I\u2019m going to do it properly instead, keeping build and release separate by using the published artifacts.`),Hc=n(),br=l("h3"),zw=i("Connecting the release pipeline to Azure"),Fc=n(),y=l("p"),Rw=i("The Azure Portal function app page has a "),cn=l("em"),Sw=i("Deployment Center"),Dw=i(" tab, where you can configure a Git repository connection."),Cw=l("br"),Mw=i(`
This uses `),No=l("a"),Bw=i("Kudo"),Nw=i(" which by default expects either 1 solution or 1 project to deploy, but can be "),jo=l("a"),jw=i("customised"),xw=i("."),qw=l("br"),Ow=i(`
It can also be customised in the Azure portal, by adding the target project (`),pn=l("em"),Hw=i("PROJECT = function-app/function-app.csproj"),Fw=i(")"),Xw=l("br"),Uw=i(`
to application settings `),fn=l("em"),Gw=i("Azure > Overview > Application Settings > Application Settings"),Ww=i(`
I\u2019m uncomfortable with this approach for several reasons:`),Xc=n(),Me=l("ul"),hn=l("li"),Vw=i("The GitHub connection is tied directly to my account"),$w=n(),dn=l("li"),Jw=i("This configuration is hidden away and easily forgotten, though I could address this using the custom .deployment file in the code."),Kw=n(),mn=l("li"),Yw=i("What about the other elements of the release? Storage, static content, I want consistency in my releases."),Uc=n(),H=l("p"),Qw=i("The better approach is to manage releases within an independent release pipeline (Azure DevOps), even when aiming for continuous deployment."),Zw=l("br"),e3=i(`
This requires setting up an Azure Resource Manager (ARM) connection:`),t3=l("br"),o3=n(),vn=l("em"),l3=i("Azure DevOps > Project Settings > Pipelines > Service Connections > New Service Connection > Azure Resource Manager"),r3=l("br"),i3=i(`
For which I had to `),xo=l("a"),s3=i("create a service principal"),a3=i(":"),Gc=n(),wt=l("ol"),bn=l("li"),n3=i("Azure Portal > App Registrations > Create > Web App (url not important yet)"),u3=n(),yn=l("li"),c3=i("Azure Portal > Subscriptions > ~MySubscription~ > IAM > Add role assignment > Contributor + App name"),Wc=n(),yr=l("p"),p3=i("I could now access the parameters required to add the connection:"),Vc=n(),Be=l("ul"),qo=l("li"),f3=i("Tenant-Id:"),h3=l("br"),d3=i(`
Azure Portal > Azure Active Directory > Properties > Directory ID`),m3=n(),Oo=l("li"),v3=i("Application ID:"),b3=l("br"),y3=i(`
Azure Portal > App Registrations > ~My App~ > Application ID`),E3=n(),Ho=l("li"),w3=i("Authentication Key:"),_3=l("br"),g3=i(`
Azure Portal > App Registrations > ~My App~ > Settings > Keys`),$c=n(),Er=l("p"),I3=i("Hereafter release pipeline tasks simply need to refer to this connection and it just works."),Jc=n(),wr=l("h3"),A3=i("Release pipeline steps"),Kc=n(),_r=l("ul"),gr=l("li"),Fo=l("a"),T3=i("ARM deployment"),k3=i(" - all infrastructure elements within the resource group, the equivalent of using the command line tools:"),Yc=n(),Xo=l("pre"),Qc=n(),Ne=l("ul"),Ir=l("li"),Uo=l("a"),L3=i("Azure App Service Deploy (Preview)"),P3=i(" - azure function deployment to function app"),z3=n(),Ar=l("li"),Go=l("a"),R3=i("Azure File Copy (Preview)"),S3=i(" - static website copied to $web blob container"),D3=n(),Tr=l("li"),Wo=l("a"),C3=i("Azure CLI"),M3=i(" - using the az command line tools to turn the blob container into a static website:"),Zc=n(),Vo=l("pre"),ep=n(),kr=l("h2"),B3=i("ARM templates for continuous deployment"),tp=n(),Lr=l("p"),N3=i("I have come across ARM templates before and know that they\u2019re the recommended approach for (re)deploying Azure artifacts in a consistent fashion, but I\u2019ve never built any from scratch, so it is time to investigate. My aim here is to develop a pattern which I can use again for another serverless app in Azure, without having to think about this stuff again. This has been easily the most time-consuming part of this project."),op=n(),Pr=l("p"),j3=i("I want a single ARM template containing all aspects of the serverless application MVP:"),lp=n(),je=l("ul"),En=l("li"),x3=i("Storage account for static file hosting"),q3=n(),wn=l("li"),O3=i("Storage account for function app support"),H3=n(),$o=l("li"),F3=i("Function app (It is possible but makes little sense to "),Jo=l("a"),X3=i("deploy functions themselves using ARM"),U3=i(")"),rp=n(),_t=l("p"),G3=i("ARM "),Ko=l("a"),W3=i("template structure"),V3=i(":"),ip=n(),W=l("ul"),_n=l("li"),$3=i("parameters - passed on execution, e.g. environment/ version/ build number"),J3=n(),gn=l("li"),K3=i("variables - build upon parameters and group names together for consistency"),Y3=n(),In=l("li"),Q3=i("functions - user-defined functions"),Z3=n(),zr=l("li"),e_=i("resources - deploy stuff - "),Yo=l("a"),t_=i("intro"),o_=n(),An=l("li"),l_=i("outputs - capture values from during execution in case further processing required, e.g. url available"),sp=n(),N=l("p"),r_=i("There are some useful "),Qo=l("a"),i_=i("quickStart templates"),s_=i(" to learn from, specifically "),Zo=l("a"),a_=i("101-storage-account-create"),n_=i(" and "),el=l("a"),u_=i("101-function-app-create-dynamic"),c_=i("."),p_=l("br"),f_=i(`
It can also be useful to create stuff manually once and view the generated script:`),h_=l("br"),d_=i(`
Azure Portal > Resource Groups > %Resource Group% > Automation Script`),ap=n(),Rr=l("p"),m_=i("I also found it useful to briefly look at the REST APIs which ARM deployment use under the hood:"),np=n(),gt=l("ul"),Tn=l("li"),tl=l("a"),v_=i("storage account REST API"),b_=n(),kn=l("li"),ol=l("a"),y_=i("webapps REST API"),up=n(),Sr=l("h3"),E_=i("Preparing the ARM template"),cp=n(),Dr=l("p"),w_=i("Starting with naming I want the following visible in the Azure Portal:"),pp=n(),se=l("ul"),Ln=l("li"),__=i("mthcricket01 (resource group)"),g_=n(),Pn=l("li"),I_=i("mthcricket01api (function app)"),A_=n(),zn=l("li"),T_=i("mthcricket01apistorage (storage account required by function app)"),k_=n(),Rn=l("li"),L_=i("mthcricket01ui (storage account for static content)"),fp=n(),Cr=l("p"),P_=i("This is easily achieved using variables:"),hp=n(),ll=l("pre"),dp=n(),ae=l("p"),z_=i("The real details are in the resources section and this can get quite complicated; you have to learn Azure terminology, relationships and specify API versions."),R_=l("br"),S_=i(`
I\u2019ve found the most useful information in the `),rl=l("a"),D_=i("Azure template reference"),C_=i(" where apiVersion options are clear."),M_=l("br"),B_=i(`
This is also available through Azure PowerShell:`),mp=n(),il=l("pre"),vp=n(),It=l("p"),N_=i("It took me a long time to get to grips with apiVersion, in the end I realised that it was the tooling in VS Code that was causing the confusion with unnecessary warnings, I learnt to instead just perform a test run in PowerShell (requires the "),sl=l("a"),j_=i("Azure PowerShell module"),x_=i("):"),bp=n(),al=l("pre"),yp=n(),xe=l("p"),q_=i("It is possible to have the template refer to the latest version, using "),Sn=l("code"),O_=i("[providers('<provider>','<type>').apiVersions[0]]"),H_=i(" but this opens you up to breaking changes, so I\u2019m avoiding that route. I do think that it is important to be on the latest version you can be, this is a process thing, add the upgrade step into any future template update tasks."),F_=l("br"),X_=i(`
Once I was comfortable that I knew which versions I was aiming for I was able to get it done:`),Ep=n(),qe=l("ul"),Dn=l("li"),nl=l("a"),U_=i("Function App"),G_=n(),Cn=l("li"),ul=l("a"),W_=i("Hosting Plan for function app"),V_=n(),Mn=l("li"),cl=l("a"),$_=i("Storage Account"),wp=n(),Oe=l("p"),J_=i("Another awkward bit is configuring the "),pl=l("a"),K_=i("App Settings for Azure Functions"),Y_=i("."),Q_=l("br"),Z_=i(`
properties > siteConfig > appSettings:`),_p=n(),E=l("ul"),Mr=l("li"),e4=i("AzureWebJobsStorage == "),Bn=l("em"),t4=i("(DefaultEndpointsProtocol=https;AccountName=[name];AccountKey=[key])"),o4=n(),Br=l("li"),l4=i("AzureWebJobsDashboard == "),Nn=l("em"),r4=i("(DefaultEndpointsProtocol=https;AccountName=[name];AccountKey=[key])"),i4=n(),fl=l("li"),s4=i("WEBSITE"),jn=l("em"),a4=i("CONTENTAZUREFILECONNECTIONSTRING == "),n4=i("(DefaultEndpointsProtocol=https;AccountName=[name];AccountKey=[key])_"),u4=n(),Nr=l("li"),c4=i("WEBSITE"),xn=l("em"),p4=i("CONTENTSHARE == _mthcricket01api"),f4=n(),jr=l("li"),h4=i("AzureWebJobsDisableHomepage == "),qn=l("em"),d4=i("true"),m4=n(),hl=l("li"),v4=i("FUNCTIONS"),On=l("em"),b4=i("EXTENSION_VERSION == "),y4=i("~2_"),E4=n(),xr=l("li"),w4=i("FUNCTIONS"),Hn=l("em"),_4=i("WORKER_RUNTIME == _dotnet"),g4=n(),dl=l("li"),I4=i("AzureWebJobsDotNetReleaseCompilation == "),Fn=l("em"),A4=i("false"),T4=i(" (for debugging)"),k4=n(),qr=l("li"),L4=i("APPINSIGHTS"),Xn=l("em"),P4=i("INSTRUMENTATIONKEY == _plan"),gp=n(),At=l("p"),z4=i("I\u2019m still working through the nuances of functionapp deployment, I\u2019m getting internal server errors from Azure on the 2nd run through, having deployed fine the 1st run through. The difficulty is primarily because this stuff is quite new and in flux, there are changes between "),ml=l("a"),R4=i("Runtime version 1 vs 2"),S4=i(" plus I\u2019ve chosen some awkward options like Linux hosting."),Ip=n(),V=l("p"),D4=i("I opted part way through to adopt "),vl=l("a"),C4=i("Template Linking"),M4=i("."),B4=l("br"),N4=i(`
This was simply because the template was already becoming uncomfortably long though I\u2019m not sure this helped for my small project.`),j4=l("br"),x4=i(`
This didn\u2019t add too much complexity either, mostly moving the `),Un=l("em"),q4=i("DependsOn"),O4=i(" settings from the resource itself, to the deployment of the resource and providing template outputs."),Ap=n(),$=l("p"),H4=i("I prefer this in principle because it is more modular. For example the functionapp depends on the storage account connection string. To get this you need to access the storage account API to get the key:"),F4=l("br"),X4=n(),Gn=l("code"),U4=i(`"value": "[listKeys(variables('StorageAccountName'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0])]"`),G4=l("br"),W4=i(`
The equivalent in PowerShell: `),Wn=l("code"),V4=i("(Get-AzStorageAccountKey -ResourceGroupName <resource-group> -Name <storage-account>).key1"),$4=l("br"),J4=i(`
It feels right to me that this lives within the storage account creation template, not the function app, otherwise both templates need to manage apiVersions for the storage account API (although this example just uses latest).`),Tp=n(),Or=l("h2"),K4=i("Costs"),kp=n(),J=l("p"),Y4=i("This was never meant to be a serious production application, I\u2019m certainly not expecting it to scale to fully utilise serverless scaling capabilities."),Q4=l("br"),Z4=i(`
My intention was to use the `),bl=l("a"),eg=i("consumption plan"),tg=i(", therefore I was expecting it to be free or very close to."),og=l("br"),lg=i(`
What I actually witnessed was that in the couple of weeks that I\u2019ve had something running I accrued \xA30.09 on API storage and nearly \xA35 on an App Service Plan. I\u2019ve now addressed this, the ARM template was wrong, fixed by manually recreating all, viewing the generated Azure `),Vn=l("em"),rg=i("automation script"),ig=i(" and tweaking settings accordingly."),Lp=n(),Hr=l("h2"),sg=i("Summary"),Pp=n(),He=l("p"),ag=i("This project has been fairly successful so far, zero to "),yl=l("a"),ng=i("Live application"),ug=i(" in under a month."),cg=l("br"),pg=i(`
I\u2019ve also quite enjoyed bringing together lots of different elements I\u2019ve used to varying degrees to build something real.`),zp=n(),Fr=l("p"),fg=i("It isn\u2019t perfect of course, there are some known issues:"),Rp=n(),j=l("ul"),Xr=l("li"),$n=l("del"),hg=i("Scores continue adding on even if all ticked off - API logic wrong"),dg=i(" Fixed"),mg=n(),Jn=l("li"),Kn=l("del"),vg=i("Plan costing money, something isn\u2019t right about the functionapp deployment yet, consumption plan should be free (at low volumes)."),bg=n(),Ur=l("li"),yg=i("Clicking too quickly misrepresents the status as evidenced by the history of throws - 2 choices (possibly both):"),El=l("ul"),Yn=l("li"),Eg=i("throttling within Angular controller, checksum-esque, possibly store actions in local queue before calling API (web worker?)"),wg=n(),Qn=l("li"),_g=i("incremement version within the API, check that requests are received in order, depends upon data persistence but may be better solution"),gg=n(),Zn=l("li"),Ig=i("Skip function totally broken (symptom of the above)"),Ag=n(),wl=l("li"),Tg=i("Initial load is extremely slow (several seconds) and it "),eu=l("em"),kg=i("appears"),Lg=i(" to be broken. Possibly send a dummy request in the background to hide this from the user."),Pg=n(),tu=l("li"),zg=i("Buttons jump about a bit due to flexbox/ grid layout and conditional display of skip, would be nice to fix this"),Sp=n(),Gr=l("p"),Rg=i("There\u2019s also outstanding work to do:"),Dp=n(),Tt=l("ul"),ou=l("li"),Sg=i("Deployments building up in storage, no need to keep history of deployments so need to add clear step to release pipeline (start)."),Dg=n(),lu=l("li"),Cg=i("Better understand Azure\u2019s inner workings, or terminology at least, I feel that I\u2019m missing something (or the documentation is). Possibly I\u2019m just more pedantic than most users, I want to understand it, not just get it working."),this.h()},l(t){st=r(t,"H1",{});var c=a(st);Af=s(c,"Building a Serverless Application in Azure"),c.forEach(o),iu=u(t),at=r(t,"P",{});var Cp=a(at);Tf=s(Cp,"Serverless computing is getting a lot of attention at the moment, touted as a great way to get to market quickly and popular with startups."),kf=r(Cp,"BR",{}),Lf=s(Cp,`
My aim with this project is to add this tool to my arsenal by building a small but realistically complex proof of concept application:`),Cp.forEach(o),su=u(t),nt=r(t,"UL",{});var Mp=a(nt);di=r(Mp,"LI",{});var dI=a(di);Pf=s(dI,"Backend built using Azure Functions written in C# and .NET Core"),dI.forEach(o),zf=u(Mp),mi=r(Mp,"LI",{});var mI=a(mi);Rf=s(mI,"Frontend hosted in Azure Static Content Hosting using AngularJS to connect to the backend service"),mI.forEach(o),Mp.forEach(o),au=u(t),gl=r(t,"P",{});var vI=a(gl);Sf=s(vI,"Key principles:"),vI.forEach(o),nu=u(t),C=r(t,"UL",{});var ne=a(C);vi=r(ne,"LI",{});var bI=a(vi);Df=s(bI,"Separate application logic and integration details to facilite unit testing, portability and supportability."),bI.forEach(o),Cf=u(ne),bi=r(ne,"LI",{});var yI=a(bi);Mf=s(yI,"Continuous deployment (CD) where every check-in to the master branch results in a production release."),yI.forEach(o),Bf=u(ne),yi=r(ne,"LI",{});var EI=a(yi);Nf=s(EI,"Open source, because why not? Maybe it is interesting to someone, or perhaps I can learn something from others who see it."),EI.forEach(o),jf=u(ne),Ei=r(ne,"LI",{});var wI=a(Ei);xf=s(wI,"Try to be cloud agnostic, realistically this is only partially possible at present but let\u2019s see where we get up to."),wI.forEach(o),qf=u(ne),wi=r(ne,"LI",{});var _I=a(wi);Of=s(_I,"Establish clear cost management, arguably the most important factor regarding practicality."),_I.forEach(o),Hf=u(ne),_i=r(ne,"LI",{});var gI=a(_i);Ff=s(gI,"Minimum Viable Product (MVP) - A working application with no data persistence and limited security."),gI.forEach(o),ne.forEach(o),uu=u(t),Xt=r(t,"H3",{});var Mg=a(Xt);Ut=r(Mg,"A",{href:!0,rel:!0});var II=a(Ut);Xf=s(II,"Live application"),II.forEach(o),Uf=s(Mg,"."),Mg.forEach(o),cu=u(t),Il=r(t,"H2",{});var AI=a(Il);Gf=s(AI,"Application Logic"),AI.forEach(o),pu=u(t),te=r(t,"P",{});var kt=a(te);Wf=s(kt,"Cricket is a darts game played by 2 or more people."),Vf=r(kt,"BR",{}),$f=s(kt,`
The idea is to tick off 3 of each of the numbers 15-20 plus the bull (centre bull counts double).`),Jf=r(kt,"BR",{}),Kf=s(kt,`
Hitting a number which you\u2019ve already completed but others haven\u2019t scores you those points.`),Yf=r(kt,"BR",{}),Qf=s(kt,`
The winner is the first to complete this checklist and also have the best score overall.`),kt.forEach(o),fu=u(t),ut=r(t,"TABLE",{});var Bp=a(ut);gi=r(Bp,"THEAD",{});var TI=a(gi);h=r(TI,"TR",{});var I=a(h);Ii=r(I,"TH",{});var kI=a(Ii);Zf=s(kI,"Player"),kI.forEach(o),eh=u(I),Ai=r(I,"TH",{});var LI=a(Ai);th=s(LI,"Bull"),LI.forEach(o),oh=u(I),Ti=r(I,"TH",{});var PI=a(Ti);lh=s(PI,"20"),PI.forEach(o),rh=u(I),ki=r(I,"TH",{});var zI=a(ki);ih=s(zI,"19"),zI.forEach(o),sh=u(I),Li=r(I,"TH",{});var RI=a(Li);ah=s(RI,"18"),RI.forEach(o),nh=u(I),Pi=r(I,"TH",{});var SI=a(Pi);uh=s(SI,"17"),SI.forEach(o),ch=u(I),zi=r(I,"TH",{});var DI=a(zi);ph=s(DI,"16"),DI.forEach(o),fh=u(I),Ri=r(I,"TH",{});var CI=a(Ri);hh=s(CI,"15"),CI.forEach(o),dh=u(I),Si=r(I,"TH",{});var MI=a(Si);mh=s(MI,"Points"),MI.forEach(o),vh=u(I),Di=r(I,"TH",{});var BI=a(Di);bh=s(BI,"Ranking"),BI.forEach(o),I.forEach(o),TI.forEach(o),yh=u(Bp),Gt=r(Bp,"TBODY",{});var Np=a(Gt);d=r(Np,"TR",{});var A=a(d);Ci=r(A,"TD",{});var NI=a(Ci);Eh=s(NI,"Player 1"),NI.forEach(o),wh=u(A),Mi=r(A,"TD",{});var jI=a(Mi);_h=s(jI,"XXX"),jI.forEach(o),gh=u(A),Bi=r(A,"TD",{});var xI=a(Bi);Ih=s(xI,"XXX"),xI.forEach(o),Ah=u(A),Ni=r(A,"TD",{});var qI=a(Ni);Th=s(qI,"XXX"),qI.forEach(o),kh=u(A),ji=r(A,"TD",{});var OI=a(ji);Lh=s(OI,"XXX"),OI.forEach(o),Ph=u(A),xi=r(A,"TD",{});var HI=a(xi);zh=s(HI,"XXX"),HI.forEach(o),Rh=u(A),qi=r(A,"TD",{});var FI=a(qi);Sh=s(FI,"XXX"),FI.forEach(o),Dh=u(A),Oi=r(A,"TD",{});var XI=a(Oi);Ch=s(XI,"XXX"),XI.forEach(o),Mh=u(A),Hi=r(A,"TD",{});var UI=a(Hi);Bh=s(UI,"0"),UI.forEach(o),Nh=u(A),Fi=r(A,"TD",{});var GI=a(Fi);jh=s(GI,"1"),GI.forEach(o),A.forEach(o),xh=u(Np),m=r(Np,"TR",{});var T=a(m);Xi=r(T,"TD",{});var WI=a(Xi);qh=s(WI,"Player 2"),WI.forEach(o),Oh=u(T),Ui=r(T,"TD",{});var VI=a(Ui);Hh=s(VI,"XXX"),VI.forEach(o),Fh=u(T),Gi=r(T,"TD",{});var $I=a(Gi);Xh=s($I,"XXX"),$I.forEach(o),Uh=u(T),Wi=r(T,"TD",{});var JI=a(Wi);Gh=s(JI,"XXX"),JI.forEach(o),Wh=u(T),Vi=r(T,"TD",{});var KI=a(Vi);Vh=s(KI,"XXX"),KI.forEach(o),$h=u(T),$i=r(T,"TD",{});var YI=a($i);Jh=s(YI,"XXX"),YI.forEach(o),Kh=u(T),Ji=r(T,"TD",{});var QI=a(Ji);Yh=s(QI,"XXX"),QI.forEach(o),Qh=u(T),Ki=r(T,"TD",{});var ZI=a(Ki);Zh=s(ZI,"XXX"),ZI.forEach(o),ed=u(T),Yi=r(T,"TD",{});var e5=a(Yi);td=s(e5,"100"),e5.forEach(o),od=u(T),Qi=r(T,"TD",{});var t5=a(Qi);ld=s(t5,"2"),t5.forEach(o),T.forEach(o),Np.forEach(o),Bp.forEach(o),hu=u(t),Al=r(t,"P",{});var o5=a(Al);rd=s(o5,"There are additional extended rules too, notably:"),o5.forEach(o),du=u(t),ke=r(t,"UL",{});var Wr=a(ke);Zi=r(Wr,"LI",{});var l5=a(Zi);id=s(l5,"Cutthroat - scores go on everybody else, not you, the winner has the lowest score at the end"),l5.forEach(o),sd=u(Wr),es=r(Wr,"LI",{});var r5=a(es);ad=s(r5,"Require 3 - If all 3 hits on a number aren\u2019t completed within a single visit they aren\u2019t saved for the next visit"),r5.forEach(o),nd=u(Wr),ts=r(Wr,"LI",{});var i5=a(ts);ud=s(i5,"Unlimited vs round-based, usually 20 rounds"),i5.forEach(o),Wr.forEach(o),mu=u(t),Tl=r(t,"H2",{});var s5=a(Tl);cd=s(s5,"Development process"),s5.forEach(o),vu=u(t),v=r(t,"OL",{});var L=a(v);Qe=r(L,"LI",{});var Vr=a(Qe);pd=s(Vr,"Set up version control."),fd=r(Vr,"BR",{}),hd=s(Vr,`
I\u2019ve opted to use a GitHub-hosted `),Wt=r(Vr,"A",{href:!0,rel:!0});var a5=a(Wt);dd=s(a5,"Git repository"),a5.forEach(o),md=s(Vr,"."),Vr.forEach(o),vd=u(L),Ze=r(L,"LI",{});var $r=a(Ze);bd=s($r,"Set up a development environment."),yd=r($r,"BR",{}),Ed=s($r,`
I\u2019ve chosen VS Code on Windows with extensions C#, .NET Core Test Explorer, Azure Functions.`),wd=r($r,"BR",{}),_d=s($r,`
I\u2019m working alone, there\u2019s no need for collaboration tools for this project, documentation to be housed with the code.`),$r.forEach(o),gd=u(L),Vt=r(L,"LI",{});var jp=a(Vt);Id=s(jp,"Write the domain logic (C#, .NET Standard), ignorant of hosting considerations."),Ad=r(jp,"BR",{}),Td=s(jp,`
Testing (xUnit) with a pragmatic TDD approach, that is I\u2019m not writing code just to pass tests, but I am writing tests first.`),jp.forEach(o),kd=u(L),de=r(L,"LI",{});var Lt=a(de);Ld=s(Lt,"Configure build pipeline, triggered from check-in to master."),Pd=r(Lt,"BR",{}),zd=s(Lt,`
Azure DevOps uses `),$t=r(Lt,"A",{href:!0,rel:!0});var n5=a($t);Rd=s(n5,"azure-pipelines.yml"),n5.forEach(o),Sd=s(Lt,"."),Dd=r(Lt,"BR",{}),Cd=s(Lt,`
I\u2019m a little uncomfortable now in terms of vendor lock-in, but at least I\u2019m building CI in from the start, defined in the codebase, can switch later.`),Lt.forEach(o),Md=u(L),Jt=r(L,"LI",{});var xp=a(Jt);Bd=s(xp,"Build the function wrappers (API) referencing the tested domain project (with tests) and add to build pipeline."),Nd=r(xp,"BR",{}),jd=s(xp,`
Now I\u2019m learning. It is immediately clear that this code can never be portable to AWS, GCP etc, wrappers would instead need to be built separately.`),xp.forEach(o),xd=u(L),me=r(L,"LI",{});var Pt=a(me);qd=s(Pt,"Configure release pipeline, triggered from successful build/test."),Od=r(Pt,"BR",{}),Hd=s(Pt,`
Azure DevOps this is currently UI-driven, YAML expected `),Kt=r(Pt,"A",{href:!0,rel:!0});var u5=a(Kt);Fd=s(u5,"2018 Q4"),u5.forEach(o),Xd=s(Pt,"."),Ud=r(Pt,"BR",{}),Gd=s(Pt,`
Again, this is worryingly Azure-specific but it has to be to some extent, we\u2019re now connecting to the platform itself.`),Pt.forEach(o),Wd=u(L),os=r(L,"LI",{});var c5=a(os);Vd=s(c5,"Build independent integration tests, this is on hold but will probably use Postman on the command line (Newman)."),c5.forEach(o),$d=u(L),Yt=r(L,"LI",{});var qp=a(Yt);Jd=s(qp,"Build the user interface and add to build/ release pipelines."),Kd=r(qp,"BR",{}),Yd=s(qp,`
I stick with consistent naming convention for collation purposes but this is an AngularJS (for now) project, not .NET.`),qp.forEach(o),Qd=u(L),ls=r(L,"LI",{});var p5=a(ls);Zd=s(p5,"Manual live smoke testing."),p5.forEach(o),L.forEach(o),bu=u(t),kl=r(t,"H2",{});var f5=a(kl);em=s(f5,"Code structure and naming"),f5.forEach(o),yu=u(t),Ll=r(t,"P",{});var h5=a(Ll);tm=s(h5,"Projects:"),h5.forEach(o),Eu=u(t),F=r(t,"UL",{});var Fe=a(F);Pl=r(Fe,"LI",{});var Bg=a(Pl);om=s(Bg,"Mth.Darts.Cricket"),Qt=r(Bg,"UL",{});var Op=a(Qt);rs=r(Op,"LI",{});var d5=a(rs);lm=s(d5,"Domain service (business logic), C#, .NET Standard"),d5.forEach(o),rm=u(Op),is=r(Op,"LI",{});var m5=a(is);im=s(m5,"Minimise dependencies to maximise portability, reduce build times and improve supportability."),m5.forEach(o),Op.forEach(o),Bg.forEach(o),sm=u(Fe),zl=r(Fe,"LI",{});var Ng=a(zl);am=s(Ng,"Mth.Darts.Cricket.Tests"),ss=r(Ng,"UL",{});var v5=a(ss);as=r(v5,"LI",{});var b5=a(as);nm=s(b5,"Business logic tests, C#, xUnit"),b5.forEach(o),v5.forEach(o),Ng.forEach(o),um=u(Fe),Rl=r(Fe,"LI",{});var jg=a(Rl);cm=s(jg,"Mth.Darts.Cricket.Api"),ns=r(jg,"UL",{});var y5=a(ns);us=r(y5,"LI",{});var E5=a(us);pm=s(E5,"Application service (Azure functions) referencing the domain service, C#, .NET Core"),E5.forEach(o),y5.forEach(o),jg.forEach(o),fm=u(Fe),Sl=r(Fe,"LI",{});var xg=a(Sl);hm=s(xg,"Mth.Darts.Cricket.Api.Tests"),cs=r(xg,"UL",{});var w5=a(cs);ps=r(w5,"LI",{});var _5=a(ps);dm=s(_5,"Application service tests, C#, xUnit"),_5.forEach(o),w5.forEach(o),xg.forEach(o),mm=u(Fe),Dl=r(Fe,"LI",{});var qg=a(Dl);vm=s(qg,"Mth.Darts.Cricket.Ui"),fs=r(qg,"UL",{});var g5=a(fs);hs=r(g5,"LI",{});var I5=a(hs);bm=s(I5,"User interface, static web pages using AngularJS to reference the Api"),I5.forEach(o),g5.forEach(o),qg.forEach(o),Fe.forEach(o),wu=u(t),Cl=r(t,"H2",{});var A5=a(Cl);ym=s(A5,"Standards"),A5.forEach(o),_u=u(t),_=r(t,"UL",{});var x=a(_);ds=r(x,"LI",{});var T5=a(ds);Em=s(T5,"1 file per class/ struct, even if only used in one place"),T5.forEach(o),wm=u(x),ms=r(x,"LI",{});var k5=a(ms);_m=s(k5,"Files names in a collation-friendly way, nested items to be prefixed with the parent name"),k5.forEach(o),gm=u(x),vs=r(x,"LI",{});var L5=a(vs);Im=s(L5,"Comments where they add value, must describe the why not the how (that should be obvious from the code)"),L5.forEach(o),Am=u(x),Ml=r(x,"LI",{});var Og=a(Ml);Tm=s(Og,"Hold scoreboard state in nested structs not classes because "),Zt=r(Og,"A",{href:!0,rel:!0});var P5=a(Zt);km=s(P5,"has no identity, defined by its data"),P5.forEach(o),Og.forEach(o),Lm=u(x),Bl=r(x,"LI",{});var Hg=a(Bl);Pm=s(Hg,"JSON Serialisation using Newtonsoft.Json - "),eo=r(Hg,"A",{href:!0,rel:!0});var z5=a(eo);zm=s(z5,"use attributes to expose private properties"),z5.forEach(o),Hg.forEach(o),Rm=u(x),bs=r(x,"LI",{});var R5=a(bs);Sm=s(R5,"Adopt REST API standards, e.g. avoid verbs, pluralise collections always"),R5.forEach(o),Dm=u(x),ys=r(x,"LI",{});var S5=a(ys);Cm=s(S5,"single .gitignore file at root as usually recommended"),S5.forEach(o),Mm=u(x),Es=r(x,"LI",{});var D5=a(Es);Bm=s(D5,".vscode settings checked-in could help future developers, no harm to the code to keep them"),D5.forEach(o),x.forEach(o),gu=u(t),Nl=r(t,"H2",{});var C5=a(Nl);Nm=s(C5,"API"),C5.forEach(o),Iu=u(t),jl=r(t,"P",{});var M5=a(jl);jm=s(M5,"The connection between front and backend is through a REST API (Azure Function App) with 4 key endpoints (Functions):"),M5.forEach(o),Au=u(t),oe=r(t,"UL",{});var zt=a(oe);xl=r(zt,"LI",{});var Fg=a(xl);xm=s(Fg,"create match"),et=r(Fg,"UL",{});var Jr=a(et);ws=r(Jr,"LI",{});var B5=a(ws);qm=s(B5,"requires list of players and match settings"),B5.forEach(o),Om=u(Jr),_s=r(Jr,"LI",{});var N5=a(_s);Hm=s(N5,"returns new match, initialised with zero scores/ hits"),N5.forEach(o),Fm=u(Jr),gs=r(Jr,"LI",{});var j5=a(gs);Xm=s(j5,"POST: /api/matches"),j5.forEach(o),Jr.forEach(o),Fg.forEach(o),Um=u(zt),ql=r(zt,"LI",{});var Xg=a(ql);Gm=s(Xg,"throw dart"),tt=r(Xg,"UL",{});var Kr=a(tt);Is=r(Kr,"LI",{});var x5=a(Is);Wm=s(x5,"requires current match state and details of the current throw"),x5.forEach(o),Vm=u(Kr),As=r(Kr,"LI",{});var q5=a(As);$m=s(q5,"returns updated match"),q5.forEach(o),Jm=u(Kr),Ts=r(Kr,"LI",{});var O5=a(Ts);Km=s(O5,"POST: /api/matches/123/"),O5.forEach(o),Kr.forEach(o),Xg.forEach(o),Ym=u(zt),Ol=r(zt,"LI",{});var Ug=a(Ol);Qm=s(Ug,"undo throw"),ot=r(Ug,"UL",{});var Yr=a(ot);ks=r(Yr,"LI",{});var H5=a(ks);Zm=s(H5,"requires current match state (including history of throws)"),H5.forEach(o),ev=u(Yr),Ls=r(Yr,"LI",{});var F5=a(Ls);tv=s(F5,"returns updated match state"),F5.forEach(o),ov=u(Yr),Ps=r(Yr,"LI",{});var X5=a(Ps);lv=s(X5,"POST: /api/matches/123/undo"),X5.forEach(o),Yr.forEach(o),Ug.forEach(o),rv=u(zt),Hl=r(zt,"LI",{});var Gg=a(Hl);iv=s(Gg,"start new game"),lt=r(Gg,"UL",{});var Qr=a(lt);zs=r(Qr,"LI",{});var U5=a(zs);sv=s(U5,"requires current match state (with current game marked as complete)"),U5.forEach(o),av=u(Qr),Rs=r(Qr,"LI",{});var G5=a(Rs);nv=s(G5,"returns updated match state"),G5.forEach(o),uv=u(Qr),Ss=r(Qr,"LI",{});var W5=a(Ss);cv=s(W5,"POST: /api/matches/123/newgame"),W5.forEach(o),Qr.forEach(o),Gg.forEach(o),zt.forEach(o),Tu=u(t),ct=r(t,"P",{});var Hp=a(ct);pv=s(Hp,"These are all independently deterministic but obviously need to be combined in a logical order to manage the flow of a Cricket darts match."),fv=r(Hp,"BR",{}),hv=s(Hp,`
This activity will be left to the caller to manage for the MVP, with persistent this may change.`),Hp.forEach(o),ku=u(t),Fl=r(t,"H2",{});var V5=a(Fl);dv=s(V5,"Azure Functions"),V5.forEach(o),Lu=u(t),k=r(t,"P",{});var K=a(k);mv=s(K,"A key component of this serverless design is the use of scalable functions, for which I\u2019ve chosen Azure Functions."),vv=r(K,"BR",{}),bv=s(K,`
Azure deploys functions within an umbrella entity called a `),Ds=r(K,"STRONG",{});var $5=a(Ds);yv=s($5,"Function App"),$5.forEach(o),Ev=s(K,"."),wv=r(K,"BR",{}),_v=s(K,`
Function Apps are considered infrastructure and the recommended deployment approach is to use `),to=r(K,"A",{href:!0,rel:!0});var J5=a(to);gv=s(J5,"Azure Resource Manager (ARM) templates"),J5.forEach(o),Iv=s(K,"."),Av=r(K,"BR",{}),Tv=s(K,`
Functions are considered code and the recommended deployment approach is to use `),oo=r(K,"A",{href:!0,rel:!0});var K5=a(oo);kv=s(K5,"Zip Deployment"),K5.forEach(o),Lv=s(K,"."),K.forEach(o),Pu=u(t),Xl=r(t,"H2",{});var Y5=a(Xl);Pv=s(Y5,"Create Function App manually"),Y5.forEach(o),zu=u(t),Ul=r(t,"P",{});var Q5=a(Ul);zv=s(Q5,"In the interest of understanding before coding I experimented by manually creating a Function App using QuickStart (Azure Portal)."),Q5.forEach(o),Ru=u(t),Le=r(t,"UL",{});var Zr=a(Le);Cs=r(Zr,"LI",{});var Z5=a(Cs);Rv=s(Z5,"resource group: xmthcricket01"),Z5.forEach(o),Sv=u(Zr),Ms=r(Zr,"LI",{});var eA=a(Ms);Dv=s(eA,"function app: xmthcricket01functionapp"),eA.forEach(o),Cv=u(Zr),Bs=r(Zr,"LI",{});var tA=a(Bs);Mv=s(tA,"storage account (required): xmthcricket01storageaccount"),tA.forEach(o),Zr.forEach(o),Su=u(t),Pe=r(t,"P",{});var ei=a(Pe);Bv=s(ei,"I feel that standards are important from the start so I settled on naming convention %owner%%application%%version%%resource%."),Nv=r(ei,"BR",{}),jv=s(ei,`
I avoided underscores, hyphens, mixed case because storage accounts don\u2019t allow them and consistency trumps appearance in my opinion.`),xv=r(ei,"BR",{}),qv=s(ei,`
I then examined the storage account, since I didn\u2019t understand its purpose.`),ei.forEach(o),Du=u(t),ze=r(t,"UL",{});var ti=a(ze);lo=r(ti,"LI",{});var Fp=a(lo);Ov=s(Fp,"Blob container "),Ns=r(Fp,"EM",{});var oA=a(Ns);Hv=s(oA,"azure-webjobs-hosts"),oA.forEach(o),Fv=s(Fp," used for storing blob receipts, ensuring that each blob is only processed once."),Fp.forEach(o),Xv=u(ti),ro=r(ti,"LI",{});var Xp=a(ro);Uv=s(Xp,"Blob container "),js=r(Xp,"EM",{});var lA=a(js);Gv=s(lA,"azure-webjobs-secrets"),lA.forEach(o),Wv=s(Xp," used for storing keys/secrets required by the function app (I guess, can\u2019t find documentation)."),Xp.forEach(o),Vv=u(ti),Gl=r(ti,"LI",{});var Wg=a(Gl);$v=s(Wg,"File share xmthcricket01 which guessing from the name represents the function app"),Q=r(Wg,"UL",{});var Xe=a(Q);xs=r(Xe,"LI",{});var rA=a(xs);Jv=s(rA,".nuget (capture NuGet dependencies)"),rA.forEach(o),Kv=u(Xe),qs=r(Xe,"LI",{});var iA=a(qs);Yv=s(iA,".ssh (for connectivity)"),iA.forEach(o),Qv=u(Xe),Os=r(Xe,"LI",{});var sA=a(Os);Zv=s(sA,"data (ASP.NET compilation snapshots, function secrets + sample data)"),sA.forEach(o),eb=u(Xe),Hs=r(Xe,"LI",{});var aA=a(Hs);tb=s(aA,"LogFiles (for if we opt to inject logging into our functions)"),aA.forEach(o),ob=u(Xe),Wl=r(Xe,"LI",{});var Vg=a(Wl);lb=s(Vg,"site"),Z=r(Vg,"UL",{});var Ue=a(Z);Fs=r(Ue,"LI",{});var nA=a(Fs);rb=s(nA,"deployments (deployment settings + history - will need to be tidied up at some point)"),nA.forEach(o),ib=u(Ue),Xs=r(Ue,"LI",{});var uA=a(Xs);sb=s(uA,"diagnostics (diagnostics settings)"),uA.forEach(o),ab=u(Ue),Us=r(Ue,"LI",{});var cA=a(Us);nb=s(cA,"locks (empty)"),cA.forEach(o),ub=u(Ue),Gs=r(Ue,"LI",{});var pA=a(Gs);cb=s(pA,"repository (source code depending on deployment approach)"),pA.forEach(o),pb=u(Ue),Ws=r(Ue,"LI",{});var fA=a(Ws);fb=s(fA,"wwwroot (The published function app itself)"),fA.forEach(o),Ue.forEach(o),Vg.forEach(o),Xe.forEach(o),Wg.forEach(o),ti.forEach(o),Cu=u(t),pt=r(t,"P",{});var Up=a(pt);hb=s(Up,"Makes sense, everything needed to make the app run is stored in a storage account we own, though don\u2019t need to actively manage (serverless)."),db=r(Up,"BR",{}),mb=s(Up,`
I\u2019m not going to worry too much about the details except that:`),Up.forEach(o),Mu=u(t),ft=r(t,"UL",{});var Gp=a(ft);Vs=r(Gp,"LI",{});var hA=a(Vs);vb=s(hA,"For automation purposes we need to replace the wwwroot directory contents"),hA.forEach(o),bb=u(Gp),$s=r(Gp,"LI",{});var dA=a($s);yb=s(dA,"Deployment history could build up and storage accounts are paid for by size, so cleanup may be required"),dA.forEach(o),Gp.forEach(o),Bu=u(t),Vl=r(t,"H2",{});var mA=a(Vl);Eb=s(mA,"Create Function App with code"),mA.forEach(o),Nu=u(t),g=r(t,"P",{});var q=a(g);wb=s(q,"The most familiar way for me to create a C# HTTP trigger based function is the "),io=r(q,"A",{href:!0,rel:!0});var vA=a(io);_b=s(vA,"dotnet CLI"),vA.forEach(o),gb=s(q,":"),Ib=r(q,"BR",{}),Ab=u(q),Js=r(q,"CODE",{});var bA=a(Js);Tb=s(bA,"dotnet new func"),bA.forEach(o),kb=s(q," to create the project from within a target folder"),Lb=r(q,"BR",{}),Pb=u(q),Ks=r(q,"CODE",{});var yA=a(Ks);zb=s(yA,"dotnet new http"),yA.forEach(o),Rb=s(q," to create a new http trigger function within a function app project"),Sb=r(q,"BR",{}),Db=s(q,`
Producing the structure seen in the `),so=r(q,"A",{href:!0,rel:!0});var EA=a(so);Cb=s(EA,"Azure functions C# Developer reference"),EA.forEach(o),Mb=s(q,"."),q.forEach(o),ju=u(t),M=r(t,"P",{});var ue=a(M);Bb=s(ue,"It is also possible using the "),ao=r(ue,"A",{href:!0,rel:!0});var wA=a(ao);Nb=s(wA,"azure-functions-core-tools"),wA.forEach(o),jb=s(ue,":"),xb=r(ue,"BR",{}),qb=u(ue),Ys=r(ue,"CODE",{});var _A=a(Ys);Ob=s(_A,"func init"),_A.forEach(o),Hb=s(ue," to create a function app, selecting a runtime (dotnet, selected from list)"),Fb=r(ue,"BR",{}),Xb=u(ue),Qs=r(ue,"CODE",{});var gA=a(Qs);Ub=s(gA,"func new"),gA.forEach(o),Gb=s(ue," to create a function, C# httpTrigger"),ue.forEach(o),xu=u(t),$l=r(t,"P",{});var IA=a($l);Wb=s(IA,"The end result is very similar:"),IA.forEach(o),qu=u(t),Re=r(t,"UL",{});var oi=a(Re);Zs=r(oi,"LI",{});var AA=a(Zs);Vb=s(AA,".csproj with netcoreapp2.1 set as the target framework"),AA.forEach(o),$b=u(oi),ea=r(oi,"LI",{});var TA=a(ea);Jb=s(TA,"host.json with version set to \u201C2.0\u201D"),TA.forEach(o),Kb=u(oi),ta=r(oi,"LI",{});var kA=a(ta);Yb=s(kA,"local.settings.json"),kA.forEach(o),oi.forEach(o),Ou=u(t),no=r(t,"PRE",{class:!0});var tT=a(no);tT.forEach(o),Hu=u(t),Jl=r(t,"UL",{});var LA=a(Jl);oa=r(LA,"LI",{});var PA=a(oa);Qb=s(PA,"A hello world sample function; Company.Function.http"),PA.forEach(o),LA.forEach(o),Fu=u(t),uo=r(t,"PRE",{class:!0});var oT=a(uo);oT.forEach(o),Xu=u(t),le=r(t,"P",{});var Rt=a(le);Zb=s(Rt,"Simple enough, an asynchronous JSON REST endpoint which accepts GET and POST methods, expects a / route, does some basic validation and returns a response."),e1=r(Rt,"BR",{}),t1=s(Rt,`
This is .NET Core so no surprises that logging is available by dependency injection.`),o1=r(Rt,"BR",{}),l1=s(Rt,`
This example has everything I need for now so no need to dwell on the details.`),r1=r(Rt,"BR",{}),i1=s(Rt,`
Time to build my own\u2026`),Rt.forEach(o),Uu=u(t),co=r(t,"P",{});var $g=a(co);po=r($g,"A",{href:!0,rel:!0});var zA=a(po);s1=s(zA,"Mth.Darts.Cricket.Api.StartMatch"),zA.forEach(o),a1=s($g," should:"),$g.forEach(o),Gu=u(t),X=r(t,"UL",{});var Ge=a(X);la=r(Ge,"LI",{});var RA=a(la);n1=s(RA,"accept POST only"),RA.forEach(o),u1=u(Ge),ra=r(Ge,"LI",{});var SA=a(ra);c1=s(SA,"expect a route of /api/matches"),SA.forEach(o),p1=u(Ge),ia=r(Ge,"LI",{});var DA=a(ia);f1=s(DA,"expect parameters of scoring_mode, max_rounds and a list of [player[]], or a single json object containing all three"),DA.forEach(o),h1=u(Ge),sa=r(Ge,"LI",{});var CA=a(sa);d1=s(CA,"reference the domain service, specifically the Match constructor to get back a Match object, tested elsewhere"),CA.forEach(o),m1=u(Ge),aa=r(Ge,"LI",{});var MA=a(aa);v1=s(MA,"return a json object representing the Cricket match if all went well, an error message otherwise"),MA.forEach(o),Ge.forEach(o),Wu=u(t),Kl=r(t,"H2",{});var BA=a(Kl);b1=s(BA,"Testing Azure functions"),BA.forEach(o),Vu=u(t),Yl=r(t,"P",{});var NA=a(Yl);y1=s(NA,"There are several different facets to testing here:"),NA.forEach(o),$u=u(t),re=r(t,"OL",{});var St=a(re);na=r(St,"LI",{});var jA=a(na);E1=s(jA,"Logic - nothing to do with serverless design but the most important part in my opinion"),jA.forEach(o),w1=u(St),ua=r(St,"LI",{});var xA=a(ua);_1=s(xA,"Plumbing - does the function work as expected when called directly using an HttpRequest object?"),xA.forEach(o),g1=u(St),ca=r(St,"LI",{});var qA=a(ca);I1=s(qA,"Routing - does an HTTP request get picked up by the expected function?"),qA.forEach(o),A1=u(St),pa=r(St,"LI",{});var OA=a(pa);T1=s(OA,"Integration - When deployed does everything just work?"),OA.forEach(o),St.forEach(o),Ju=u(t),Ql=r(t,"H3",{});var HA=a(Ql);k1=s(HA,"Testing logic"),HA.forEach(o),Ku=u(t),ve=r(t,"P",{});var _l=a(ve);L1=s(_l,"Nothing new here, create a test project using "),fa=r(_l,"CODE",{});var FA=a(fa);P1=s(FA,"dotnet new xunit"),FA.forEach(o),z1=r(_l,"BR",{}),R1=s(_l,`
I did make things awkward for myself by restricting access on as much as possible so had to tweak the project to `),fo=r(_l,"A",{href:!0,rel:!0});var XA=a(fo);S1=s(XA,"make internals visible to the test project"),XA.forEach(o),D1=s(_l,"."),_l.forEach(o),Yu=u(t),Zl=r(t,"H3",{});var UA=a(Zl);C1=s(UA,"Testing function plumbing"),UA.forEach(o),Qu=u(t),ht=r(t,"P",{});var Wp=a(ht);M1=s(Wp,"No need to repeat anything here, I followed the guide to "),ho=r(Wp,"A",{href:!0,rel:!0});var GA=a(ho);B1=s(GA,"testing azure functions"),GA.forEach(o),N1=s(Wp,", extended it for multiple parameters and a different return value and used a JSON test file."),Wp.forEach(o),Zu=u(t),er=r(t,"H3",{});var WA=a(er);j1=s(WA,"Testing function routing"),WA.forEach(o),ec=u(t),w=r(t,"P",{});var D=a(w);x1=s(D,"In REST terms a match can be considered a "),ha=r(D,"EM",{});var VA=a(ha);q1=s(VA,"resource"),VA.forEach(o),O1=s(D,", a member of the matches "),da=r(D,"EM",{});var $A=a(da);H1=s($A,"collection"),$A.forEach(o),F1=s(D,"."),X1=r(D,"BR",{}),U1=s(D,`
To create a match we need to pass parameters to the uri, repeating the player parameter as many times as required.`),G1=r(D,"BR",{}),W1=s(D,`
For a 2 player match between Van Gerwen and Taylor we need to`),V1=r(D,"BR",{}),$1=u(D),ma=r(D,"CODE",{});var JA=a(ma);J1=s(JA,"POST /api/v1/matches/?scoring_mode=Standard&max_rounds=0&player[]=Van%20Gerwen&player[]=Taylor"),JA.forEach(o),K1=r(D,"BR",{}),Y1=s(D,`
Initially there\u2019s no persistent data store, so this match isn\u2019t retrievable, but if it were it would be available at, e.g. /api/v1/matches/123.`),Q1=r(D,"BR",{}),Z1=s(D,`
Note that I converted player to player[] in the url, because this is what AngularJS and some backend frameworks consider correct, though I can\u2019t find a definitive answer on the matter anywhere.`),D.forEach(o),tc=u(t),rt=r(t,"P",{});var ru=a(rt);e2=s(ru,"To run Azure Functions locally from within the function app project use the Azure Functions Core Tools: "),va=r(ru,"CODE",{});var KA=a(va);t2=s(KA,"func start"),KA.forEach(o),o2=r(ru,"BR",{}),l2=s(ru,`
I\u2019ve opted to manually test routing using Postman for the MVP but intend to automate this eventually, using one of:`),ru.forEach(o),oc=u(t),dt=r(t,"UL",{});var Vp=a(dt);tr=r(Vp,"LI",{});var Jg=a(tr);r2=s(Jg,"Postman CLI tool "),mo=r(Jg,"A",{href:!0,rel:!0});var YA=a(mo);i2=s(YA,"Newman"),YA.forEach(o),Jg.forEach(o),s2=u(Vp),or=r(Vp,"LI",{});var Kg=a(or);a2=s(Kg,".Net Core "),vo=r(Kg,"A",{href:!0,rel:!0});var QA=a(vo);n2=s(QA,"Integration tests"),QA.forEach(o),Kg.forEach(o),Vp.forEach(o),lc=u(t),lr=r(t,"H2",{});var ZA=a(lr);u2=s(ZA,"Continuous Integration, Delivery & Deployment"),ZA.forEach(o),rc=u(t),ie=r(t,"P",{});var Dt=a(ie);c2=s(Dt,"In modern software development there is no excuse to not have some form of continuous integration (CI)."),p2=r(Dt,"BR",{}),f2=s(Dt,`
Build and Test automation is usually easy and cheap to setup and pays for itself even in the short term.`),h2=r(Dt,"BR",{}),d2=s(Dt,`
It is also entirely within the control of the software development team.`),m2=r(Dt,"BR",{}),v2=s(Dt,`
How you implement this is dependent on the team and project requirements, for this project I\u2019m just building on the master branch.`),Dt.forEach(o),ic=u(t),mt=r(t,"P",{});var $p=a(mt);b2=s($p,"Continuous delivery is just as valuable, all projects should strive for some degree of this, but it is significantly harder to implement."),y2=r($p,"BR",{}),E2=s($p,`
Release automation complexity depends on the technology stack and collaboration with TechOps but the benefits far outweigh the costs.`),$p.forEach(o),sc=u(t),Se=r(t,"P",{});var li=a(Se);w2=s(li,"Continuous deployment takes this a step further, automating releases without human intervention, subject to quality gates from automated testing."),_2=r(li,"BR",{}),g2=s(li,`
This is a cultural thing, not all organisations or teams can work in this way for a myriad of reasons.`),I2=r(li,"BR",{}),A2=s(li,`
I can though, for this project, so that\u2019s the plan, straight to production after every build which passes tests.`),li.forEach(o),ac=u(t),rr=r(t,"H2",{});var e0=a(rr);T2=s(e0,"Build pipeline"),e0.forEach(o),nc=u(t),ir=r(t,"P",{});var t0=a(ir);k2=s(t0,"Two mandatory requirements here:"),t0.forEach(o),uc=u(t),De=r(t,"UL",{});var ri=a(De);ba=r(ri,"LI",{});var o0=a(ba);L2=s(o0,"Build automatically triggered every time the code is changed."),o0.forEach(o),P2=u(ri),ya=r(ri,"LI",{});var l0=a(ya);z2=s(l0,`Build steps live with the code because who better to know how to build an application than the application developer?
And one optional requirement:`),l0.forEach(o),R2=u(ri),Ea=r(ri,"LI",{});var r0=a(Ea);S2=s(r0,"Build should be target-agnostic for portability, to avoid vendor lock-in"),r0.forEach(o),ri.forEach(o),cc=u(t),b=r(t,"P",{});var P=a(b);D2=s(P,"Focussing just on the mandatory requirements for the MVP I followed Microsoft\u2019s advice on "),bo=r(P,"A",{href:!0,rel:!0});var i0=a(bo);C2=s(i0,"Linking Azure DevOps to GitHub"),i0.forEach(o),M2=s(P,"."),B2=r(P,"BR",{}),N2=s(P,`
I chose the `),wa=r(P,"STRONG",{});var s0=a(wa);j2=s(s0,"GitHub App"),s0.forEach(o),x2=s(P,` option because I didn\u2019t want it linked directly to my credentials.
In GitHub `),_a=r(P,"STRONG",{});var a0=a(_a);q2=s(a0,"Azure Pipelines"),a0.forEach(o),O2=s(P," now shows up under "),ga=r(P,"EM",{});var n0=a(ga);H2=s(n0,"Settings > Integration & services > Installed GitHub Apps"),n0.forEach(o),F2=s(P," where I can configure it to restrict access to specific repositories or remove it altogether."),X2=r(P,"BR",{}),U2=s(P,`
In Azure DevOps `),Ia=r(P,"STRONG",{});var u0=a(Ia);G2=s(u0,"mtempleheald"),u0.forEach(o),W2=s(P," now shows up under "),Aa=r(P,"EM",{});var c0=a(Aa);V2=s(c0,"Project Settings > Pipelines > Service Connections"),c0.forEach(o),$2=s(P,", I can disconnect it here but it tells me that any configuration must be done on GitHub."),P.forEach(o),pc=u(t),ee=r(t,"P",{});var it=a(ee);J2=s(it,"During this process a default "),yo=r(it,"A",{href:!0,rel:!0});var p0=a(yo);K2=s(p0,"azure-pipelines.yml"),p0.forEach(o),Y2=s(it," file was presented to me with the option to commit it, which I accepted. From here it didn\u2019t take long to configure a working build by chaining dotnet CLI commands together."),Q2=r(it,"BR",{}),Z2=s(it,`
It is very easy to break a build so having this set up early on is really important for stability, I\u2019d say that this is step 1 on the way to true DevOps, where the developers take responsibility for handover of artifacts.`),ey=r(it,"BR",{}),ty=s(it,`
Some nice visual feedback and convenient logging, plus a status badge is available for the project
`),Eo=r(it,"A",{href:!0,rel:!0});var f0=a(Eo);sr=r(f0,"IMG",{src:!0,alt:!0}),f0.forEach(o),it.forEach(o),fc=u(t),ar=r(t,"H3",{});var h0=a(ar);oy=s(h0,"Build steps"),h0.forEach(o),hc=u(t),nr=r(t,"P",{});var d0=a(nr);ly=s(d0,"Build steps used:"),d0.forEach(o),dc=u(t),B=r(t,"UL",{});var ce=a(B);wo=r(ce,"LI",{});var Jp=a(wo);ry=s(Jp,"script: "),Ta=r(Jp,"CODE",{});var m0=a(Ta);iy=s(m0,"dotnet --version"),m0.forEach(o),sy=s(Jp," - check that we know which version of .NET lives on the Microsoft-managed build agent"),Jp.forEach(o),ay=u(ce),_o=r(ce,"LI",{});var Kp=a(_o);ny=s(Kp,"script: "),ka=r(Kp,"CODE",{});var v0=a(ka);uy=s(v0,"dotnet build '<project>' --configuration $(buildConfiguration)"),v0.forEach(o),cy=s(Kp," - build a named project"),Kp.forEach(o),py=u(ce),go=r(ce,"LI",{});var Yp=a(go);fy=s(Yp,"task: "),La=r(Yp,"CODE",{});var b0=a(La);hy=s(b0,"DotNetCoreCLI@2"),b0.forEach(o),dy=s(Yp," - run tests"),Yp.forEach(o),my=u(ce),Io=r(ce,"LI",{});var Qp=a(Io);vy=s(Qp,"script: "),Pa=r(Qp,"CODE",{});var y0=a(Pa);by=s(y0,"dotnet publish '<function_app_project>' --output '<target_dir>'"),y0.forEach(o),yy=s(Qp," - prepare function app artifacts for publication"),Qp.forEach(o),Ey=u(ce),Ao=r(ce,"LI",{});var Zp=a(Ao);wy=s(Zp,"task: "),za=r(Zp,"CODE",{});var E0=a(za);_y=s(E0,"CopyFiles@2"),E0.forEach(o),gy=s(Zp," - copy specified files to artifact drop location"),Zp.forEach(o),Iy=u(ce),To=r(ce,"LI",{});var ef=a(To);Ay=s(ef,"task: "),Ra=r(ef,"CODE",{});var w0=a(Ra);Ty=s(w0,"PublishBuildArtifacts@1"),w0.forEach(o),ky=s(ef," - publish the artifacts ready for the release pipeline"),ef.forEach(o),ce.forEach(o),mc=u(t),ur=r(t,"P",{});var _0=a(ur);Ly=s(_0,"output of dotnet publish:"),_0.forEach(o),vc=u(t),cr=r(t,"UL",{});var g0=a(cr);O=r(g0,"LI",{});var pe=a(O);Py=s(pe,`FunctionApp
`),Sa=r(pe,"EM",{});var I0=a(Sa);zy=s(I0,"bin/"),I0.forEach(o),Ry=s(pe,` StartMatch
`),Da=r(pe,"EM",{});var A0=a(Da);Sy=s(A0,"function.json"),A0.forEach(o),Dy=s(pe,` host.json * *.deps.json
which seems to match the `),ko=r(pe,"A",{href:!0,rel:!0});var T0=a(ko);Cy=s(T0,"continuous deployment requirements"),T0.forEach(o),My=s(pe,"."),By=r(pe,"BR",{}),Ny=s(pe,`
What this doesn\u2019t make clear however is that the top level folder is not expected within the zip file.`),jy=r(pe,"BR",{}),xy=s(pe,`
This is important as it means that the build pipeline does not need to provide the name for the deployed artifact and facilitates a multi-environment deployment from a single build artifact (assuming everything else is parameterised appropriately).`),pe.forEach(o),g0.forEach(o),bc=u(t),pr=r(t,"H2",{});var k0=a(pr);qy=s(k0,"Azure DevOps Artifacts"),k0.forEach(o),yc=u(t),Ce=r(t,"P",{});var ii=a(Ce);Oy=s(ii,"It is good practice to keep build and release steps separate "),Lo=r(ii,"A",{href:!0,rel:!0});var L0=a(Lo);Hy=s(L0,"The 12 Factor App"),L0.forEach(o),Fy=s(ii,"."),Xy=r(ii,"BR",{}),Uy=s(ii,`
This makes sense, there may be some overlap but build steps are developer controlled and release steps are about environment config and is more of a TechOps role unless you truly embrace DevOps.`),ii.forEach(o),Ec=u(t),U=r(t,"P",{});var We=a(U);Gy=s(We,"In the terminology of Azure DevOps I need to publish an "),Ca=r(We,"STRONG",{});var P0=a(Ca);Wy=s(P0,"artifact"),P0.forEach(o),Vy=s(We," on the "),Ma=r(We,"STRONG",{});var z0=a(Ma);$y=s(z0,"build pipeline"),z0.forEach(o),Jy=s(We," to make it available to the "),Ba=r(We,"STRONG",{});var R0=a(Ba);Ky=s(R0,"release pipeline"),R0.forEach(o),Yy=s(We,"."),Qy=r(We,"BR",{}),Zy=s(We,`
This is simple, but very easy to make mistakes, so it is useful to be able to debug pipeline execution.`),We.forEach(o),wc=u(t),Po=r(t,"P",{});var Yg=a(Po);eE=s(Yg,"It helps to understand how files are stored on the build/release agents, "),zo=r(Yg,"A",{href:!0,rel:!0});var S0=a(zo);tE=s(S0,"pre-defined variables"),S0.forEach(o),Yg.forEach(o),_c=u(t),vt=r(t,"TABLE",{});var tf=a(vt);Na=r(tf,"THEAD",{});var D0=a(Na);be=r(D0,"TR",{});var Ct=a(be);ja=r(Ct,"TH",{});var C0=a(ja);oE=s(C0,"Path structure"),C0.forEach(o),lE=u(Ct),xa=r(Ct,"TH",{});var M0=a(xa);rE=s(M0,"System."),M0.forEach(o),iE=u(Ct),qa=r(Ct,"TH",{});var B0=a(qa);sE=s(B0,"Build."),B0.forEach(o),aE=u(Ct),Oa=r(Ct,"TH",{});var N0=a(Oa);nE=s(N0,"Agent."),N0.forEach(o),Ct.forEach(o),D0.forEach(o),uE=u(tf),S=r(tf,"TBODY",{});var Y=a(S);ye=r(Y,"TR",{});var Mt=a(ye);Ha=r(Mt,"TD",{});var j0=a(Ha);cE=s(j0,"/agent/"),j0.forEach(o),pE=u(Mt),gc=r(Mt,"TD",{}),a(gc).forEach(o),fE=u(Mt),Ic=r(Mt,"TD",{}),a(Ic).forEach(o),hE=u(Mt),Fa=r(Mt,"TD",{});var x0=a(Fa);dE=s(x0,"HomeDirectory"),x0.forEach(o),Mt.forEach(o),mE=u(Y),Ee=r(Y,"TR",{});var Bt=a(Ee);Xa=r(Bt,"TD",{});var q0=a(Xa);vE=s(q0,"/agent/work/"),q0.forEach(o),bE=u(Bt),Ua=r(Bt,"TD",{});var O0=a(Ua);yE=s(O0,"WorkFolder"),O0.forEach(o),EE=u(Bt),Ac=r(Bt,"TD",{}),a(Ac).forEach(o),wE=u(Bt),Ga=r(Bt,"TD",{});var H0=a(Ga);_E=s(H0,"RootDirectory WorkFolder"),H0.forEach(o),Bt.forEach(o),gE=u(Y),we=r(Y,"TR",{});var Nt=a(we);Wa=r(Nt,"TD",{});var F0=a(Wa);IE=s(F0,"/agent/work/1"),F0.forEach(o),AE=u(Nt),Tc=r(Nt,"TD",{}),a(Tc).forEach(o),TE=u(Nt),kc=r(Nt,"TD",{}),a(kc).forEach(o),kE=u(Nt),Va=r(Nt,"TD",{});var X0=a(Va);LE=s(X0,"BuildDirectory"),X0.forEach(o),Nt.forEach(o),PE=u(Y),_e=r(Y,"TR",{});var jt=a(_e);$a=r(jt,"TD",{});var U0=a($a);zE=s(U0,"/agent/work/1/s"),U0.forEach(o),RE=u(jt),Ja=r(jt,"TD",{});var G0=a(Ja);SE=s(G0,"DefaultWorkingDirectory"),G0.forEach(o),DE=u(jt),Ka=r(jt,"TD",{});var W0=a(Ka);CE=s(W0,"SourcesDirectory"),W0.forEach(o),ME=u(jt),Lc=r(jt,"TD",{}),a(Lc).forEach(o),jt.forEach(o),BE=u(Y),ge=r(Y,"TR",{});var xt=a(ge);Ya=r(xt,"TD",{});var V0=a(Ya);NE=s(V0,"/agent/work/1/b"),V0.forEach(o),jE=u(xt),Pc=r(xt,"TD",{}),a(Pc).forEach(o),xE=u(xt),Qa=r(xt,"TD",{});var $0=a(Qa);qE=s($0,"BinariesDirectory"),$0.forEach(o),OE=u(xt),zc=r(xt,"TD",{}),a(zc).forEach(o),xt.forEach(o),HE=u(Y),Ie=r(Y,"TR",{});var qt=a(Ie);Za=r(qt,"TD",{});var J0=a(Za);FE=s(J0,"/agent/work/1/a"),J0.forEach(o),XE=u(qt),Rc=r(qt,"TD",{}),a(Rc).forEach(o),UE=u(qt),en=r(qt,"TD",{});var K0=a(en);GE=s(K0,"ArtifactStagingDirectory StagingDirectory"),K0.forEach(o),WE=u(qt),Sc=r(qt,"TD",{}),a(Sc).forEach(o),qt.forEach(o),VE=u(Y),Ae=r(Y,"TR",{});var Ot=a(Ae);tn=r(Ot,"TD",{});var Y0=a(tn);$E=s(Y0,"/agent/work/r1/a"),Y0.forEach(o),JE=u(Ot),on=r(Ot,"TD",{});var Q0=a(on);KE=s(Q0,"ArtifactsDirectory DefaultWorkingDirectory"),Q0.forEach(o),YE=u(Ot),Dc=r(Ot,"TD",{}),a(Dc).forEach(o),QE=u(Ot),ln=r(Ot,"TD",{});var Z0=a(ln);ZE=s(Z0,"ReleaseDirectory"),Z0.forEach(o),Ot.forEach(o),Y.forEach(o),tf.forEach(o),Cc=u(t),fr=r(t,"P",{});var e6=a(fr);ew=s(e6,"Most of these steps provide useful information but if it isn\u2019t enough we can add extra debug information:"),e6.forEach(o),Mc=u(t),bt=r(t,"UL",{});var of=a(bt);Ro=r(of,"LI",{});var lf=a(Ro);tw=s(lf,"To debug build steps add "),rn=r(lf,"CODE",{});var t6=a(rn);ow=s(t6,"system.debug: true"),t6.forEach(o),lw=s(lf," to azure-pipelines.yml."),lf.forEach(o),rw=u(of),So=r(of,"LI",{});var rf=a(So);iw=s(rf,"To debug release steps add "),sn=r(rf,"EM",{});var o6=a(sn);sw=s(o6,"system.debug"),o6.forEach(o),aw=s(rf," to the Variables tab on the UI, with a value of true."),rf.forEach(o),of.forEach(o),Bc=u(t),hr=r(t,"P",{});var l6=a(hr);nw=s(l6,"A notable issue I had was with the release pipeline being unable to find the published function app artifact, despite triple-checking paths and successful step execution:"),l6.forEach(o),Nc=u(t),yt=r(t,"UL",{});var sf=a(yt);dr=r(sf,"LI",{});var Qg=a(dr);uw=s(Qg,"Zip up function app - "),an=r(Qg,"EM",{});var r6=a(an);cw=s(r6,"Successfully created archive: /home/vsts/work/1/a/11.zip"),r6.forEach(o),Qg.forEach(o),pw=u(sf),nn=r(sf,"LI",{});var i6=a(nn);fw=s(i6,"Publish Build Artifacts - no listed output (suspicious but successful)"),i6.forEach(o),sf.forEach(o),jc=u(t),Et=r(t,"P",{});var af=a(Et);hw=s(af,"It turns out that the publish step was failing silently because I\u2019d put an incorrect parameter in. I only figured this out by looking at the "),Do=r(af,"A",{href:!0,rel:!0});var s6=a(Do);dw=s(s6,"source code"),s6.forEach(o),mw=s(af," of the suspicious step. There are 2 allowed values for artifactType; \u2018Container\u2019 and \u2018FilePath\u2019. Turns out I\u2019d been passing the description of container instead (\u2018Azure Pipelines/TFS\u2019) - oops!"),af.forEach(o),xc=u(t),mr=r(t,"UL",{});var a6=a(mr);Co=r(a6,"LI",{});var nf=a(Co);vw=s(nf,"Publish Build Artifacts - "),un=r(nf,"EM",{});var n6=a(un);bw=s(n6,"Upload \u2018/home/vsts/work/1/a\u2019 to file container: \u2019#/2495698/drop\u2019"),n6.forEach(o),yw=s(nf," - success!"),nf.forEach(o),a6.forEach(o),qc=u(t),vr=r(t,"H2",{});var u6=a(vr);Ew=s(u6,"Release pipeline"),u6.forEach(o),Oc=u(t),G=r(t,"P",{});var Ve=a(G);ww=s(Ve,"Azure DevOps release pipelines currently work differently from build pipelines, although release pipeline Configuration as code (YAML) is "),Mo=r(Ve,"A",{href:!0,rel:!0});var c6=a(Mo);_w=s(c6,"planned for 2018 Q4"),c6.forEach(o),gw=s(Ve,"."),Iw=r(Ve,"BR",{}),Aw=s(Ve,`
That being said, tasks are common but categorised (build, utility, test, package, deploy, tool) - `),Bo=r(Ve,"A",{href:!0,rel:!0});var p6=a(Bo);Tw=s(p6,"code"),p6.forEach(o),kw=s(Ve,"."),Lw=r(Ve,"BR",{}),Pw=s(Ve,`
So there is nothing stopping me from adding release steps to the azure-pipelines.yml file above, but I\u2019m going to do it properly instead, keeping build and release separate by using the published artifacts.`),Ve.forEach(o),Hc=u(t),br=r(t,"H3",{});var f6=a(br);zw=s(f6,"Connecting the release pipeline to Azure"),f6.forEach(o),Fc=u(t),y=r(t,"P",{});var z=a(y);Rw=s(z,"The Azure Portal function app page has a "),cn=r(z,"EM",{});var h6=a(cn);Sw=s(h6,"Deployment Center"),h6.forEach(o),Dw=s(z," tab, where you can configure a Git repository connection."),Cw=r(z,"BR",{}),Mw=s(z,`
This uses `),No=r(z,"A",{href:!0,rel:!0});var d6=a(No);Bw=s(d6,"Kudo"),d6.forEach(o),Nw=s(z," which by default expects either 1 solution or 1 project to deploy, but can be "),jo=r(z,"A",{href:!0,rel:!0});var m6=a(jo);jw=s(m6,"customised"),m6.forEach(o),xw=s(z,"."),qw=r(z,"BR",{}),Ow=s(z,`
It can also be customised in the Azure portal, by adding the target project (`),pn=r(z,"EM",{});var v6=a(pn);Hw=s(v6,"PROJECT = function-app/function-app.csproj"),v6.forEach(o),Fw=s(z,")"),Xw=r(z,"BR",{}),Uw=s(z,`
to application settings `),fn=r(z,"EM",{});var b6=a(fn);Gw=s(b6,"Azure > Overview > Application Settings > Application Settings"),b6.forEach(o),Ww=s(z,`
I\u2019m uncomfortable with this approach for several reasons:`),z.forEach(o),Xc=u(t),Me=r(t,"UL",{});var si=a(Me);hn=r(si,"LI",{});var y6=a(hn);Vw=s(y6,"The GitHub connection is tied directly to my account"),y6.forEach(o),$w=u(si),dn=r(si,"LI",{});var E6=a(dn);Jw=s(E6,"This configuration is hidden away and easily forgotten, though I could address this using the custom .deployment file in the code."),E6.forEach(o),Kw=u(si),mn=r(si,"LI",{});var w6=a(mn);Yw=s(w6,"What about the other elements of the release? Storage, static content, I want consistency in my releases."),w6.forEach(o),si.forEach(o),Uc=u(t),H=r(t,"P",{});var Te=a(H);Qw=s(Te,"The better approach is to manage releases within an independent release pipeline (Azure DevOps), even when aiming for continuous deployment."),Zw=r(Te,"BR",{}),e3=s(Te,`
This requires setting up an Azure Resource Manager (ARM) connection:`),t3=r(Te,"BR",{}),o3=u(Te),vn=r(Te,"EM",{});var _6=a(vn);l3=s(_6,"Azure DevOps > Project Settings > Pipelines > Service Connections > New Service Connection > Azure Resource Manager"),_6.forEach(o),r3=r(Te,"BR",{}),i3=s(Te,`
For which I had to `),xo=r(Te,"A",{href:!0,rel:!0});var g6=a(xo);s3=s(g6,"create a service principal"),g6.forEach(o),a3=s(Te,":"),Te.forEach(o),Gc=u(t),wt=r(t,"OL",{});var uf=a(wt);bn=r(uf,"LI",{});var I6=a(bn);n3=s(I6,"Azure Portal > App Registrations > Create > Web App (url not important yet)"),I6.forEach(o),u3=u(uf),yn=r(uf,"LI",{});var A6=a(yn);c3=s(A6,"Azure Portal > Subscriptions > ~MySubscription~ > IAM > Add role assignment > Contributor + App name"),A6.forEach(o),uf.forEach(o),Wc=u(t),yr=r(t,"P",{});var T6=a(yr);p3=s(T6,"I could now access the parameters required to add the connection:"),T6.forEach(o),Vc=u(t),Be=r(t,"UL",{});var ai=a(Be);qo=r(ai,"LI",{});var cf=a(qo);f3=s(cf,"Tenant-Id:"),h3=r(cf,"BR",{}),d3=s(cf,`
Azure Portal > Azure Active Directory > Properties > Directory ID`),cf.forEach(o),m3=u(ai),Oo=r(ai,"LI",{});var pf=a(Oo);v3=s(pf,"Application ID:"),b3=r(pf,"BR",{}),y3=s(pf,`
Azure Portal > App Registrations > ~My App~ > Application ID`),pf.forEach(o),E3=u(ai),Ho=r(ai,"LI",{});var ff=a(Ho);w3=s(ff,"Authentication Key:"),_3=r(ff,"BR",{}),g3=s(ff,`
Azure Portal > App Registrations > ~My App~ > Settings > Keys`),ff.forEach(o),ai.forEach(o),$c=u(t),Er=r(t,"P",{});var k6=a(Er);I3=s(k6,"Hereafter release pipeline tasks simply need to refer to this connection and it just works."),k6.forEach(o),Jc=u(t),wr=r(t,"H3",{});var L6=a(wr);A3=s(L6,"Release pipeline steps"),L6.forEach(o),Kc=u(t),_r=r(t,"UL",{});var P6=a(_r);gr=r(P6,"LI",{});var Zg=a(gr);Fo=r(Zg,"A",{href:!0,rel:!0});var z6=a(Fo);T3=s(z6,"ARM deployment"),z6.forEach(o),k3=s(Zg," - all infrastructure elements within the resource group, the equivalent of using the command line tools:"),Zg.forEach(o),P6.forEach(o),Yc=u(t),Xo=r(t,"PRE",{class:!0});var lT=a(Xo);lT.forEach(o),Qc=u(t),Ne=r(t,"UL",{});var ni=a(Ne);Ir=r(ni,"LI",{});var eI=a(Ir);Uo=r(eI,"A",{href:!0,rel:!0});var R6=a(Uo);L3=s(R6,"Azure App Service Deploy (Preview)"),R6.forEach(o),P3=s(eI," - azure function deployment to function app"),eI.forEach(o),z3=u(ni),Ar=r(ni,"LI",{});var tI=a(Ar);Go=r(tI,"A",{href:!0,rel:!0});var S6=a(Go);R3=s(S6,"Azure File Copy (Preview)"),S6.forEach(o),S3=s(tI," - static website copied to $web blob container"),tI.forEach(o),D3=u(ni),Tr=r(ni,"LI",{});var oI=a(Tr);Wo=r(oI,"A",{href:!0,rel:!0});var D6=a(Wo);C3=s(D6,"Azure CLI"),D6.forEach(o),M3=s(oI," - using the az command line tools to turn the blob container into a static website:"),oI.forEach(o),ni.forEach(o),Zc=u(t),Vo=r(t,"PRE",{class:!0});var rT=a(Vo);rT.forEach(o),ep=u(t),kr=r(t,"H2",{});var C6=a(kr);B3=s(C6,"ARM templates for continuous deployment"),C6.forEach(o),tp=u(t),Lr=r(t,"P",{});var M6=a(Lr);N3=s(M6,"I have come across ARM templates before and know that they\u2019re the recommended approach for (re)deploying Azure artifacts in a consistent fashion, but I\u2019ve never built any from scratch, so it is time to investigate. My aim here is to develop a pattern which I can use again for another serverless app in Azure, without having to think about this stuff again. This has been easily the most time-consuming part of this project."),M6.forEach(o),op=u(t),Pr=r(t,"P",{});var B6=a(Pr);j3=s(B6,"I want a single ARM template containing all aspects of the serverless application MVP:"),B6.forEach(o),lp=u(t),je=r(t,"UL",{});var ui=a(je);En=r(ui,"LI",{});var N6=a(En);x3=s(N6,"Storage account for static file hosting"),N6.forEach(o),q3=u(ui),wn=r(ui,"LI",{});var j6=a(wn);O3=s(j6,"Storage account for function app support"),j6.forEach(o),H3=u(ui),$o=r(ui,"LI",{});var hf=a($o);F3=s(hf,"Function app (It is possible but makes little sense to "),Jo=r(hf,"A",{href:!0,rel:!0});var x6=a(Jo);X3=s(x6,"deploy functions themselves using ARM"),x6.forEach(o),U3=s(hf,")"),hf.forEach(o),ui.forEach(o),rp=u(t),_t=r(t,"P",{});var df=a(_t);G3=s(df,"ARM "),Ko=r(df,"A",{href:!0,rel:!0});var q6=a(Ko);W3=s(q6,"template structure"),q6.forEach(o),V3=s(df,":"),df.forEach(o),ip=u(t),W=r(t,"UL",{});var $e=a(W);_n=r($e,"LI",{});var O6=a(_n);$3=s(O6,"parameters - passed on execution, e.g. environment/ version/ build number"),O6.forEach(o),J3=u($e),gn=r($e,"LI",{});var H6=a(gn);K3=s(H6,"variables - build upon parameters and group names together for consistency"),H6.forEach(o),Y3=u($e),In=r($e,"LI",{});var F6=a(In);Q3=s(F6,"functions - user-defined functions"),F6.forEach(o),Z3=u($e),zr=r($e,"LI",{});var lI=a(zr);e_=s(lI,"resources - deploy stuff - "),Yo=r(lI,"A",{href:!0,rel:!0});var X6=a(Yo);t_=s(X6,"intro"),X6.forEach(o),lI.forEach(o),o_=u($e),An=r($e,"LI",{});var U6=a(An);l_=s(U6,"outputs - capture values from during execution in case further processing required, e.g. url available"),U6.forEach(o),$e.forEach(o),sp=u(t),N=r(t,"P",{});var fe=a(N);r_=s(fe,"There are some useful "),Qo=r(fe,"A",{href:!0,rel:!0});var G6=a(Qo);i_=s(G6,"quickStart templates"),G6.forEach(o),s_=s(fe," to learn from, specifically "),Zo=r(fe,"A",{href:!0,rel:!0});var W6=a(Zo);a_=s(W6,"101-storage-account-create"),W6.forEach(o),n_=s(fe," and "),el=r(fe,"A",{href:!0,rel:!0});var V6=a(el);u_=s(V6,"101-function-app-create-dynamic"),V6.forEach(o),c_=s(fe,"."),p_=r(fe,"BR",{}),f_=s(fe,`
It can also be useful to create stuff manually once and view the generated script:`),h_=r(fe,"BR",{}),d_=s(fe,`
Azure Portal > Resource Groups > %Resource Group% > Automation Script`),fe.forEach(o),ap=u(t),Rr=r(t,"P",{});var $6=a(Rr);m_=s($6,"I also found it useful to briefly look at the REST APIs which ARM deployment use under the hood:"),$6.forEach(o),np=u(t),gt=r(t,"UL",{});var mf=a(gt);Tn=r(mf,"LI",{});var J6=a(Tn);tl=r(J6,"A",{href:!0,rel:!0});var K6=a(tl);v_=s(K6,"storage account REST API"),K6.forEach(o),J6.forEach(o),b_=u(mf),kn=r(mf,"LI",{});var Y6=a(kn);ol=r(Y6,"A",{href:!0,rel:!0});var Q6=a(ol);y_=s(Q6,"webapps REST API"),Q6.forEach(o),Y6.forEach(o),mf.forEach(o),up=u(t),Sr=r(t,"H3",{});var Z6=a(Sr);E_=s(Z6,"Preparing the ARM template"),Z6.forEach(o),cp=u(t),Dr=r(t,"P",{});var e7=a(Dr);w_=s(e7,"Starting with naming I want the following visible in the Azure Portal:"),e7.forEach(o),pp=u(t),se=r(t,"UL",{});var Ht=a(se);Ln=r(Ht,"LI",{});var t7=a(Ln);__=s(t7,"mthcricket01 (resource group)"),t7.forEach(o),g_=u(Ht),Pn=r(Ht,"LI",{});var o7=a(Pn);I_=s(o7,"mthcricket01api (function app)"),o7.forEach(o),A_=u(Ht),zn=r(Ht,"LI",{});var l7=a(zn);T_=s(l7,"mthcricket01apistorage (storage account required by function app)"),l7.forEach(o),k_=u(Ht),Rn=r(Ht,"LI",{});var r7=a(Rn);L_=s(r7,"mthcricket01ui (storage account for static content)"),r7.forEach(o),Ht.forEach(o),fp=u(t),Cr=r(t,"P",{});var i7=a(Cr);P_=s(i7,"This is easily achieved using variables:"),i7.forEach(o),hp=u(t),ll=r(t,"PRE",{class:!0});var iT=a(ll);iT.forEach(o),dp=u(t),ae=r(t,"P",{});var Ft=a(ae);z_=s(Ft,"The real details are in the resources section and this can get quite complicated; you have to learn Azure terminology, relationships and specify API versions."),R_=r(Ft,"BR",{}),S_=s(Ft,`
I\u2019ve found the most useful information in the `),rl=r(Ft,"A",{href:!0,rel:!0});var s7=a(rl);D_=s(s7,"Azure template reference"),s7.forEach(o),C_=s(Ft," where apiVersion options are clear."),M_=r(Ft,"BR",{}),B_=s(Ft,`
This is also available through Azure PowerShell:`),Ft.forEach(o),mp=u(t),il=r(t,"PRE",{class:!0});var sT=a(il);sT.forEach(o),vp=u(t),It=r(t,"P",{});var vf=a(It);N_=s(vf,"It took me a long time to get to grips with apiVersion, in the end I realised that it was the tooling in VS Code that was causing the confusion with unnecessary warnings, I learnt to instead just perform a test run in PowerShell (requires the "),sl=r(vf,"A",{href:!0,rel:!0});var a7=a(sl);j_=s(a7,"Azure PowerShell module"),a7.forEach(o),x_=s(vf,"):"),vf.forEach(o),bp=u(t),al=r(t,"PRE",{class:!0});var aT=a(al);aT.forEach(o),yp=u(t),xe=r(t,"P",{});var ci=a(xe);q_=s(ci,"It is possible to have the template refer to the latest version, using "),Sn=r(ci,"CODE",{});var n7=a(Sn);O_=s(n7,"[providers('<provider>','<type>').apiVersions[0]]"),n7.forEach(o),H_=s(ci," but this opens you up to breaking changes, so I\u2019m avoiding that route. I do think that it is important to be on the latest version you can be, this is a process thing, add the upgrade step into any future template update tasks."),F_=r(ci,"BR",{}),X_=s(ci,`
Once I was comfortable that I knew which versions I was aiming for I was able to get it done:`),ci.forEach(o),Ep=u(t),qe=r(t,"UL",{});var pi=a(qe);Dn=r(pi,"LI",{});var u7=a(Dn);nl=r(u7,"A",{href:!0,rel:!0});var c7=a(nl);U_=s(c7,"Function App"),c7.forEach(o),u7.forEach(o),G_=u(pi),Cn=r(pi,"LI",{});var p7=a(Cn);ul=r(p7,"A",{href:!0,rel:!0});var f7=a(ul);W_=s(f7,"Hosting Plan for function app"),f7.forEach(o),p7.forEach(o),V_=u(pi),Mn=r(pi,"LI",{});var h7=a(Mn);cl=r(h7,"A",{href:!0,rel:!0});var d7=a(cl);$_=s(d7,"Storage Account"),d7.forEach(o),h7.forEach(o),pi.forEach(o),wp=u(t),Oe=r(t,"P",{});var fi=a(Oe);J_=s(fi,"Another awkward bit is configuring the "),pl=r(fi,"A",{href:!0,rel:!0});var m7=a(pl);K_=s(m7,"App Settings for Azure Functions"),m7.forEach(o),Y_=s(fi,"."),Q_=r(fi,"BR",{}),Z_=s(fi,`
properties > siteConfig > appSettings:`),fi.forEach(o),_p=u(t),E=r(t,"UL",{});var R=a(E);Mr=r(R,"LI",{});var rI=a(Mr);e4=s(rI,"AzureWebJobsStorage == "),Bn=r(rI,"EM",{});var v7=a(Bn);t4=s(v7,"(DefaultEndpointsProtocol=https;AccountName=[name];AccountKey=[key])"),v7.forEach(o),rI.forEach(o),o4=u(R),Br=r(R,"LI",{});var iI=a(Br);l4=s(iI,"AzureWebJobsDashboard == "),Nn=r(iI,"EM",{});var b7=a(Nn);r4=s(b7,"(DefaultEndpointsProtocol=https;AccountName=[name];AccountKey=[key])"),b7.forEach(o),iI.forEach(o),i4=u(R),fl=r(R,"LI",{});var bf=a(fl);s4=s(bf,"WEBSITE"),jn=r(bf,"EM",{});var y7=a(jn);a4=s(y7,"CONTENTAZUREFILECONNECTIONSTRING == "),y7.forEach(o),n4=s(bf,"(DefaultEndpointsProtocol=https;AccountName=[name];AccountKey=[key])_"),bf.forEach(o),u4=u(R),Nr=r(R,"LI",{});var sI=a(Nr);c4=s(sI,"WEBSITE"),xn=r(sI,"EM",{});var E7=a(xn);p4=s(E7,"CONTENTSHARE == _mthcricket01api"),E7.forEach(o),sI.forEach(o),f4=u(R),jr=r(R,"LI",{});var aI=a(jr);h4=s(aI,"AzureWebJobsDisableHomepage == "),qn=r(aI,"EM",{});var w7=a(qn);d4=s(w7,"true"),w7.forEach(o),aI.forEach(o),m4=u(R),hl=r(R,"LI",{});var yf=a(hl);v4=s(yf,"FUNCTIONS"),On=r(yf,"EM",{});var _7=a(On);b4=s(_7,"EXTENSION_VERSION == "),_7.forEach(o),y4=s(yf,"~2_"),yf.forEach(o),E4=u(R),xr=r(R,"LI",{});var nI=a(xr);w4=s(nI,"FUNCTIONS"),Hn=r(nI,"EM",{});var g7=a(Hn);_4=s(g7,"WORKER_RUNTIME == _dotnet"),g7.forEach(o),nI.forEach(o),g4=u(R),dl=r(R,"LI",{});var Ef=a(dl);I4=s(Ef,"AzureWebJobsDotNetReleaseCompilation == "),Fn=r(Ef,"EM",{});var I7=a(Fn);A4=s(I7,"false"),I7.forEach(o),T4=s(Ef," (for debugging)"),Ef.forEach(o),k4=u(R),qr=r(R,"LI",{});var uI=a(qr);L4=s(uI,"APPINSIGHTS"),Xn=r(uI,"EM",{});var A7=a(Xn);P4=s(A7,"INSTRUMENTATIONKEY == _plan"),A7.forEach(o),uI.forEach(o),R.forEach(o),gp=u(t),At=r(t,"P",{});var wf=a(At);z4=s(wf,"I\u2019m still working through the nuances of functionapp deployment, I\u2019m getting internal server errors from Azure on the 2nd run through, having deployed fine the 1st run through. The difficulty is primarily because this stuff is quite new and in flux, there are changes between "),ml=r(wf,"A",{href:!0,rel:!0});var T7=a(ml);R4=s(T7,"Runtime version 1 vs 2"),T7.forEach(o),S4=s(wf," plus I\u2019ve chosen some awkward options like Linux hosting."),wf.forEach(o),Ip=u(t),V=r(t,"P",{});var Je=a(V);D4=s(Je,"I opted part way through to adopt "),vl=r(Je,"A",{href:!0,rel:!0});var k7=a(vl);C4=s(k7,"Template Linking"),k7.forEach(o),M4=s(Je,"."),B4=r(Je,"BR",{}),N4=s(Je,`
This was simply because the template was already becoming uncomfortably long though I\u2019m not sure this helped for my small project.`),j4=r(Je,"BR",{}),x4=s(Je,`
This didn\u2019t add too much complexity either, mostly moving the `),Un=r(Je,"EM",{});var L7=a(Un);q4=s(L7,"DependsOn"),L7.forEach(o),O4=s(Je," settings from the resource itself, to the deployment of the resource and providing template outputs."),Je.forEach(o),Ap=u(t),$=r(t,"P",{});var Ke=a($);H4=s(Ke,"I prefer this in principle because it is more modular. For example the functionapp depends on the storage account connection string. To get this you need to access the storage account API to get the key:"),F4=r(Ke,"BR",{}),X4=u(Ke),Gn=r(Ke,"CODE",{});var P7=a(Gn);U4=s(P7,`"value": "[listKeys(variables('StorageAccountName'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0])]"`),P7.forEach(o),G4=r(Ke,"BR",{}),W4=s(Ke,`
The equivalent in PowerShell: `),Wn=r(Ke,"CODE",{});var z7=a(Wn);V4=s(z7,"(Get-AzStorageAccountKey -ResourceGroupName <resource-group> -Name <storage-account>).key1"),z7.forEach(o),$4=r(Ke,"BR",{}),J4=s(Ke,`
It feels right to me that this lives within the storage account creation template, not the function app, otherwise both templates need to manage apiVersions for the storage account API (although this example just uses latest).`),Ke.forEach(o),Tp=u(t),Or=r(t,"H2",{});var R7=a(Or);K4=s(R7,"Costs"),R7.forEach(o),kp=u(t),J=r(t,"P",{});var Ye=a(J);Y4=s(Ye,"This was never meant to be a serious production application, I\u2019m certainly not expecting it to scale to fully utilise serverless scaling capabilities."),Q4=r(Ye,"BR",{}),Z4=s(Ye,`
My intention was to use the `),bl=r(Ye,"A",{href:!0,rel:!0});var S7=a(bl);eg=s(S7,"consumption plan"),S7.forEach(o),tg=s(Ye,", therefore I was expecting it to be free or very close to."),og=r(Ye,"BR",{}),lg=s(Ye,`
What I actually witnessed was that in the couple of weeks that I\u2019ve had something running I accrued \xA30.09 on API storage and nearly \xA35 on an App Service Plan. I\u2019ve now addressed this, the ARM template was wrong, fixed by manually recreating all, viewing the generated Azure `),Vn=r(Ye,"EM",{});var D7=a(Vn);rg=s(D7,"automation script"),D7.forEach(o),ig=s(Ye," and tweaking settings accordingly."),Ye.forEach(o),Lp=u(t),Hr=r(t,"H2",{});var C7=a(Hr);sg=s(C7,"Summary"),C7.forEach(o),Pp=u(t),He=r(t,"P",{});var hi=a(He);ag=s(hi,"This project has been fairly successful so far, zero to "),yl=r(hi,"A",{href:!0,rel:!0});var M7=a(yl);ng=s(M7,"Live application"),M7.forEach(o),ug=s(hi," in under a month."),cg=r(hi,"BR",{}),pg=s(hi,`
I\u2019ve also quite enjoyed bringing together lots of different elements I\u2019ve used to varying degrees to build something real.`),hi.forEach(o),zp=u(t),Fr=r(t,"P",{});var B7=a(Fr);fg=s(B7,"It isn\u2019t perfect of course, there are some known issues:"),B7.forEach(o),Rp=u(t),j=r(t,"UL",{});var he=a(j);Xr=r(he,"LI",{});var cI=a(Xr);$n=r(cI,"DEL",{});var N7=a($n);hg=s(N7,"Scores continue adding on even if all ticked off - API logic wrong"),N7.forEach(o),dg=s(cI," Fixed"),cI.forEach(o),mg=u(he),Jn=r(he,"LI",{});var j7=a(Jn);Kn=r(j7,"DEL",{});var x7=a(Kn);vg=s(x7,"Plan costing money, something isn\u2019t right about the functionapp deployment yet, consumption plan should be free (at low volumes)."),x7.forEach(o),j7.forEach(o),bg=u(he),Ur=r(he,"LI",{});var pI=a(Ur);yg=s(pI,"Clicking too quickly misrepresents the status as evidenced by the history of throws - 2 choices (possibly both):"),El=r(pI,"UL",{});var _f=a(El);Yn=r(_f,"LI",{});var q7=a(Yn);Eg=s(q7,"throttling within Angular controller, checksum-esque, possibly store actions in local queue before calling API (web worker?)"),q7.forEach(o),wg=u(_f),Qn=r(_f,"LI",{});var O7=a(Qn);_g=s(O7,"incremement version within the API, check that requests are received in order, depends upon data persistence but may be better solution"),O7.forEach(o),_f.forEach(o),pI.forEach(o),gg=u(he),Zn=r(he,"LI",{});var H7=a(Zn);Ig=s(H7,"Skip function totally broken (symptom of the above)"),H7.forEach(o),Ag=u(he),wl=r(he,"LI",{});var gf=a(wl);Tg=s(gf,"Initial load is extremely slow (several seconds) and it "),eu=r(gf,"EM",{});var F7=a(eu);kg=s(F7,"appears"),F7.forEach(o),Lg=s(gf," to be broken. Possibly send a dummy request in the background to hide this from the user."),gf.forEach(o),Pg=u(he),tu=r(he,"LI",{});var X7=a(tu);zg=s(X7,"Buttons jump about a bit due to flexbox/ grid layout and conditional display of skip, would be nice to fix this"),X7.forEach(o),he.forEach(o),Sp=u(t),Gr=r(t,"P",{});var U7=a(Gr);Rg=s(U7,"There\u2019s also outstanding work to do:"),U7.forEach(o),Dp=u(t),Tt=r(t,"UL",{});var If=a(Tt);ou=r(If,"LI",{});var G7=a(ou);Sg=s(G7,"Deployments building up in storage, no need to keep history of deployments so need to add clear step to release pipeline (start)."),G7.forEach(o),Dg=u(If),lu=r(If,"LI",{});var W7=a(lu);Cg=s(W7,"Better understand Azure\u2019s inner workings, or terminology at least, I feel that I\u2019m missing something (or the documentation is). Possibly I\u2019m just more pedantic than most users, I want to understand it, not just get it working."),W7.forEach(o),If.forEach(o),this.h()},h(){f(Ut,"href","https://mthcricket01ui.z16.web.core.windows.net/"),f(Ut,"rel","nofollow"),f(Wt,"href","https://github.com/mtempleheald/cricket-azure"),f(Wt,"rel","nofollow"),f($t,"href","https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&tabs=schema"),f($t,"rel","nofollow"),f(Kt,"href","https://dev.azure.com/mseng/Azure%20DevOps%20Roadmap/_workitems/edit/1221170"),f(Kt,"rel","nofollow"),f(Zt,"href","https://softwareengineering.stackexchange.com/questions/92339/when-do-you-use-a-struct-instead-of-a-class"),f(Zt,"rel","nofollow"),f(eo,"href","https://stackoverflow.com/questions/32008869/json-net-serialize-specific-private-field"),f(eo,"rel","nofollow"),f(to,"href","https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-authoring-templates"),f(to,"rel","nofollow"),f(oo,"href","https://docs.microsoft.com/en-gb/azure/azure-functions/deployment-zip-push"),f(oo,"rel","nofollow"),f(io,"href","https://github.com/dotnet/cli"),f(io,"rel","nofollow"),f(so,"href","https://docs.microsoft.com/en-us/azure/azure-functions/functions-dotnet-class-library"),f(so,"rel","nofollow"),f(ao,"href","https://github.com/Azure/azure-functions-core-tools"),f(ao,"rel","nofollow"),f(no,"class","language-undefined"),f(uo,"class","language-undefined"),f(po,"href","https://github.com/mtempleheald/cricket-azure/blob/master/Mth.Darts.Cricket.Api/StartMatch.cs"),f(po,"rel","nofollow"),f(fo,"href","https://stackoverflow.com/questions/15440935/how-to-test-internal-class-library#answer-15440997"),f(fo,"rel","nofollow"),f(ho,"href","https://docs.microsoft.com/en-us/azure/azure-functions/functions-test-a-function"),f(ho,"rel","nofollow"),f(mo,"href","https://learning.getpostman.com/docs/postman/collection_runs/command_line_integration_with_newman/"),f(mo,"rel","nofollow"),f(vo,"href","https://docs.microsoft.com/en-us/aspnet/core/test/integration-tests?view=aspnetcore-2.2"),f(vo,"rel","nofollow"),f(bo,"href","https://docs.microsoft.com/en-us/azure/devops/pipelines/repos/github?view=vsts"),f(bo,"rel","nofollow"),f(yo,"href","https://docs.microsoft.com/en-us/azure/devops/pipelines/process/tasks"),f(yo,"rel","nofollow"),pT(sr.src,hI="https://dev.azure.com/mtempleheald/cricket-azure/_apis/build/status/mtempleheald.cricket-azure?branchName=master")||f(sr,"src",hI),f(sr,"alt","Build Status"),f(Eo,"href","https://dev.azure.com/mtempleheald/cricket-azure/_build/latest?definitionId=1?branchName=master"),f(Eo,"rel","nofollow"),f(ko,"href","https://docs.microsoft.com/en-gb/azure/azure-functions/functions-continuous-deployment#continuous-deployment-requirements"),f(ko,"rel","nofollow"),f(Lo,"href","https://12factor.net/build-release-run"),f(Lo,"rel","nofollow"),f(zo,"href","https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=vsts"),f(zo,"rel","nofollow"),f(Do,"href","https://github.com/Microsoft/azure-pipelines-tasks/blob/master/Tasks/PublishBuildArtifactsV1/publishbuildartifacts.ts"),f(Do,"rel","nofollow"),f(Mo,"href","https://dev.azure.com/mseng/Azure%20DevOps%20Roadmap/_workitems/edit/1221170"),f(Mo,"rel","nofollow"),f(Bo,"href","https://github.com/Microsoft/azure-pipelines-tasks/tree/master/Tasks"),f(Bo,"rel","nofollow"),f(No,"href","https://github.com/projectkudu/kudu"),f(No,"rel","nofollow"),f(jo,"href","https://github.com/projectkudu/kudu/wiki/Customizing-deployments"),f(jo,"rel","nofollow"),f(xo,"href","https://docs.microsoft.com/en-gb/azure/active-directory/develop/howto-create-service-principal-portal"),f(xo,"rel","nofollow"),f(Fo,"href","https://github.com/Microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureResourceGroupDeploymentV2/README.md"),f(Fo,"rel","nofollow"),f(Xo,"class","language-undefined"),f(Uo,"href","https://aka.ms/azurermwebdeployreadme"),f(Uo,"rel","nofollow"),f(Go,"href","https://aka.ms/azurefilecopyreadme"),f(Go,"rel","nofollow"),f(Wo,"href","https://github.com/Microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureCLIV1/Readme.md"),f(Wo,"rel","nofollow"),f(Vo,"class","language-undefined"),f(Jo,"href","https://blog.kloud.com.au/2018/08/16/deploying-azure-functions-with-arm-templates/"),f(Jo,"rel","nofollow"),f(Ko,"href","https://docs.microsoft.com/en-gb/azure/azure-resource-manager/resource-group-authoring-templates"),f(Ko,"rel","nofollow"),f(Yo,"href","https://docs.microsoft.com/en-gb/azure/azure-resource-manager/resource-manager-templates-resources"),f(Yo,"rel","nofollow"),f(Qo,"href","https://github.com/Azure/azure-quickstart-templates"),f(Qo,"rel","nofollow"),f(Zo,"href","https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-storage-account-create/azuredeploy.json"),f(Zo,"rel","nofollow"),f(el,"href","https://github.com/Azure/azure-quickstart-templates/blob/master/101-function-app-create-dynamic/azuredeploy.json"),f(el,"rel","nofollow"),f(tl,"href","https://docs.microsoft.com/en-us/rest/api/storagerp/storageaccounts"),f(tl,"rel","nofollow"),f(ol,"href","https://docs.microsoft.com/en-us/rest/api/appservice/webapps"),f(ol,"rel","nofollow"),f(ll,"class","language-json"),f(rl,"href","https://docs.microsoft.com/en-us/azure/templates"),f(rl,"rel","nofollow"),f(il,"class","language-undefined"),f(sl,"href","https://docs.microsoft.com/en-gb/powershell/azure/install-az-ps?view=azps-1.0.0&viewFallbackFrom=azurermps-4.0.0"),f(sl,"rel","nofollow"),f(al,"class","language-undefined"),f(nl,"href","https://docs.microsoft.com/en-us/azure/templates/microsoft.web/2018-02-01/sites"),f(nl,"rel","nofollow"),f(ul,"href","https://docs.microsoft.com/en-us/azure/templates/microsoft.web/2018-02-01/serverfarms"),f(ul,"rel","nofollow"),f(cl,"href","https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/2018-07-01/storageaccounts"),f(cl,"rel","nofollow"),f(pl,"href","https://docs.microsoft.com/en-gb/azure/azure-functions/functions-app-settings"),f(pl,"rel","nofollow"),f(ml,"href","https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions"),f(ml,"rel","nofollow"),f(vl,"href","https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-linked-templates"),f(vl,"rel","nofollow"),f(bl,"href","https://azure.microsoft.com/en-gb/pricing/details/app-service/plans/"),f(bl,"rel","nofollow"),f(yl,"href","https://mthcricket01ui.z16.web.core.windows.net/"),f(yl,"rel","nofollow")},m(t,c){p(t,st,c),e(st,Af),p(t,iu,c),p(t,at,c),e(at,Tf),e(at,kf),e(at,Lf),p(t,su,c),p(t,nt,c),e(nt,di),e(di,Pf),e(nt,zf),e(nt,mi),e(mi,Rf),p(t,au,c),p(t,gl,c),e(gl,Sf),p(t,nu,c),p(t,C,c),e(C,vi),e(vi,Df),e(C,Cf),e(C,bi),e(bi,Mf),e(C,Bf),e(C,yi),e(yi,Nf),e(C,jf),e(C,Ei),e(Ei,xf),e(C,qf),e(C,wi),e(wi,Of),e(C,Hf),e(C,_i),e(_i,Ff),p(t,uu,c),p(t,Xt,c),e(Xt,Ut),e(Ut,Xf),e(Xt,Uf),p(t,cu,c),p(t,Il,c),e(Il,Gf),p(t,pu,c),p(t,te,c),e(te,Wf),e(te,Vf),e(te,$f),e(te,Jf),e(te,Kf),e(te,Yf),e(te,Qf),p(t,fu,c),p(t,ut,c),e(ut,gi),e(gi,h),e(h,Ii),e(Ii,Zf),e(h,eh),e(h,Ai),e(Ai,th),e(h,oh),e(h,Ti),e(Ti,lh),e(h,rh),e(h,ki),e(ki,ih),e(h,sh),e(h,Li),e(Li,ah),e(h,nh),e(h,Pi),e(Pi,uh),e(h,ch),e(h,zi),e(zi,ph),e(h,fh),e(h,Ri),e(Ri,hh),e(h,dh),e(h,Si),e(Si,mh),e(h,vh),e(h,Di),e(Di,bh),e(ut,yh),e(ut,Gt),e(Gt,d),e(d,Ci),e(Ci,Eh),e(d,wh),e(d,Mi),e(Mi,_h),e(d,gh),e(d,Bi),e(Bi,Ih),e(d,Ah),e(d,Ni),e(Ni,Th),e(d,kh),e(d,ji),e(ji,Lh),e(d,Ph),e(d,xi),e(xi,zh),e(d,Rh),e(d,qi),e(qi,Sh),e(d,Dh),e(d,Oi),e(Oi,Ch),e(d,Mh),e(d,Hi),e(Hi,Bh),e(d,Nh),e(d,Fi),e(Fi,jh),e(Gt,xh),e(Gt,m),e(m,Xi),e(Xi,qh),e(m,Oh),e(m,Ui),e(Ui,Hh),e(m,Fh),e(m,Gi),e(Gi,Xh),e(m,Uh),e(m,Wi),e(Wi,Gh),e(m,Wh),e(m,Vi),e(Vi,Vh),e(m,$h),e(m,$i),e($i,Jh),e(m,Kh),e(m,Ji),e(Ji,Yh),e(m,Qh),e(m,Ki),e(Ki,Zh),e(m,ed),e(m,Yi),e(Yi,td),e(m,od),e(m,Qi),e(Qi,ld),p(t,hu,c),p(t,Al,c),e(Al,rd),p(t,du,c),p(t,ke,c),e(ke,Zi),e(Zi,id),e(ke,sd),e(ke,es),e(es,ad),e(ke,nd),e(ke,ts),e(ts,ud),p(t,mu,c),p(t,Tl,c),e(Tl,cd),p(t,vu,c),p(t,v,c),e(v,Qe),e(Qe,pd),e(Qe,fd),e(Qe,hd),e(Qe,Wt),e(Wt,dd),e(Qe,md),e(v,vd),e(v,Ze),e(Ze,bd),e(Ze,yd),e(Ze,Ed),e(Ze,wd),e(Ze,_d),e(v,gd),e(v,Vt),e(Vt,Id),e(Vt,Ad),e(Vt,Td),e(v,kd),e(v,de),e(de,Ld),e(de,Pd),e(de,zd),e(de,$t),e($t,Rd),e(de,Sd),e(de,Dd),e(de,Cd),e(v,Md),e(v,Jt),e(Jt,Bd),e(Jt,Nd),e(Jt,jd),e(v,xd),e(v,me),e(me,qd),e(me,Od),e(me,Hd),e(me,Kt),e(Kt,Fd),e(me,Xd),e(me,Ud),e(me,Gd),e(v,Wd),e(v,os),e(os,Vd),e(v,$d),e(v,Yt),e(Yt,Jd),e(Yt,Kd),e(Yt,Yd),e(v,Qd),e(v,ls),e(ls,Zd),p(t,bu,c),p(t,kl,c),e(kl,em),p(t,yu,c),p(t,Ll,c),e(Ll,tm),p(t,Eu,c),p(t,F,c),e(F,Pl),e(Pl,om),e(Pl,Qt),e(Qt,rs),e(rs,lm),e(Qt,rm),e(Qt,is),e(is,im),e(F,sm),e(F,zl),e(zl,am),e(zl,ss),e(ss,as),e(as,nm),e(F,um),e(F,Rl),e(Rl,cm),e(Rl,ns),e(ns,us),e(us,pm),e(F,fm),e(F,Sl),e(Sl,hm),e(Sl,cs),e(cs,ps),e(ps,dm),e(F,mm),e(F,Dl),e(Dl,vm),e(Dl,fs),e(fs,hs),e(hs,bm),p(t,wu,c),p(t,Cl,c),e(Cl,ym),p(t,_u,c),p(t,_,c),e(_,ds),e(ds,Em),e(_,wm),e(_,ms),e(ms,_m),e(_,gm),e(_,vs),e(vs,Im),e(_,Am),e(_,Ml),e(Ml,Tm),e(Ml,Zt),e(Zt,km),e(_,Lm),e(_,Bl),e(Bl,Pm),e(Bl,eo),e(eo,zm),e(_,Rm),e(_,bs),e(bs,Sm),e(_,Dm),e(_,ys),e(ys,Cm),e(_,Mm),e(_,Es),e(Es,Bm),p(t,gu,c),p(t,Nl,c),e(Nl,Nm),p(t,Iu,c),p(t,jl,c),e(jl,jm),p(t,Au,c),p(t,oe,c),e(oe,xl),e(xl,xm),e(xl,et),e(et,ws),e(ws,qm),e(et,Om),e(et,_s),e(_s,Hm),e(et,Fm),e(et,gs),e(gs,Xm),e(oe,Um),e(oe,ql),e(ql,Gm),e(ql,tt),e(tt,Is),e(Is,Wm),e(tt,Vm),e(tt,As),e(As,$m),e(tt,Jm),e(tt,Ts),e(Ts,Km),e(oe,Ym),e(oe,Ol),e(Ol,Qm),e(Ol,ot),e(ot,ks),e(ks,Zm),e(ot,ev),e(ot,Ls),e(Ls,tv),e(ot,ov),e(ot,Ps),e(Ps,lv),e(oe,rv),e(oe,Hl),e(Hl,iv),e(Hl,lt),e(lt,zs),e(zs,sv),e(lt,av),e(lt,Rs),e(Rs,nv),e(lt,uv),e(lt,Ss),e(Ss,cv),p(t,Tu,c),p(t,ct,c),e(ct,pv),e(ct,fv),e(ct,hv),p(t,ku,c),p(t,Fl,c),e(Fl,dv),p(t,Lu,c),p(t,k,c),e(k,mv),e(k,vv),e(k,bv),e(k,Ds),e(Ds,yv),e(k,Ev),e(k,wv),e(k,_v),e(k,to),e(to,gv),e(k,Iv),e(k,Av),e(k,Tv),e(k,oo),e(oo,kv),e(k,Lv),p(t,Pu,c),p(t,Xl,c),e(Xl,Pv),p(t,zu,c),p(t,Ul,c),e(Ul,zv),p(t,Ru,c),p(t,Le,c),e(Le,Cs),e(Cs,Rv),e(Le,Sv),e(Le,Ms),e(Ms,Dv),e(Le,Cv),e(Le,Bs),e(Bs,Mv),p(t,Su,c),p(t,Pe,c),e(Pe,Bv),e(Pe,Nv),e(Pe,jv),e(Pe,xv),e(Pe,qv),p(t,Du,c),p(t,ze,c),e(ze,lo),e(lo,Ov),e(lo,Ns),e(Ns,Hv),e(lo,Fv),e(ze,Xv),e(ze,ro),e(ro,Uv),e(ro,js),e(js,Gv),e(ro,Wv),e(ze,Vv),e(ze,Gl),e(Gl,$v),e(Gl,Q),e(Q,xs),e(xs,Jv),e(Q,Kv),e(Q,qs),e(qs,Yv),e(Q,Qv),e(Q,Os),e(Os,Zv),e(Q,eb),e(Q,Hs),e(Hs,tb),e(Q,ob),e(Q,Wl),e(Wl,lb),e(Wl,Z),e(Z,Fs),e(Fs,rb),e(Z,ib),e(Z,Xs),e(Xs,sb),e(Z,ab),e(Z,Us),e(Us,nb),e(Z,ub),e(Z,Gs),e(Gs,cb),e(Z,pb),e(Z,Ws),e(Ws,fb),p(t,Cu,c),p(t,pt,c),e(pt,hb),e(pt,db),e(pt,mb),p(t,Mu,c),p(t,ft,c),e(ft,Vs),e(Vs,vb),e(ft,bb),e(ft,$s),e($s,yb),p(t,Bu,c),p(t,Vl,c),e(Vl,Eb),p(t,Nu,c),p(t,g,c),e(g,wb),e(g,io),e(io,_b),e(g,gb),e(g,Ib),e(g,Ab),e(g,Js),e(Js,Tb),e(g,kb),e(g,Lb),e(g,Pb),e(g,Ks),e(Ks,zb),e(g,Rb),e(g,Sb),e(g,Db),e(g,so),e(so,Cb),e(g,Mb),p(t,ju,c),p(t,M,c),e(M,Bb),e(M,ao),e(ao,Nb),e(M,jb),e(M,xb),e(M,qb),e(M,Ys),e(Ys,Ob),e(M,Hb),e(M,Fb),e(M,Xb),e(M,Qs),e(Qs,Ub),e(M,Gb),p(t,xu,c),p(t,$l,c),e($l,Wb),p(t,qu,c),p(t,Re,c),e(Re,Zs),e(Zs,Vb),e(Re,$b),e(Re,ea),e(ea,Jb),e(Re,Kb),e(Re,ta),e(ta,Yb),p(t,Ou,c),p(t,no,c),no.innerHTML=$7,p(t,Hu,c),p(t,Jl,c),e(Jl,oa),e(oa,Qb),p(t,Fu,c),p(t,uo,c),uo.innerHTML=J7,p(t,Xu,c),p(t,le,c),e(le,Zb),e(le,e1),e(le,t1),e(le,o1),e(le,l1),e(le,r1),e(le,i1),p(t,Uu,c),p(t,co,c),e(co,po),e(po,s1),e(co,a1),p(t,Gu,c),p(t,X,c),e(X,la),e(la,n1),e(X,u1),e(X,ra),e(ra,c1),e(X,p1),e(X,ia),e(ia,f1),e(X,h1),e(X,sa),e(sa,d1),e(X,m1),e(X,aa),e(aa,v1),p(t,Wu,c),p(t,Kl,c),e(Kl,b1),p(t,Vu,c),p(t,Yl,c),e(Yl,y1),p(t,$u,c),p(t,re,c),e(re,na),e(na,E1),e(re,w1),e(re,ua),e(ua,_1),e(re,g1),e(re,ca),e(ca,I1),e(re,A1),e(re,pa),e(pa,T1),p(t,Ju,c),p(t,Ql,c),e(Ql,k1),p(t,Ku,c),p(t,ve,c),e(ve,L1),e(ve,fa),e(fa,P1),e(ve,z1),e(ve,R1),e(ve,fo),e(fo,S1),e(ve,D1),p(t,Yu,c),p(t,Zl,c),e(Zl,C1),p(t,Qu,c),p(t,ht,c),e(ht,M1),e(ht,ho),e(ho,B1),e(ht,N1),p(t,Zu,c),p(t,er,c),e(er,j1),p(t,ec,c),p(t,w,c),e(w,x1),e(w,ha),e(ha,q1),e(w,O1),e(w,da),e(da,H1),e(w,F1),e(w,X1),e(w,U1),e(w,G1),e(w,W1),e(w,V1),e(w,$1),e(w,ma),e(ma,J1),e(w,K1),e(w,Y1),e(w,Q1),e(w,Z1),p(t,tc,c),p(t,rt,c),e(rt,e2),e(rt,va),e(va,t2),e(rt,o2),e(rt,l2),p(t,oc,c),p(t,dt,c),e(dt,tr),e(tr,r2),e(tr,mo),e(mo,i2),e(dt,s2),e(dt,or),e(or,a2),e(or,vo),e(vo,n2),p(t,lc,c),p(t,lr,c),e(lr,u2),p(t,rc,c),p(t,ie,c),e(ie,c2),e(ie,p2),e(ie,f2),e(ie,h2),e(ie,d2),e(ie,m2),e(ie,v2),p(t,ic,c),p(t,mt,c),e(mt,b2),e(mt,y2),e(mt,E2),p(t,sc,c),p(t,Se,c),e(Se,w2),e(Se,_2),e(Se,g2),e(Se,I2),e(Se,A2),p(t,ac,c),p(t,rr,c),e(rr,T2),p(t,nc,c),p(t,ir,c),e(ir,k2),p(t,uc,c),p(t,De,c),e(De,ba),e(ba,L2),e(De,P2),e(De,ya),e(ya,z2),e(De,R2),e(De,Ea),e(Ea,S2),p(t,cc,c),p(t,b,c),e(b,D2),e(b,bo),e(bo,C2),e(b,M2),e(b,B2),e(b,N2),e(b,wa),e(wa,j2),e(b,x2),e(b,_a),e(_a,q2),e(b,O2),e(b,ga),e(ga,H2),e(b,F2),e(b,X2),e(b,U2),e(b,Ia),e(Ia,G2),e(b,W2),e(b,Aa),e(Aa,V2),e(b,$2),p(t,pc,c),p(t,ee,c),e(ee,J2),e(ee,yo),e(yo,K2),e(ee,Y2),e(ee,Q2),e(ee,Z2),e(ee,ey),e(ee,ty),e(ee,Eo),e(Eo,sr),p(t,fc,c),p(t,ar,c),e(ar,oy),p(t,hc,c),p(t,nr,c),e(nr,ly),p(t,dc,c),p(t,B,c),e(B,wo),e(wo,ry),e(wo,Ta),e(Ta,iy),e(wo,sy),e(B,ay),e(B,_o),e(_o,ny),e(_o,ka),e(ka,uy),e(_o,cy),e(B,py),e(B,go),e(go,fy),e(go,La),e(La,hy),e(go,dy),e(B,my),e(B,Io),e(Io,vy),e(Io,Pa),e(Pa,by),e(Io,yy),e(B,Ey),e(B,Ao),e(Ao,wy),e(Ao,za),e(za,_y),e(Ao,gy),e(B,Iy),e(B,To),e(To,Ay),e(To,Ra),e(Ra,Ty),e(To,ky),p(t,mc,c),p(t,ur,c),e(ur,Ly),p(t,vc,c),p(t,cr,c),e(cr,O),e(O,Py),e(O,Sa),e(Sa,zy),e(O,Ry),e(O,Da),e(Da,Sy),e(O,Dy),e(O,ko),e(ko,Cy),e(O,My),e(O,By),e(O,Ny),e(O,jy),e(O,xy),p(t,bc,c),p(t,pr,c),e(pr,qy),p(t,yc,c),p(t,Ce,c),e(Ce,Oy),e(Ce,Lo),e(Lo,Hy),e(Ce,Fy),e(Ce,Xy),e(Ce,Uy),p(t,Ec,c),p(t,U,c),e(U,Gy),e(U,Ca),e(Ca,Wy),e(U,Vy),e(U,Ma),e(Ma,$y),e(U,Jy),e(U,Ba),e(Ba,Ky),e(U,Yy),e(U,Qy),e(U,Zy),p(t,wc,c),p(t,Po,c),e(Po,eE),e(Po,zo),e(zo,tE),p(t,_c,c),p(t,vt,c),e(vt,Na),e(Na,be),e(be,ja),e(ja,oE),e(be,lE),e(be,xa),e(xa,rE),e(be,iE),e(be,qa),e(qa,sE),e(be,aE),e(be,Oa),e(Oa,nE),e(vt,uE),e(vt,S),e(S,ye),e(ye,Ha),e(Ha,cE),e(ye,pE),e(ye,gc),e(ye,fE),e(ye,Ic),e(ye,hE),e(ye,Fa),e(Fa,dE),e(S,mE),e(S,Ee),e(Ee,Xa),e(Xa,vE),e(Ee,bE),e(Ee,Ua),e(Ua,yE),e(Ee,EE),e(Ee,Ac),e(Ee,wE),e(Ee,Ga),e(Ga,_E),e(S,gE),e(S,we),e(we,Wa),e(Wa,IE),e(we,AE),e(we,Tc),e(we,TE),e(we,kc),e(we,kE),e(we,Va),e(Va,LE),e(S,PE),e(S,_e),e(_e,$a),e($a,zE),e(_e,RE),e(_e,Ja),e(Ja,SE),e(_e,DE),e(_e,Ka),e(Ka,CE),e(_e,ME),e(_e,Lc),e(S,BE),e(S,ge),e(ge,Ya),e(Ya,NE),e(ge,jE),e(ge,Pc),e(ge,xE),e(ge,Qa),e(Qa,qE),e(ge,OE),e(ge,zc),e(S,HE),e(S,Ie),e(Ie,Za),e(Za,FE),e(Ie,XE),e(Ie,Rc),e(Ie,UE),e(Ie,en),e(en,GE),e(Ie,WE),e(Ie,Sc),e(S,VE),e(S,Ae),e(Ae,tn),e(tn,$E),e(Ae,JE),e(Ae,on),e(on,KE),e(Ae,YE),e(Ae,Dc),e(Ae,QE),e(Ae,ln),e(ln,ZE),p(t,Cc,c),p(t,fr,c),e(fr,ew),p(t,Mc,c),p(t,bt,c),e(bt,Ro),e(Ro,tw),e(Ro,rn),e(rn,ow),e(Ro,lw),e(bt,rw),e(bt,So),e(So,iw),e(So,sn),e(sn,sw),e(So,aw),p(t,Bc,c),p(t,hr,c),e(hr,nw),p(t,Nc,c),p(t,yt,c),e(yt,dr),e(dr,uw),e(dr,an),e(an,cw),e(yt,pw),e(yt,nn),e(nn,fw),p(t,jc,c),p(t,Et,c),e(Et,hw),e(Et,Do),e(Do,dw),e(Et,mw),p(t,xc,c),p(t,mr,c),e(mr,Co),e(Co,vw),e(Co,un),e(un,bw),e(Co,yw),p(t,qc,c),p(t,vr,c),e(vr,Ew),p(t,Oc,c),p(t,G,c),e(G,ww),e(G,Mo),e(Mo,_w),e(G,gw),e(G,Iw),e(G,Aw),e(G,Bo),e(Bo,Tw),e(G,kw),e(G,Lw),e(G,Pw),p(t,Hc,c),p(t,br,c),e(br,zw),p(t,Fc,c),p(t,y,c),e(y,Rw),e(y,cn),e(cn,Sw),e(y,Dw),e(y,Cw),e(y,Mw),e(y,No),e(No,Bw),e(y,Nw),e(y,jo),e(jo,jw),e(y,xw),e(y,qw),e(y,Ow),e(y,pn),e(pn,Hw),e(y,Fw),e(y,Xw),e(y,Uw),e(y,fn),e(fn,Gw),e(y,Ww),p(t,Xc,c),p(t,Me,c),e(Me,hn),e(hn,Vw),e(Me,$w),e(Me,dn),e(dn,Jw),e(Me,Kw),e(Me,mn),e(mn,Yw),p(t,Uc,c),p(t,H,c),e(H,Qw),e(H,Zw),e(H,e3),e(H,t3),e(H,o3),e(H,vn),e(vn,l3),e(H,r3),e(H,i3),e(H,xo),e(xo,s3),e(H,a3),p(t,Gc,c),p(t,wt,c),e(wt,bn),e(bn,n3),e(wt,u3),e(wt,yn),e(yn,c3),p(t,Wc,c),p(t,yr,c),e(yr,p3),p(t,Vc,c),p(t,Be,c),e(Be,qo),e(qo,f3),e(qo,h3),e(qo,d3),e(Be,m3),e(Be,Oo),e(Oo,v3),e(Oo,b3),e(Oo,y3),e(Be,E3),e(Be,Ho),e(Ho,w3),e(Ho,_3),e(Ho,g3),p(t,$c,c),p(t,Er,c),e(Er,I3),p(t,Jc,c),p(t,wr,c),e(wr,A3),p(t,Kc,c),p(t,_r,c),e(_r,gr),e(gr,Fo),e(Fo,T3),e(gr,k3),p(t,Yc,c),p(t,Xo,c),Xo.innerHTML=K7,p(t,Qc,c),p(t,Ne,c),e(Ne,Ir),e(Ir,Uo),e(Uo,L3),e(Ir,P3),e(Ne,z3),e(Ne,Ar),e(Ar,Go),e(Go,R3),e(Ar,S3),e(Ne,D3),e(Ne,Tr),e(Tr,Wo),e(Wo,C3),e(Tr,M3),p(t,Zc,c),p(t,Vo,c),Vo.innerHTML=Y7,p(t,ep,c),p(t,kr,c),e(kr,B3),p(t,tp,c),p(t,Lr,c),e(Lr,N3),p(t,op,c),p(t,Pr,c),e(Pr,j3),p(t,lp,c),p(t,je,c),e(je,En),e(En,x3),e(je,q3),e(je,wn),e(wn,O3),e(je,H3),e(je,$o),e($o,F3),e($o,Jo),e(Jo,X3),e($o,U3),p(t,rp,c),p(t,_t,c),e(_t,G3),e(_t,Ko),e(Ko,W3),e(_t,V3),p(t,ip,c),p(t,W,c),e(W,_n),e(_n,$3),e(W,J3),e(W,gn),e(gn,K3),e(W,Y3),e(W,In),e(In,Q3),e(W,Z3),e(W,zr),e(zr,e_),e(zr,Yo),e(Yo,t_),e(W,o_),e(W,An),e(An,l_),p(t,sp,c),p(t,N,c),e(N,r_),e(N,Qo),e(Qo,i_),e(N,s_),e(N,Zo),e(Zo,a_),e(N,n_),e(N,el),e(el,u_),e(N,c_),e(N,p_),e(N,f_),e(N,h_),e(N,d_),p(t,ap,c),p(t,Rr,c),e(Rr,m_),p(t,np,c),p(t,gt,c),e(gt,Tn),e(Tn,tl),e(tl,v_),e(gt,b_),e(gt,kn),e(kn,ol),e(ol,y_),p(t,up,c),p(t,Sr,c),e(Sr,E_),p(t,cp,c),p(t,Dr,c),e(Dr,w_),p(t,pp,c),p(t,se,c),e(se,Ln),e(Ln,__),e(se,g_),e(se,Pn),e(Pn,I_),e(se,A_),e(se,zn),e(zn,T_),e(se,k_),e(se,Rn),e(Rn,L_),p(t,fp,c),p(t,Cr,c),e(Cr,P_),p(t,hp,c),p(t,ll,c),ll.innerHTML=Q7,p(t,dp,c),p(t,ae,c),e(ae,z_),e(ae,R_),e(ae,S_),e(ae,rl),e(rl,D_),e(ae,C_),e(ae,M_),e(ae,B_),p(t,mp,c),p(t,il,c),il.innerHTML=Z7,p(t,vp,c),p(t,It,c),e(It,N_),e(It,sl),e(sl,j_),e(It,x_),p(t,bp,c),p(t,al,c),al.innerHTML=eT,p(t,yp,c),p(t,xe,c),e(xe,q_),e(xe,Sn),e(Sn,O_),e(xe,H_),e(xe,F_),e(xe,X_),p(t,Ep,c),p(t,qe,c),e(qe,Dn),e(Dn,nl),e(nl,U_),e(qe,G_),e(qe,Cn),e(Cn,ul),e(ul,W_),e(qe,V_),e(qe,Mn),e(Mn,cl),e(cl,$_),p(t,wp,c),p(t,Oe,c),e(Oe,J_),e(Oe,pl),e(pl,K_),e(Oe,Y_),e(Oe,Q_),e(Oe,Z_),p(t,_p,c),p(t,E,c),e(E,Mr),e(Mr,e4),e(Mr,Bn),e(Bn,t4),e(E,o4),e(E,Br),e(Br,l4),e(Br,Nn),e(Nn,r4),e(E,i4),e(E,fl),e(fl,s4),e(fl,jn),e(jn,a4),e(fl,n4),e(E,u4),e(E,Nr),e(Nr,c4),e(Nr,xn),e(xn,p4),e(E,f4),e(E,jr),e(jr,h4),e(jr,qn),e(qn,d4),e(E,m4),e(E,hl),e(hl,v4),e(hl,On),e(On,b4),e(hl,y4),e(E,E4),e(E,xr),e(xr,w4),e(xr,Hn),e(Hn,_4),e(E,g4),e(E,dl),e(dl,I4),e(dl,Fn),e(Fn,A4),e(dl,T4),e(E,k4),e(E,qr),e(qr,L4),e(qr,Xn),e(Xn,P4),p(t,gp,c),p(t,At,c),e(At,z4),e(At,ml),e(ml,R4),e(At,S4),p(t,Ip,c),p(t,V,c),e(V,D4),e(V,vl),e(vl,C4),e(V,M4),e(V,B4),e(V,N4),e(V,j4),e(V,x4),e(V,Un),e(Un,q4),e(V,O4),p(t,Ap,c),p(t,$,c),e($,H4),e($,F4),e($,X4),e($,Gn),e(Gn,U4),e($,G4),e($,W4),e($,Wn),e(Wn,V4),e($,$4),e($,J4),p(t,Tp,c),p(t,Or,c),e(Or,K4),p(t,kp,c),p(t,J,c),e(J,Y4),e(J,Q4),e(J,Z4),e(J,bl),e(bl,eg),e(J,tg),e(J,og),e(J,lg),e(J,Vn),e(Vn,rg),e(J,ig),p(t,Lp,c),p(t,Hr,c),e(Hr,sg),p(t,Pp,c),p(t,He,c),e(He,ag),e(He,yl),e(yl,ng),e(He,ug),e(He,cg),e(He,pg),p(t,zp,c),p(t,Fr,c),e(Fr,fg),p(t,Rp,c),p(t,j,c),e(j,Xr),e(Xr,$n),e($n,hg),e(Xr,dg),e(j,mg),e(j,Jn),e(Jn,Kn),e(Kn,vg),e(j,bg),e(j,Ur),e(Ur,yg),e(Ur,El),e(El,Yn),e(Yn,Eg),e(El,wg),e(El,Qn),e(Qn,_g),e(j,gg),e(j,Zn),e(Zn,Ig),e(j,Ag),e(j,wl),e(wl,Tg),e(wl,eu),e(eu,kg),e(wl,Lg),e(j,Pg),e(j,tu),e(tu,zg),p(t,Sp,c),p(t,Gr,c),e(Gr,Rg),p(t,Dp,c),p(t,Tt,c),e(Tt,ou),e(ou,Sg),e(Tt,Dg),e(Tt,lu),e(lu,Cg)},p:fI,i:fI,o:fI,d(t){t&&o(st),t&&o(iu),t&&o(at),t&&o(su),t&&o(nt),t&&o(au),t&&o(gl),t&&o(nu),t&&o(C),t&&o(uu),t&&o(Xt),t&&o(cu),t&&o(Il),t&&o(pu),t&&o(te),t&&o(fu),t&&o(ut),t&&o(hu),t&&o(Al),t&&o(du),t&&o(ke),t&&o(mu),t&&o(Tl),t&&o(vu),t&&o(v),t&&o(bu),t&&o(kl),t&&o(yu),t&&o(Ll),t&&o(Eu),t&&o(F),t&&o(wu),t&&o(Cl),t&&o(_u),t&&o(_),t&&o(gu),t&&o(Nl),t&&o(Iu),t&&o(jl),t&&o(Au),t&&o(oe),t&&o(Tu),t&&o(ct),t&&o(ku),t&&o(Fl),t&&o(Lu),t&&o(k),t&&o(Pu),t&&o(Xl),t&&o(zu),t&&o(Ul),t&&o(Ru),t&&o(Le),t&&o(Su),t&&o(Pe),t&&o(Du),t&&o(ze),t&&o(Cu),t&&o(pt),t&&o(Mu),t&&o(ft),t&&o(Bu),t&&o(Vl),t&&o(Nu),t&&o(g),t&&o(ju),t&&o(M),t&&o(xu),t&&o($l),t&&o(qu),t&&o(Re),t&&o(Ou),t&&o(no),t&&o(Hu),t&&o(Jl),t&&o(Fu),t&&o(uo),t&&o(Xu),t&&o(le),t&&o(Uu),t&&o(co),t&&o(Gu),t&&o(X),t&&o(Wu),t&&o(Kl),t&&o(Vu),t&&o(Yl),t&&o($u),t&&o(re),t&&o(Ju),t&&o(Ql),t&&o(Ku),t&&o(ve),t&&o(Yu),t&&o(Zl),t&&o(Qu),t&&o(ht),t&&o(Zu),t&&o(er),t&&o(ec),t&&o(w),t&&o(tc),t&&o(rt),t&&o(oc),t&&o(dt),t&&o(lc),t&&o(lr),t&&o(rc),t&&o(ie),t&&o(ic),t&&o(mt),t&&o(sc),t&&o(Se),t&&o(ac),t&&o(rr),t&&o(nc),t&&o(ir),t&&o(uc),t&&o(De),t&&o(cc),t&&o(b),t&&o(pc),t&&o(ee),t&&o(fc),t&&o(ar),t&&o(hc),t&&o(nr),t&&o(dc),t&&o(B),t&&o(mc),t&&o(ur),t&&o(vc),t&&o(cr),t&&o(bc),t&&o(pr),t&&o(yc),t&&o(Ce),t&&o(Ec),t&&o(U),t&&o(wc),t&&o(Po),t&&o(_c),t&&o(vt),t&&o(Cc),t&&o(fr),t&&o(Mc),t&&o(bt),t&&o(Bc),t&&o(hr),t&&o(Nc),t&&o(yt),t&&o(jc),t&&o(Et),t&&o(xc),t&&o(mr),t&&o(qc),t&&o(vr),t&&o(Oc),t&&o(G),t&&o(Hc),t&&o(br),t&&o(Fc),t&&o(y),t&&o(Xc),t&&o(Me),t&&o(Uc),t&&o(H),t&&o(Gc),t&&o(wt),t&&o(Wc),t&&o(yr),t&&o(Vc),t&&o(Be),t&&o($c),t&&o(Er),t&&o(Jc),t&&o(wr),t&&o(Kc),t&&o(_r),t&&o(Yc),t&&o(Xo),t&&o(Qc),t&&o(Ne),t&&o(Zc),t&&o(Vo),t&&o(ep),t&&o(kr),t&&o(tp),t&&o(Lr),t&&o(op),t&&o(Pr),t&&o(lp),t&&o(je),t&&o(rp),t&&o(_t),t&&o(ip),t&&o(W),t&&o(sp),t&&o(N),t&&o(ap),t&&o(Rr),t&&o(np),t&&o(gt),t&&o(up),t&&o(Sr),t&&o(cp),t&&o(Dr),t&&o(pp),t&&o(se),t&&o(fp),t&&o(Cr),t&&o(hp),t&&o(ll),t&&o(dp),t&&o(ae),t&&o(mp),t&&o(il),t&&o(vp),t&&o(It),t&&o(bp),t&&o(al),t&&o(yp),t&&o(xe),t&&o(Ep),t&&o(qe),t&&o(wp),t&&o(Oe),t&&o(_p),t&&o(E),t&&o(gp),t&&o(At),t&&o(Ip),t&&o(V),t&&o(Ap),t&&o($),t&&o(Tp),t&&o(Or),t&&o(kp),t&&o(J),t&&o(Lp),t&&o(Hr),t&&o(Pp),t&&o(He),t&&o(zp),t&&o(Fr),t&&o(Rp),t&&o(j),t&&o(Sp),t&&o(Gr),t&&o(Dp),t&&o(Tt)}}}class dT extends nT{constructor(st){super(),uT(this,st,null,fT,cT,{})}}export{dT as default};
