import{S as wn,i as En,s as _n,l as i,u as s,a as n,m as a,p as o,v as r,h as l,c as f,b as d,F as t,n as _s}from"../../../../../chunks/index-4d40d7b1.js";function Ln(bn){let b,ai,Ue,oi,si,ri,ni,el,z,fi,tl,v,Se,ui,di,J,mi,xe,He,ci,hi,ge,vi,pi,qe,yi,bi,V,wi,Me,Ae,Ei,ll,Y,_i,il,M,Re,Li,Ii,Fe,ki,al,Z,Ci,ol,k,Ne,Di,Ti,Be,Ui,Si,We,xi,sl,$,Hi,rl,m,Pe,gi,qi,Ke,Mi,Ai,Oe,Ri,Fi,Qe,Ni,Bi,Xe,Wi,Pi,je,Ki,Oi,Ge,Qi,nl,ee,Xi,fl,p,ze,ji,Gi,Je,zi,Ji,Ve,Vi,Yi,Ye,Zi,$i,Ze,ea,ul,te,ta,dl,c,$e,la,ia,et,aa,oa,tt,sa,ra,lt,na,fa,it,ua,da,at,ma,ml,le,ca,cl,C,ot,ha,va,st,pa,ya,rt,ba,hl,ie,wa,vl,w,nt,Ea,_a,ft,La,Ia,ut,ka,Ca,dt,Da,pl,ae,Ta,yl,E,mt,Ua,Sa,ct,xa,Ha,oe,ga,X,ht,qa,Ma,vt,Aa,Ra,pt,Fa,bl,se,Na,wl,D,yt,Ba,Wa,bt,Pa,Ka,wt,Oa,El,re,Qa,_l,T,Et,Xa,ja,j,Ga,za,Ja,Va,_t,Ya,Ll,ne,Za,Il,A,Lt,$a,eo,It,to,kl,fe,lo,Cl,U,kt,io,ao,Ct,oo,so,Dt,ro,Dl,ue,no,Tl,R,Tt,fo,uo,Ut,mo,Ul,de,co,Sl,F,St,ho,vo,xt,po,xl,me,yo,Hl,N,Ht,bo,wo,gt,Eo,gl,ce,_o,ql,_,qt,Lo,Io,Mt,ko,Co,At,Do,To,Rt,Uo,Ml,he,So,Al,B,Ft,xo,Ho,Nt,go,Rl,ve,qo,Fl,W,Bt,Mo,Ao,Wt,Ro,Nl,pe,Fo,Bl,P,G,No,Bo,Wo,Po,Pt,Ko,Wl,ye,Oo,Pl,h,Kt,Qo,Xo,Ot,jo,Go,Qt,zo,Jo,Xt,Vo,Yo,jt,Zo,$o,Gt,es,Kl,be,ts,Ol,S,zt,ls,is,Jt,as,os,Vt,ss,Ql,we,rs,Xl,x,Yt,ns,fs,Zt,us,ds,$t,ms,jl,H,cs,hs,vs,ps,ys;return{c(){b=i("p"),ai=s("I recently read the "),Ue=i("em"),oi=s("The Data Warehouse Toolkit (Second Edition)"),si=s(" before embarking on a project to implement a new data warehouse."),ri=i("br"),ni=s(`
I recommend reading this book, it is clear, detailed and accessible, but here is a super succinct summary for my own benefit.`),el=n(),z=i("h4"),fi=s("Fact tables"),tl=n(),v=i("ul"),Se=i("li"),ui=s("few columns, many rows"),di=n(),J=i("li"),mi=s("always at lowest level (granular) detail"),xe=i("ul"),He=i("li"),ci=s("lowest level of detail required for business reporting, not necessarily the lowest level grain held by the source system"),hi=n(),ge=i("li"),vi=s("typically try to avoid semi-additive facts (e.g. balance)"),pi=n(),qe=i("li"),yi=s("always avoid to-date totals, not consistent with the grain"),bi=n(),V=i("li"),wi=s("try to avoid textual facts"),Me=i("ul"),Ae=i("li"),Ei=s("tend to be filtered out into a separate dimension (mini dimension)"),ll=n(),Y=i("h4"),_i=s("Factless fact tables"),il=n(),M=i("ul"),Re=i("li"),Li=s("convenient representation of many-many relationships between dimensions, even if there is no obvious numeric fact at that level"),Ii=n(),Fe=i("li"),ki=s("may wish to add artificial fact (always == 1) to clarify queries"),al=n(),Z=i("h4"),Ci=s("Coverage tables"),ol=n(),k=i("ul"),Ne=i("li"),Di=s("special form of factless fact table"),Ti=n(),Be=i("li"),Ui=s("one row per dimension Cartesian product, regardless of occupation, flag to indicate available/ in use"),Si=n(),We=i("li"),xi=s("There is a data overhead involved in doing this so it is only for special uses"),sl=n(),$=i("h4"),Hi=s("Dimension tables"),rl=n(),m=i("ul"),Pe=i("li"),gi=s("few rows, many columns"),qi=n(),Ke=i("li"),Mi=s("denormalised extensively \u2013 few rows => small impact in size compared with performance improvements"),Ai=n(),Oe=i("li"),Ri=s("Avoid snowflaking (normalising of dimensions) \u2013 will slow queries"),Fi=n(),Qe=i("li"),Ni=s("Need surrogate key (SKey) to uniquely identify a row even if a suitable business key exists, future proofing"),Bi=n(),Xe=i("li"),Wi=s("Need getSKey function for each dim (based on natural key)"),Pi=n(),je=i("li"),Ki=s("Cater for null values using a \u201C-1\u201D entry"),Oi=n(),Ge=i("li"),Qi=s("Typically expect 5-15 dimensions per dimensional model"),nl=n(),ee=i("h4"),Xi=s("Date dimension"),fl=n(),p=i("ul"),ze=i("li"),ji=s("1 row per day"),Gi=n(),Je=i("li"),zi=s("Day, week, month, quarter, year info on each line"),Ji=n(),Ve=i("li"),Vi=s("Easier filtering/ formatting than SQL date conversion functions"),Yi=n(),Ye=i("li"),Zi=s("The ONLY dimension with a meaningful key \u2013 in date order"),$i=n(),Ze=i("li"),ea=s("This predictability is important for partitioning, backups and restorations, whereby all rows relating to a date range should be partitioned together"),ul=n(),te=i("h4"),ta=s("Data Modelling Approach"),dl=n(),c=i("ul"),$e=i("li"),la=s("Separate ERD(s) into business processes & model separately"),ia=n(),et=i("li"),aa=s("Many-many tables become facts"),oa=n(),tt=i("li"),sa=s("Denormalise remaining tables \u2013 become dimensions"),ra=n(),lt=i("li"),na=s("Convert identifiers into meaningful data e.g. \u2018M\u2019 becomes \u2018Male\u2019"),fa=n(),it=i("li"),ua=s("Agree on these \u201Cconformed\u201D dimensions and seek to reuse"),da=n(),at=i("li"),ma=s("Likewise seek to use conformed facts with standard, meaningful attributes"),ml=n(),le=i("h4"),ca=s("Maintaining the DW Bus Matrix"),cl=n(),C=i("ul"),ot=i("li"),ha=s("Business process (data mart = set of closely-related fact tables) vs common dimensions. This is a very high level planning aid (p79)"),va=n(),st=i("li"),pa=s("Enables coherent vision of DW architecture"),ya=n(),rt=i("li"),ba=s("Can extend to include fact table/ granularity/ facts for full picture. This is more closely tied to the implementation phase (p321)"),hl=n(),ie=i("h4"),wa=s("Conformed dimensions"),vl=n(),w=i("ul"),nt=i("li"),Ea=s("Agreed business nomenclature to avoid redundancy and inaccuracy"),_a=n(),ft=i("li"),La=s("Common columns are identical"),Ia=n(),ut=i("li"),ka=s("1 may have extra columns e.g. confidential information"),Ca=n(),dt=i("li"),Da=s("1 may have extra rows (subset of data) \u2013be careful re. referential integrity"),pl=n(),ae=i("h4"),Ta=s("Slowly Changing Dimensions (SCD)"),yl=n(),E=i("ul"),mt=i("li"),Ua=s("Type 1 \u2013 overwrite old version \u2013 lose history"),Sa=n(),ct=i("li"),xa=s("Type 2 \u2013 create new dim row \u2013 keep history but cannot look at both together"),Ha=n(),oe=i("li"),ga=s("Type 3 \u2013 consider 2 (or 3\u2026) previous versions"),X=i("ul"),ht=i("li"),qa=s("require fact column for each version"),Ma=n(),vt=i("li"),Aa=s("can compare versions as of date X"),Ra=n(),pt=i("li"),Fa=s("Combinations of the above"),bl=n(),se=i("h4"),Na=s("Role-Playing dimensions"),wl=n(),D=i("ul"),yt=i("li"),Ba=s("When need 2 dates on a table need 2 references to Date Dim."),Wa=n(),bt=i("li"),Pa=s("Cant refer to same table twice so use views instead"),Ka=n(),wt=i("li"),Oa=s("Applicable to other dimensions but common with date dimension"),El=n(),re=i("h4"),Qa=s("Dimension Outriggers"),_l=n(),T=i("ul"),Et=i("li"),Xa=s("Constitutes normalisation of dimensions \u2013 use sparingly"),ja=n(),j=i("li"),Ga=s("Useful when dimensions of significantly differing grain and main dimension is large"),za=i("br"),Ja=s(`
e.g. customers + demographics (age, gender etc)`),Va=n(),_t=i("li"),Ya=s("Location is a valid candidate for an outrigger \u2013 can use GIS tools too"),Ll=n(),ne=i("h4"),Za=s("Degenerate dimensions"),Il=n(),A=i("ul"),Lt=i("li"),$a=s(`Number left in fact table without corresponding dim table.
Can be later expanded to a dimension if required (but use surrogate keys then!)
Can be grouped/ filtered in the meantime.`),eo=n(),It=i("li"),to=s(`If dimension contains similar numbers of rows to the fact table,
this may be a good candidate for a degenerate dimension`),kl=n(),fe=i("h4"),lo=s("Junk dimensions"),Cl=n(),U=i("ul"),kt=i("li"),io=s("Groups of typically low-cardinality flags"),ao=n(),Ct=i("li"),oo=s("may look like Cartesian product but with a surrogate key"),so=n(),Dt=i("li"),ro=s("can be used to reduce the number of columns in a fact table, potentially space-saving."),Dl=n(),ue=i("h4"),no=s("Mini dimensions"),Tl=n(),R=i("ul"),Tt=i("li"),fo=s("Separate textual fact out from fact table into mini dimension."),uo=n(),Ut=i("li"),mo=s("Enabled high-performance filtering of data"),Ul=n(),de=i("h4"),co=s("Header/Line facts with different granularity"),Sl=n(),F=i("ul"),St=i("li"),ho=s("Remove higher-level fact table by duplicating facts from the higher-level header fact row down to lower-level line fact row(s), much like dimension denormalisation"),vo=n(),xt=i("li"),po=s("Or maintain both tables at different granularity (only when necessary)"),xl=n(),me=i("h4"),yo=s("Real-Time Partitions"),Hl=n(),N=i("ul"),Ht=i("li"),bo=s("Physically & administratively separate \u201Cpartition\u201D (different tables) from the rest of the warehouse."),wo=n(),gt=i("li"),Eo=s("Contains all activity since last standard ETL run, same structure as standard DW tables."),gl=n(),ce=i("h4"),_o=s("Bridge tables (p164)"),ql=n(),_=i("ul"),qt=i("li"),Lo=s("For variable-depth hierarchies"),Io=n(),Mt=i("li"),ko=s("May contain parent skey, subsidiary skey, level, bottom flag, top flag"),Co=n(),At=i("li"),Do=s("Can create view new_fact = bridge + fact to hide complexity"),To=n(),Rt=i("li"),Uo=s("Combine with a weighting factor attribute on the bridge table, summed over the group it should always equal 1"),Ml=n(),he=i("h4"),So=s("Audit Dimension"),Al=n(),B=i("ul"),Ft=i("li"),xo=s("Source system, ETL version, confidences"),Ho=n(),Nt=i("li"),go=s("use skey to link to rows updated by that particular ETL run"),Rl=n(),ve=i("h4"),qo=s("Keyword Outrigger Dimension"),Fl=n(),W=i("ul"),Bt=i("li"),Mo=s("Attribute such as \u2019\\UNIX\\LINUX\\SQL\\\u2019 for skills for a person"),Ao=n(),Wt=i("li"),Ro=s("Can filter using LIKE \u2018%\\SQL\\%\u2019 (avoids complicated union views)"),Nl=n(),pe=i("h4"),Fo=s("Superdimension (similar to junk dimension)"),Bl=n(),P=i("ul"),G=i("li"),No=s("Combine 2 or more dimensions into a single dimension."),Bo=i("br"),Wo=s(`
This is likely to be a Cartesian product and is suitable only for small date volumes`),Po=n(),Pt=i("li"),Ko=s("E.g. flights \u2013 class flown != class purchased (up/downgrades), create superdimension with 9 rows (coach/business/first)^2"),Wl=n(),ye=i("h4"),Oo=s("Fact Dimension"),Pl=n(),h=i("ul"),Kt=i("li"),Qo=s("For sparse fact tables, i.e. groups of attributes often empty"),Xo=n(),Ot=i("li"),jo=s("separate these attribute groups into separate fact dimensions and link with surrogate key"),Go=n(),Qt=i("li"),zo=s("Allows us to keep fact table structure static, no new columns"),Jo=n(),Xt=i("li"),Vo=s("Very flexible but may expand too quickly if facts become less sparse"),Yo=n(),jt=i("li"),Zo=s("may considerably complicate data access"),$o=n(),Gt=i("li"),es=s("Type + content dimensions to handle heterogeneous products"),Kl=n(),be=i("h4"),ts=s("Late-arriving fact rows"),Ol=n(),S=i("ul"),zt=i("li"),ls=s("For each dimension establish surrogate key based on natural key (plus SCD effective dates)"),is=n(),Jt=i("li"),as=s("insert into correct physical partition based on date"),os=n(),Vt=i("li"),ss=s(`If historical data cannot change (has been reported, though inaccurate)
then may need 2 sets of dates (operational/ booking)`),Ql=n(),we=i("h4"),rs=s("Late-arriving dimension rows (applied to slowly changing dimensions)"),Xl=n(),x=i("ul"),Yt=i("li"),ns=s("Insert new row with new surrogate key"),fs=n(),Zt=i("li"),us=s("Scan forwards from this date and correct later rows with same natural key"),ds=n(),$t=i("li"),ms=s("Update all fact rows to correct surrogate key"),jl=n(),H=i("p"),cs=s("The summary of traps to avoid on P326 is well worth reading too."),hs=i("br"),vs=s(`
In order to improve performance of the ETL you can use a cyclic redundancy checksum (CRC) algorithm on dimension staging tables.`),ps=i("br"),ys=s(`
This is a more efficient way to determine if row has been updated than comparing each column.`)},l(e){b=a(e,"P",{});var u=o(b);ai=r(u,"I recently read the "),Ue=a(u,"EM",{});var Ls=o(Ue);oi=r(Ls,"The Data Warehouse Toolkit (Second Edition)"),Ls.forEach(l),si=r(u," before embarking on a project to implement a new data warehouse."),ri=a(u,"BR",{}),ni=r(u,`
I recommend reading this book, it is clear, detailed and accessible, but here is a super succinct summary for my own benefit.`),u.forEach(l),el=f(e),z=a(e,"H4",{});var Is=o(z);fi=r(Is,"Fact tables"),Is.forEach(l),tl=f(e),v=a(e,"UL",{});var g=o(v);Se=a(g,"LI",{});var ks=o(Se);ui=r(ks,"few columns, many rows"),ks.forEach(l),di=f(g),J=a(g,"LI",{});var bs=o(J);mi=r(bs,"always at lowest level (granular) detail"),xe=a(bs,"UL",{});var Cs=o(xe);He=a(Cs,"LI",{});var Ds=o(He);ci=r(Ds,"lowest level of detail required for business reporting, not necessarily the lowest level grain held by the source system"),Ds.forEach(l),Cs.forEach(l),bs.forEach(l),hi=f(g),ge=a(g,"LI",{});var Ts=o(ge);vi=r(Ts,"typically try to avoid semi-additive facts (e.g. balance)"),Ts.forEach(l),pi=f(g),qe=a(g,"LI",{});var Us=o(qe);yi=r(Us,"always avoid to-date totals, not consistent with the grain"),Us.forEach(l),bi=f(g),V=a(g,"LI",{});var ws=o(V);wi=r(ws,"try to avoid textual facts"),Me=a(ws,"UL",{});var Ss=o(Me);Ae=a(Ss,"LI",{});var xs=o(Ae);Ei=r(xs,"tend to be filtered out into a separate dimension (mini dimension)"),xs.forEach(l),Ss.forEach(l),ws.forEach(l),g.forEach(l),ll=f(e),Y=a(e,"H4",{});var Hs=o(Y);_i=r(Hs,"Factless fact tables"),Hs.forEach(l),il=f(e),M=a(e,"UL",{});var Gl=o(M);Re=a(Gl,"LI",{});var gs=o(Re);Li=r(gs,"convenient representation of many-many relationships between dimensions, even if there is no obvious numeric fact at that level"),gs.forEach(l),Ii=f(Gl),Fe=a(Gl,"LI",{});var qs=o(Fe);ki=r(qs,"may wish to add artificial fact (always == 1) to clarify queries"),qs.forEach(l),Gl.forEach(l),al=f(e),Z=a(e,"H4",{});var Ms=o(Z);Ci=r(Ms,"Coverage tables"),Ms.forEach(l),ol=f(e),k=a(e,"UL",{});var Ee=o(k);Ne=a(Ee,"LI",{});var As=o(Ne);Di=r(As,"special form of factless fact table"),As.forEach(l),Ti=f(Ee),Be=a(Ee,"LI",{});var Rs=o(Be);Ui=r(Rs,"one row per dimension Cartesian product, regardless of occupation, flag to indicate available/ in use"),Rs.forEach(l),Si=f(Ee),We=a(Ee,"LI",{});var Fs=o(We);xi=r(Fs,"There is a data overhead involved in doing this so it is only for special uses"),Fs.forEach(l),Ee.forEach(l),sl=f(e),$=a(e,"H4",{});var Ns=o($);Hi=r(Ns,"Dimension tables"),Ns.forEach(l),rl=f(e),m=a(e,"UL",{});var y=o(m);Pe=a(y,"LI",{});var Bs=o(Pe);gi=r(Bs,"few rows, many columns"),Bs.forEach(l),qi=f(y),Ke=a(y,"LI",{});var Ws=o(Ke);Mi=r(Ws,"denormalised extensively \u2013 few rows => small impact in size compared with performance improvements"),Ws.forEach(l),Ai=f(y),Oe=a(y,"LI",{});var Ps=o(Oe);Ri=r(Ps,"Avoid snowflaking (normalising of dimensions) \u2013 will slow queries"),Ps.forEach(l),Fi=f(y),Qe=a(y,"LI",{});var Ks=o(Qe);Ni=r(Ks,"Need surrogate key (SKey) to uniquely identify a row even if a suitable business key exists, future proofing"),Ks.forEach(l),Bi=f(y),Xe=a(y,"LI",{});var Os=o(Xe);Wi=r(Os,"Need getSKey function for each dim (based on natural key)"),Os.forEach(l),Pi=f(y),je=a(y,"LI",{});var Qs=o(je);Ki=r(Qs,"Cater for null values using a \u201C-1\u201D entry"),Qs.forEach(l),Oi=f(y),Ge=a(y,"LI",{});var Xs=o(Ge);Qi=r(Xs,"Typically expect 5-15 dimensions per dimensional model"),Xs.forEach(l),y.forEach(l),nl=f(e),ee=a(e,"H4",{});var js=o(ee);Xi=r(js,"Date dimension"),js.forEach(l),fl=f(e),p=a(e,"UL",{});var q=o(p);ze=a(q,"LI",{});var Gs=o(ze);ji=r(Gs,"1 row per day"),Gs.forEach(l),Gi=f(q),Je=a(q,"LI",{});var zs=o(Je);zi=r(zs,"Day, week, month, quarter, year info on each line"),zs.forEach(l),Ji=f(q),Ve=a(q,"LI",{});var Js=o(Ve);Vi=r(Js,"Easier filtering/ formatting than SQL date conversion functions"),Js.forEach(l),Yi=f(q),Ye=a(q,"LI",{});var Vs=o(Ye);Zi=r(Vs,"The ONLY dimension with a meaningful key \u2013 in date order"),Vs.forEach(l),$i=f(q),Ze=a(q,"LI",{});var Ys=o(Ze);ea=r(Ys,"This predictability is important for partitioning, backups and restorations, whereby all rows relating to a date range should be partitioned together"),Ys.forEach(l),q.forEach(l),ul=f(e),te=a(e,"H4",{});var Zs=o(te);ta=r(Zs,"Data Modelling Approach"),Zs.forEach(l),dl=f(e),c=a(e,"UL",{});var L=o(c);$e=a(L,"LI",{});var $s=o($e);la=r($s,"Separate ERD(s) into business processes & model separately"),$s.forEach(l),ia=f(L),et=a(L,"LI",{});var er=o(et);aa=r(er,"Many-many tables become facts"),er.forEach(l),oa=f(L),tt=a(L,"LI",{});var tr=o(tt);sa=r(tr,"Denormalise remaining tables \u2013 become dimensions"),tr.forEach(l),ra=f(L),lt=a(L,"LI",{});var lr=o(lt);na=r(lr,"Convert identifiers into meaningful data e.g. \u2018M\u2019 becomes \u2018Male\u2019"),lr.forEach(l),fa=f(L),it=a(L,"LI",{});var ir=o(it);ua=r(ir,"Agree on these \u201Cconformed\u201D dimensions and seek to reuse"),ir.forEach(l),da=f(L),at=a(L,"LI",{});var ar=o(at);ma=r(ar,"Likewise seek to use conformed facts with standard, meaningful attributes"),ar.forEach(l),L.forEach(l),ml=f(e),le=a(e,"H4",{});var or=o(le);ca=r(or,"Maintaining the DW Bus Matrix"),or.forEach(l),cl=f(e),C=a(e,"UL",{});var _e=o(C);ot=a(_e,"LI",{});var sr=o(ot);ha=r(sr,"Business process (data mart = set of closely-related fact tables) vs common dimensions. This is a very high level planning aid (p79)"),sr.forEach(l),va=f(_e),st=a(_e,"LI",{});var rr=o(st);pa=r(rr,"Enables coherent vision of DW architecture"),rr.forEach(l),ya=f(_e),rt=a(_e,"LI",{});var nr=o(rt);ba=r(nr,"Can extend to include fact table/ granularity/ facts for full picture. This is more closely tied to the implementation phase (p321)"),nr.forEach(l),_e.forEach(l),hl=f(e),ie=a(e,"H4",{});var fr=o(ie);wa=r(fr,"Conformed dimensions"),fr.forEach(l),vl=f(e),w=a(e,"UL",{});var K=o(w);nt=a(K,"LI",{});var ur=o(nt);Ea=r(ur,"Agreed business nomenclature to avoid redundancy and inaccuracy"),ur.forEach(l),_a=f(K),ft=a(K,"LI",{});var dr=o(ft);La=r(dr,"Common columns are identical"),dr.forEach(l),Ia=f(K),ut=a(K,"LI",{});var mr=o(ut);ka=r(mr,"1 may have extra columns e.g. confidential information"),mr.forEach(l),Ca=f(K),dt=a(K,"LI",{});var cr=o(dt);Da=r(cr,"1 may have extra rows (subset of data) \u2013be careful re. referential integrity"),cr.forEach(l),K.forEach(l),pl=f(e),ae=a(e,"H4",{});var hr=o(ae);Ta=r(hr,"Slowly Changing Dimensions (SCD)"),hr.forEach(l),yl=f(e),E=a(e,"UL",{});var O=o(E);mt=a(O,"LI",{});var vr=o(mt);Ua=r(vr,"Type 1 \u2013 overwrite old version \u2013 lose history"),vr.forEach(l),Sa=f(O),ct=a(O,"LI",{});var pr=o(ct);xa=r(pr,"Type 2 \u2013 create new dim row \u2013 keep history but cannot look at both together"),pr.forEach(l),Ha=f(O),oe=a(O,"LI",{});var Es=o(oe);ga=r(Es,"Type 3 \u2013 consider 2 (or 3\u2026) previous versions"),X=a(Es,"UL",{});var zl=o(X);ht=a(zl,"LI",{});var yr=o(ht);qa=r(yr,"require fact column for each version"),yr.forEach(l),Ma=f(zl),vt=a(zl,"LI",{});var br=o(vt);Aa=r(br,"can compare versions as of date X"),br.forEach(l),zl.forEach(l),Es.forEach(l),Ra=f(O),pt=a(O,"LI",{});var wr=o(pt);Fa=r(wr,"Combinations of the above"),wr.forEach(l),O.forEach(l),bl=f(e),se=a(e,"H4",{});var Er=o(se);Na=r(Er,"Role-Playing dimensions"),Er.forEach(l),wl=f(e),D=a(e,"UL",{});var Le=o(D);yt=a(Le,"LI",{});var _r=o(yt);Ba=r(_r,"When need 2 dates on a table need 2 references to Date Dim."),_r.forEach(l),Wa=f(Le),bt=a(Le,"LI",{});var Lr=o(bt);Pa=r(Lr,"Cant refer to same table twice so use views instead"),Lr.forEach(l),Ka=f(Le),wt=a(Le,"LI",{});var Ir=o(wt);Oa=r(Ir,"Applicable to other dimensions but common with date dimension"),Ir.forEach(l),Le.forEach(l),El=f(e),re=a(e,"H4",{});var kr=o(re);Qa=r(kr,"Dimension Outriggers"),kr.forEach(l),_l=f(e),T=a(e,"UL",{});var Ie=o(T);Et=a(Ie,"LI",{});var Cr=o(Et);Xa=r(Cr,"Constitutes normalisation of dimensions \u2013 use sparingly"),Cr.forEach(l),ja=f(Ie),j=a(Ie,"LI",{});var Jl=o(j);Ga=r(Jl,"Useful when dimensions of significantly differing grain and main dimension is large"),za=a(Jl,"BR",{}),Ja=r(Jl,`
e.g. customers + demographics (age, gender etc)`),Jl.forEach(l),Va=f(Ie),_t=a(Ie,"LI",{});var Dr=o(_t);Ya=r(Dr,"Location is a valid candidate for an outrigger \u2013 can use GIS tools too"),Dr.forEach(l),Ie.forEach(l),Ll=f(e),ne=a(e,"H4",{});var Tr=o(ne);Za=r(Tr,"Degenerate dimensions"),Tr.forEach(l),Il=f(e),A=a(e,"UL",{});var Vl=o(A);Lt=a(Vl,"LI",{});var Ur=o(Lt);$a=r(Ur,`Number left in fact table without corresponding dim table.
Can be later expanded to a dimension if required (but use surrogate keys then!)
Can be grouped/ filtered in the meantime.`),Ur.forEach(l),eo=f(Vl),It=a(Vl,"LI",{});var Sr=o(It);to=r(Sr,`If dimension contains similar numbers of rows to the fact table,
this may be a good candidate for a degenerate dimension`),Sr.forEach(l),Vl.forEach(l),kl=f(e),fe=a(e,"H4",{});var xr=o(fe);lo=r(xr,"Junk dimensions"),xr.forEach(l),Cl=f(e),U=a(e,"UL",{});var ke=o(U);kt=a(ke,"LI",{});var Hr=o(kt);io=r(Hr,"Groups of typically low-cardinality flags"),Hr.forEach(l),ao=f(ke),Ct=a(ke,"LI",{});var gr=o(Ct);oo=r(gr,"may look like Cartesian product but with a surrogate key"),gr.forEach(l),so=f(ke),Dt=a(ke,"LI",{});var qr=o(Dt);ro=r(qr,"can be used to reduce the number of columns in a fact table, potentially space-saving."),qr.forEach(l),ke.forEach(l),Dl=f(e),ue=a(e,"H4",{});var Mr=o(ue);no=r(Mr,"Mini dimensions"),Mr.forEach(l),Tl=f(e),R=a(e,"UL",{});var Yl=o(R);Tt=a(Yl,"LI",{});var Ar=o(Tt);fo=r(Ar,"Separate textual fact out from fact table into mini dimension."),Ar.forEach(l),uo=f(Yl),Ut=a(Yl,"LI",{});var Rr=o(Ut);mo=r(Rr,"Enabled high-performance filtering of data"),Rr.forEach(l),Yl.forEach(l),Ul=f(e),de=a(e,"H4",{});var Fr=o(de);co=r(Fr,"Header/Line facts with different granularity"),Fr.forEach(l),Sl=f(e),F=a(e,"UL",{});var Zl=o(F);St=a(Zl,"LI",{});var Nr=o(St);ho=r(Nr,"Remove higher-level fact table by duplicating facts from the higher-level header fact row down to lower-level line fact row(s), much like dimension denormalisation"),Nr.forEach(l),vo=f(Zl),xt=a(Zl,"LI",{});var Br=o(xt);po=r(Br,"Or maintain both tables at different granularity (only when necessary)"),Br.forEach(l),Zl.forEach(l),xl=f(e),me=a(e,"H4",{});var Wr=o(me);yo=r(Wr,"Real-Time Partitions"),Wr.forEach(l),Hl=f(e),N=a(e,"UL",{});var $l=o(N);Ht=a($l,"LI",{});var Pr=o(Ht);bo=r(Pr,"Physically & administratively separate \u201Cpartition\u201D (different tables) from the rest of the warehouse."),Pr.forEach(l),wo=f($l),gt=a($l,"LI",{});var Kr=o(gt);Eo=r(Kr,"Contains all activity since last standard ETL run, same structure as standard DW tables."),Kr.forEach(l),$l.forEach(l),gl=f(e),ce=a(e,"H4",{});var Or=o(ce);_o=r(Or,"Bridge tables (p164)"),Or.forEach(l),ql=f(e),_=a(e,"UL",{});var Q=o(_);qt=a(Q,"LI",{});var Qr=o(qt);Lo=r(Qr,"For variable-depth hierarchies"),Qr.forEach(l),Io=f(Q),Mt=a(Q,"LI",{});var Xr=o(Mt);ko=r(Xr,"May contain parent skey, subsidiary skey, level, bottom flag, top flag"),Xr.forEach(l),Co=f(Q),At=a(Q,"LI",{});var jr=o(At);Do=r(jr,"Can create view new_fact = bridge + fact to hide complexity"),jr.forEach(l),To=f(Q),Rt=a(Q,"LI",{});var Gr=o(Rt);Uo=r(Gr,"Combine with a weighting factor attribute on the bridge table, summed over the group it should always equal 1"),Gr.forEach(l),Q.forEach(l),Ml=f(e),he=a(e,"H4",{});var zr=o(he);So=r(zr,"Audit Dimension"),zr.forEach(l),Al=f(e),B=a(e,"UL",{});var ei=o(B);Ft=a(ei,"LI",{});var Jr=o(Ft);xo=r(Jr,"Source system, ETL version, confidences"),Jr.forEach(l),Ho=f(ei),Nt=a(ei,"LI",{});var Vr=o(Nt);go=r(Vr,"use skey to link to rows updated by that particular ETL run"),Vr.forEach(l),ei.forEach(l),Rl=f(e),ve=a(e,"H4",{});var Yr=o(ve);qo=r(Yr,"Keyword Outrigger Dimension"),Yr.forEach(l),Fl=f(e),W=a(e,"UL",{});var ti=o(W);Bt=a(ti,"LI",{});var Zr=o(Bt);Mo=r(Zr,"Attribute such as \u2019\\UNIX\\LINUX\\SQL\\\u2019 for skills for a person"),Zr.forEach(l),Ao=f(ti),Wt=a(ti,"LI",{});var $r=o(Wt);Ro=r($r,"Can filter using LIKE \u2018%\\SQL\\%\u2019 (avoids complicated union views)"),$r.forEach(l),ti.forEach(l),Nl=f(e),pe=a(e,"H4",{});var en=o(pe);Fo=r(en,"Superdimension (similar to junk dimension)"),en.forEach(l),Bl=f(e),P=a(e,"UL",{});var li=o(P);G=a(li,"LI",{});var ii=o(G);No=r(ii,"Combine 2 or more dimensions into a single dimension."),Bo=a(ii,"BR",{}),Wo=r(ii,`
This is likely to be a Cartesian product and is suitable only for small date volumes`),ii.forEach(l),Po=f(li),Pt=a(li,"LI",{});var tn=o(Pt);Ko=r(tn,"E.g. flights \u2013 class flown != class purchased (up/downgrades), create superdimension with 9 rows (coach/business/first)^2"),tn.forEach(l),li.forEach(l),Wl=f(e),ye=a(e,"H4",{});var ln=o(ye);Oo=r(ln,"Fact Dimension"),ln.forEach(l),Pl=f(e),h=a(e,"UL",{});var I=o(h);Kt=a(I,"LI",{});var an=o(Kt);Qo=r(an,"For sparse fact tables, i.e. groups of attributes often empty"),an.forEach(l),Xo=f(I),Ot=a(I,"LI",{});var on=o(Ot);jo=r(on,"separate these attribute groups into separate fact dimensions and link with surrogate key"),on.forEach(l),Go=f(I),Qt=a(I,"LI",{});var sn=o(Qt);zo=r(sn,"Allows us to keep fact table structure static, no new columns"),sn.forEach(l),Jo=f(I),Xt=a(I,"LI",{});var rn=o(Xt);Vo=r(rn,"Very flexible but may expand too quickly if facts become less sparse"),rn.forEach(l),Yo=f(I),jt=a(I,"LI",{});var nn=o(jt);Zo=r(nn,"may considerably complicate data access"),nn.forEach(l),$o=f(I),Gt=a(I,"LI",{});var fn=o(Gt);es=r(fn,"Type + content dimensions to handle heterogeneous products"),fn.forEach(l),I.forEach(l),Kl=f(e),be=a(e,"H4",{});var un=o(be);ts=r(un,"Late-arriving fact rows"),un.forEach(l),Ol=f(e),S=a(e,"UL",{});var Ce=o(S);zt=a(Ce,"LI",{});var dn=o(zt);ls=r(dn,"For each dimension establish surrogate key based on natural key (plus SCD effective dates)"),dn.forEach(l),is=f(Ce),Jt=a(Ce,"LI",{});var mn=o(Jt);as=r(mn,"insert into correct physical partition based on date"),mn.forEach(l),os=f(Ce),Vt=a(Ce,"LI",{});var cn=o(Vt);ss=r(cn,`If historical data cannot change (has been reported, though inaccurate)
then may need 2 sets of dates (operational/ booking)`),cn.forEach(l),Ce.forEach(l),Ql=f(e),we=a(e,"H4",{});var hn=o(we);rs=r(hn,"Late-arriving dimension rows (applied to slowly changing dimensions)"),hn.forEach(l),Xl=f(e),x=a(e,"UL",{});var De=o(x);Yt=a(De,"LI",{});var vn=o(Yt);ns=r(vn,"Insert new row with new surrogate key"),vn.forEach(l),fs=f(De),Zt=a(De,"LI",{});var pn=o(Zt);us=r(pn,"Scan forwards from this date and correct later rows with same natural key"),pn.forEach(l),ds=f(De),$t=a(De,"LI",{});var yn=o($t);ms=r(yn,"Update all fact rows to correct surrogate key"),yn.forEach(l),De.forEach(l),jl=f(e),H=a(e,"P",{});var Te=o(H);cs=r(Te,"The summary of traps to avoid on P326 is well worth reading too."),hs=a(Te,"BR",{}),vs=r(Te,`
In order to improve performance of the ETL you can use a cyclic redundancy checksum (CRC) algorithm on dimension staging tables.`),ps=a(Te,"BR",{}),ys=r(Te,`
This is a more efficient way to determine if row has been updated than comparing each column.`),Te.forEach(l)},m(e,u){d(e,b,u),t(b,ai),t(b,Ue),t(Ue,oi),t(b,si),t(b,ri),t(b,ni),d(e,el,u),d(e,z,u),t(z,fi),d(e,tl,u),d(e,v,u),t(v,Se),t(Se,ui),t(v,di),t(v,J),t(J,mi),t(J,xe),t(xe,He),t(He,ci),t(v,hi),t(v,ge),t(ge,vi),t(v,pi),t(v,qe),t(qe,yi),t(v,bi),t(v,V),t(V,wi),t(V,Me),t(Me,Ae),t(Ae,Ei),d(e,ll,u),d(e,Y,u),t(Y,_i),d(e,il,u),d(e,M,u),t(M,Re),t(Re,Li),t(M,Ii),t(M,Fe),t(Fe,ki),d(e,al,u),d(e,Z,u),t(Z,Ci),d(e,ol,u),d(e,k,u),t(k,Ne),t(Ne,Di),t(k,Ti),t(k,Be),t(Be,Ui),t(k,Si),t(k,We),t(We,xi),d(e,sl,u),d(e,$,u),t($,Hi),d(e,rl,u),d(e,m,u),t(m,Pe),t(Pe,gi),t(m,qi),t(m,Ke),t(Ke,Mi),t(m,Ai),t(m,Oe),t(Oe,Ri),t(m,Fi),t(m,Qe),t(Qe,Ni),t(m,Bi),t(m,Xe),t(Xe,Wi),t(m,Pi),t(m,je),t(je,Ki),t(m,Oi),t(m,Ge),t(Ge,Qi),d(e,nl,u),d(e,ee,u),t(ee,Xi),d(e,fl,u),d(e,p,u),t(p,ze),t(ze,ji),t(p,Gi),t(p,Je),t(Je,zi),t(p,Ji),t(p,Ve),t(Ve,Vi),t(p,Yi),t(p,Ye),t(Ye,Zi),t(p,$i),t(p,Ze),t(Ze,ea),d(e,ul,u),d(e,te,u),t(te,ta),d(e,dl,u),d(e,c,u),t(c,$e),t($e,la),t(c,ia),t(c,et),t(et,aa),t(c,oa),t(c,tt),t(tt,sa),t(c,ra),t(c,lt),t(lt,na),t(c,fa),t(c,it),t(it,ua),t(c,da),t(c,at),t(at,ma),d(e,ml,u),d(e,le,u),t(le,ca),d(e,cl,u),d(e,C,u),t(C,ot),t(ot,ha),t(C,va),t(C,st),t(st,pa),t(C,ya),t(C,rt),t(rt,ba),d(e,hl,u),d(e,ie,u),t(ie,wa),d(e,vl,u),d(e,w,u),t(w,nt),t(nt,Ea),t(w,_a),t(w,ft),t(ft,La),t(w,Ia),t(w,ut),t(ut,ka),t(w,Ca),t(w,dt),t(dt,Da),d(e,pl,u),d(e,ae,u),t(ae,Ta),d(e,yl,u),d(e,E,u),t(E,mt),t(mt,Ua),t(E,Sa),t(E,ct),t(ct,xa),t(E,Ha),t(E,oe),t(oe,ga),t(oe,X),t(X,ht),t(ht,qa),t(X,Ma),t(X,vt),t(vt,Aa),t(E,Ra),t(E,pt),t(pt,Fa),d(e,bl,u),d(e,se,u),t(se,Na),d(e,wl,u),d(e,D,u),t(D,yt),t(yt,Ba),t(D,Wa),t(D,bt),t(bt,Pa),t(D,Ka),t(D,wt),t(wt,Oa),d(e,El,u),d(e,re,u),t(re,Qa),d(e,_l,u),d(e,T,u),t(T,Et),t(Et,Xa),t(T,ja),t(T,j),t(j,Ga),t(j,za),t(j,Ja),t(T,Va),t(T,_t),t(_t,Ya),d(e,Ll,u),d(e,ne,u),t(ne,Za),d(e,Il,u),d(e,A,u),t(A,Lt),t(Lt,$a),t(A,eo),t(A,It),t(It,to),d(e,kl,u),d(e,fe,u),t(fe,lo),d(e,Cl,u),d(e,U,u),t(U,kt),t(kt,io),t(U,ao),t(U,Ct),t(Ct,oo),t(U,so),t(U,Dt),t(Dt,ro),d(e,Dl,u),d(e,ue,u),t(ue,no),d(e,Tl,u),d(e,R,u),t(R,Tt),t(Tt,fo),t(R,uo),t(R,Ut),t(Ut,mo),d(e,Ul,u),d(e,de,u),t(de,co),d(e,Sl,u),d(e,F,u),t(F,St),t(St,ho),t(F,vo),t(F,xt),t(xt,po),d(e,xl,u),d(e,me,u),t(me,yo),d(e,Hl,u),d(e,N,u),t(N,Ht),t(Ht,bo),t(N,wo),t(N,gt),t(gt,Eo),d(e,gl,u),d(e,ce,u),t(ce,_o),d(e,ql,u),d(e,_,u),t(_,qt),t(qt,Lo),t(_,Io),t(_,Mt),t(Mt,ko),t(_,Co),t(_,At),t(At,Do),t(_,To),t(_,Rt),t(Rt,Uo),d(e,Ml,u),d(e,he,u),t(he,So),d(e,Al,u),d(e,B,u),t(B,Ft),t(Ft,xo),t(B,Ho),t(B,Nt),t(Nt,go),d(e,Rl,u),d(e,ve,u),t(ve,qo),d(e,Fl,u),d(e,W,u),t(W,Bt),t(Bt,Mo),t(W,Ao),t(W,Wt),t(Wt,Ro),d(e,Nl,u),d(e,pe,u),t(pe,Fo),d(e,Bl,u),d(e,P,u),t(P,G),t(G,No),t(G,Bo),t(G,Wo),t(P,Po),t(P,Pt),t(Pt,Ko),d(e,Wl,u),d(e,ye,u),t(ye,Oo),d(e,Pl,u),d(e,h,u),t(h,Kt),t(Kt,Qo),t(h,Xo),t(h,Ot),t(Ot,jo),t(h,Go),t(h,Qt),t(Qt,zo),t(h,Jo),t(h,Xt),t(Xt,Vo),t(h,Yo),t(h,jt),t(jt,Zo),t(h,$o),t(h,Gt),t(Gt,es),d(e,Kl,u),d(e,be,u),t(be,ts),d(e,Ol,u),d(e,S,u),t(S,zt),t(zt,ls),t(S,is),t(S,Jt),t(Jt,as),t(S,os),t(S,Vt),t(Vt,ss),d(e,Ql,u),d(e,we,u),t(we,rs),d(e,Xl,u),d(e,x,u),t(x,Yt),t(Yt,ns),t(x,fs),t(x,Zt),t(Zt,us),t(x,ds),t(x,$t),t($t,ms),d(e,jl,u),d(e,H,u),t(H,cs),t(H,hs),t(H,vs),t(H,ps),t(H,ys)},p:_s,i:_s,o:_s,d(e){e&&l(b),e&&l(el),e&&l(z),e&&l(tl),e&&l(v),e&&l(ll),e&&l(Y),e&&l(il),e&&l(M),e&&l(al),e&&l(Z),e&&l(ol),e&&l(k),e&&l(sl),e&&l($),e&&l(rl),e&&l(m),e&&l(nl),e&&l(ee),e&&l(fl),e&&l(p),e&&l(ul),e&&l(te),e&&l(dl),e&&l(c),e&&l(ml),e&&l(le),e&&l(cl),e&&l(C),e&&l(hl),e&&l(ie),e&&l(vl),e&&l(w),e&&l(pl),e&&l(ae),e&&l(yl),e&&l(E),e&&l(bl),e&&l(se),e&&l(wl),e&&l(D),e&&l(El),e&&l(re),e&&l(_l),e&&l(T),e&&l(Ll),e&&l(ne),e&&l(Il),e&&l(A),e&&l(kl),e&&l(fe),e&&l(Cl),e&&l(U),e&&l(Dl),e&&l(ue),e&&l(Tl),e&&l(R),e&&l(Ul),e&&l(de),e&&l(Sl),e&&l(F),e&&l(xl),e&&l(me),e&&l(Hl),e&&l(N),e&&l(gl),e&&l(ce),e&&l(ql),e&&l(_),e&&l(Ml),e&&l(he),e&&l(Al),e&&l(B),e&&l(Rl),e&&l(ve),e&&l(Fl),e&&l(W),e&&l(Nl),e&&l(pe),e&&l(Bl),e&&l(P),e&&l(Wl),e&&l(ye),e&&l(Pl),e&&l(h),e&&l(Kl),e&&l(be),e&&l(Ol),e&&l(S),e&&l(Ql),e&&l(we),e&&l(Xl),e&&l(x),e&&l(jl),e&&l(H)}}}class kn extends wn{constructor(b){super(),En(this,b,null,Ln,_n,{})}}export{kn as default};
