import{S as st,i as ot,s as it,e as r,t as o,k as f,c as a,a as l,h as i,d as t,m as p,b as j,g as h,F as s,G as Ve}from"../../../../../chunks/vendor-7ab0699c.js";function nt(tt){let u,se,k,g,oe,q,I,ie,G,A,ne,L,c,re,H,ae,le,X,he,fe,C,pe,ce,U,D,de,W,m,z,ue,me,P,ve,N,we,Y,v,ye,_,Ee,be,$,M,_e,B,d,Te,V,Oe,ge,x,Ie,Ae,F,De,Pe,J,S,Me,K,w,Se,T,je,He,Q,y,Xe,O,Ce,ze;return{c(){u=r("h1"),se=o("Sharing environments between projects in Azure DevOps"),k=f(),g=r("p"),oe=o("This is useful for multiple websites held in different projects hosted in the same IIS instance on the same server(s).  Alternatively, for microservices hosted on a Virtual Machine, if deployed independently."),q=f(),I=r("h2"),ie=o("The issue"),G=f(),A=r("p"),ne=o("Azure DevOps generates the script for you to install a build/release agent on a server, within the Environments tab of the Pipelines section of the Project."),L=f(),c=r("p"),re=o(`This works fine, the first time.
You can view the results of this in the DevOps portal `),H=r("code"),ae=o("https://dev.azure.com/<Team>/_settings/deploymentPools"),le=o(`.
The default names for Deployment Groups (used by releases) is `),X=r("code"),he=o("<Project>-<Environment>"),fe=o(`.
The default names for Environments (used by pipelines) is `),C=r("code"),pe=o("environment-<environment-id>-<guid>"),ce=o(`.
These names can be changed to aid ongoing maintenance.`),U=f(),D=r("p"),de=o("If you try to create a second agent on the same VM, in the same way, it will do one of 2 things:"),W=f(),m=r("ul"),z=r("li"),ue=o("Overwrite the first, meaning that any pipelines which reference this will cease to function"),me=f(),P=r("li"),ve=o(`Fail to create since it can\u2019t delete the first agent.
In this case the second agent always shows as offline and the new pipeline won\u2019t run.
`),N=r("code"),we=o("Unable to deploy to the virtual machine 'XXX' as the machine is offline"),Y=f(),v=r("p"),ye=o("Others have reported "),_=r("a"),Ee=o("this issue"),be=o(" and provided an alternative script.  I am not comfortable just running scripts from the web, I prefer a future proof understanding of the problem."),$=f(),M=r("h2"),_e=o("The solution"),B=f(),d=r("p"),Te=o(`The reason for this issue is that the script generates an agent with a name matching the VM by default.
The DevOps-generated script is one-lined but otherwise not hard to dissect.
In the line which calls `),V=r("code"),Oe=o("config"),ge=o(" we need to change the "),x=r("code"),Ie=o("agent"),Ae=o(" parameter to something unique, either by appending the agent folder ("),F=r("code"),De=o("$destFolder"),Pe=o(" in the script), e.g. HOSTNAME-A3, or with something which indicates the purpose of this agent, e.g. HOSTNAME-ServiceX or HOSTNAME-WebsiteX, in which case we should probably update the script to create a folder name to match this."),J=f(),S=r("h2"),Me=o("The future"),K=f(),w=r("p"),Se=o("A "),T=r("a"),je=o("proposal"),He=o(" has been made to Microsoft to allow environment sharing but doesn\u2019t seem active."),Q=f(),y=r("p"),Xe=o("Interestingly this was "),O=r("a"),Ce=o("resolved"),ze=o(" in the past for deployment groups, which are used by releases (as opposed to pipelines), so I\u2019d assume that this will come eventually."),this.h()},l(e){u=a(e,"H1",{});var n=l(u);se=i(n,"Sharing environments between projects in Azure DevOps"),n.forEach(t),k=p(e),g=a(e,"P",{});var xe=l(g);oe=i(xe,"This is useful for multiple websites held in different projects hosted in the same IIS instance on the same server(s).  Alternatively, for microservices hosted on a Virtual Machine, if deployed independently."),xe.forEach(t),q=p(e),I=a(e,"H2",{});var Fe=l(I);ie=i(Fe,"The issue"),Fe.forEach(t),G=p(e),A=a(e,"P",{});var ke=l(A);ne=i(ke,"Azure DevOps generates the script for you to install a build/release agent on a server, within the Environments tab of the Pipelines section of the Project."),ke.forEach(t),L=p(e),c=a(e,"P",{});var E=l(c);re=i(E,`This works fine, the first time.
You can view the results of this in the DevOps portal `),H=a(E,"CODE",{});var qe=l(H);ae=i(qe,"https://dev.azure.com/<Team>/_settings/deploymentPools"),qe.forEach(t),le=i(E,`.
The default names for Deployment Groups (used by releases) is `),X=a(E,"CODE",{});var Ge=l(X);he=i(Ge,"<Project>-<Environment>"),Ge.forEach(t),fe=i(E,`.
The default names for Environments (used by pipelines) is `),C=a(E,"CODE",{});var Le=l(C);pe=i(Le,"environment-<environment-id>-<guid>"),Le.forEach(t),ce=i(E,`.
These names can be changed to aid ongoing maintenance.`),E.forEach(t),U=p(e),D=a(e,"P",{});var Ue=l(D);de=i(Ue,"If you try to create a second agent on the same VM, in the same way, it will do one of 2 things:"),Ue.forEach(t),W=p(e),m=a(e,"UL",{});var R=l(m);z=a(R,"LI",{});var We=l(z);ue=i(We,"Overwrite the first, meaning that any pipelines which reference this will cease to function"),We.forEach(t),me=p(R),P=a(R,"LI",{});var Ne=l(P);ve=i(Ne,`Fail to create since it can\u2019t delete the first agent.
In this case the second agent always shows as offline and the new pipeline won\u2019t run.
`),N=a(Ne,"CODE",{});var Ye=l(N);we=i(Ye,"Unable to deploy to the virtual machine 'XXX' as the machine is offline"),Ye.forEach(t),Ne.forEach(t),R.forEach(t),Y=p(e),v=a(e,"P",{});var Z=l(v);ye=i(Z,"Others have reported "),_=a(Z,"A",{href:!0,rel:!0});var $e=l(_);Ee=i($e,"this issue"),$e.forEach(t),be=i(Z," and provided an alternative script.  I am not comfortable just running scripts from the web, I prefer a future proof understanding of the problem."),Z.forEach(t),$=p(e),M=a(e,"H2",{});var Be=l(M);_e=i(Be,"The solution"),Be.forEach(t),B=p(e),d=a(e,"P",{});var b=l(d);Te=i(b,`The reason for this issue is that the script generates an agent with a name matching the VM by default.
The DevOps-generated script is one-lined but otherwise not hard to dissect.
In the line which calls `),V=a(b,"CODE",{});var Je=l(V);Oe=i(Je,"config"),Je.forEach(t),ge=i(b," we need to change the "),x=a(b,"CODE",{});var Ke=l(x);Ie=i(Ke,"agent"),Ke.forEach(t),Ae=i(b," parameter to something unique, either by appending the agent folder ("),F=a(b,"CODE",{});var Qe=l(F);De=i(Qe,"$destFolder"),Qe.forEach(t),Pe=i(b," in the script), e.g. HOSTNAME-A3, or with something which indicates the purpose of this agent, e.g. HOSTNAME-ServiceX or HOSTNAME-WebsiteX, in which case we should probably update the script to create a folder name to match this."),b.forEach(t),J=p(e),S=a(e,"H2",{});var Re=l(S);Me=i(Re,"The future"),Re.forEach(t),K=p(e),w=a(e,"P",{});var ee=l(w);Se=i(ee,"A "),T=a(ee,"A",{href:!0,rel:!0});var Ze=l(T);je=i(Ze,"proposal"),Ze.forEach(t),He=i(ee," has been made to Microsoft to allow environment sharing but doesn\u2019t seem active."),ee.forEach(t),Q=p(e),y=a(e,"P",{});var te=l(y);Xe=i(te,"Interestingly this was "),O=a(te,"A",{href:!0,rel:!0});var et=l(O);Ce=i(et,"resolved"),et.forEach(t),ze=i(te," in the past for deployment groups, which are used by releases (as opposed to pipelines), so I\u2019d assume that this will come eventually."),te.forEach(t),this.h()},h(){j(_,"href","https://github.com/MicrosoftDocs/azure-devops-docs/issues/8578"),j(_,"rel","nofollow"),j(T,"href","https://developercommunity.visualstudio.com/t/can-environments-be-shared-across-team-projects/676255"),j(T,"rel","nofollow"),j(O,"href","https://devblogs.microsoft.com/devops/sharing-of-deployment-groups-across-projects/"),j(O,"rel","nofollow")},m(e,n){h(e,u,n),s(u,se),h(e,k,n),h(e,g,n),s(g,oe),h(e,q,n),h(e,I,n),s(I,ie),h(e,G,n),h(e,A,n),s(A,ne),h(e,L,n),h(e,c,n),s(c,re),s(c,H),s(H,ae),s(c,le),s(c,X),s(X,he),s(c,fe),s(c,C),s(C,pe),s(c,ce),h(e,U,n),h(e,D,n),s(D,de),h(e,W,n),h(e,m,n),s(m,z),s(z,ue),s(m,me),s(m,P),s(P,ve),s(P,N),s(N,we),h(e,Y,n),h(e,v,n),s(v,ye),s(v,_),s(_,Ee),s(v,be),h(e,$,n),h(e,M,n),s(M,_e),h(e,B,n),h(e,d,n),s(d,Te),s(d,V),s(V,Oe),s(d,ge),s(d,x),s(x,Ie),s(d,Ae),s(d,F),s(F,De),s(d,Pe),h(e,J,n),h(e,S,n),s(S,Me),h(e,K,n),h(e,w,n),s(w,Se),s(w,T),s(T,je),s(w,He),h(e,Q,n),h(e,y,n),s(y,Xe),s(y,O),s(O,Ce),s(y,ze)},p:Ve,i:Ve,o:Ve,d(e){e&&t(u),e&&t(k),e&&t(g),e&&t(q),e&&t(I),e&&t(G),e&&t(A),e&&t(L),e&&t(c),e&&t(U),e&&t(D),e&&t(W),e&&t(m),e&&t(Y),e&&t(v),e&&t($),e&&t(M),e&&t(B),e&&t(d),e&&t(J),e&&t(S),e&&t(K),e&&t(w),e&&t(Q),e&&t(y)}}}class at extends st{constructor(u){super();ot(this,u,null,nt,it,{})}}export{at as default};
