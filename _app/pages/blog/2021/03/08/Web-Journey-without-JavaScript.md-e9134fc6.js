import{S as In,i as Wn,s as qn,e as s,t as l,k as r,c as n,a as o,h as i,d as a,m as p,b as ys,g as d,F as e,G as ws}from"../../../../../chunks/vendor-7ab0699c.js";function Dn(Tn){let T,St,Oe,Q,gt,Ve,F,Tt,Ge,N,At,Ye,A,C,Lt,se,It,Wt,qt,ne,Dt,ze,O,Jt,Ke,V,xt,Ze,L,Pt,B,Mt,Rt,$e,G,Ht,et,u,oe,jt,Ct,le,Bt,Xt,ie,Ut,Qt,re,Ft,Nt,tt,at,Y,Ot,st,z,Vt,nt,I,pe,v,ce,Gt,Yt,de,zt,Kt,ue,Zt,$t,he,ea,ta,h,b,fe,aa,sa,me,na,oa,ve,la,ia,be,ra,pa,k,ke,ca,da,ye,ua,ha,we,fa,ma,_e,va,ba,y,Ee,ka,ya,Se,wa,_a,ge,Ea,Sa,Te,ga,Ta,w,Ae,Aa,La,Le,Ia,Wa,Ie,qa,Da,We,Ja,xa,_,qe,Pa,Ma,De,Ra,Ha,Je,ja,Ca,xe,Ba,ot,K,Xa,lt,Z,Ua,it,X,An=`<code class="language-json"><span class="token punctuation">&#123;</span>
    <span class="token property">"question-set"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span> <span class="token comment">// questionset identifier, there may be many in a single journey</span>
    <span class="token property">"questions"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">&#123;</span>
            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span> <span class="token comment">// text | number | datetime | select | radio | ...</span>
            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span> <span class="token comment">// form control name</span>
            <span class="token property">"label"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span> <span class="token comment">// form control label</span>
            <span class="token property">"default"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span> <span class="token comment">// maps to (value | checked) property</span>
            <span class="token property">"helptext"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span> <span class="token comment">// markdown tooltip or subtext, depending on cosmetic choices</span>
            <span class="token property">"valid-required"</span><span class="token operator">:</span> <span class="token string">"boolean"</span><span class="token punctuation">,</span> <span class="token comment">// maps to required property</span>
            <span class="token property">"valid-max"</span><span class="token operator">:</span> <span class="token string">"integer"</span><span class="token punctuation">,</span> <span class="token comment">// maps to (max | maxLength) property</span>
            <span class="token property">"valid-min"</span><span class="token operator">:</span> <span class="token string">"integer"</span><span class="token punctuation">,</span> <span class="token comment">// maps to (min | minLength) property</span>
            <span class="token property">"valid-regexp"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span> <span class="token comment">// maps to pattern property</span>
            <span class="token property">"valid-errmsg"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span> <span class="token comment">// error message to go with regexp validation</span>
            <span class="token property">"data-source"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span> <span class="token comment">// data-source attribute used for reference data</span>
            <span class="token property">"pre-markdown"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span> <span class="token comment">// markdown to render before the question</span>
            <span class="token property">"post-markdown"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span> <span class="token comment">// markdown to render after the question</span>
            <span class="token property">"display-if-parent"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span> <span class="token comment">// data-parent attribute - hide until parent condition met</span>
            <span class="token property">"display-if-value"</span><span class="token operator">:</span> <span class="token string">"string"</span> <span class="token comment">// data-parent-val attribute</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span></code>`,rt,$,Qa,pt,E,Pe,Fa,Na,Me,Oa,Va,U,Ga,Ya,za,ct,f,Re,Ka,Za,He,$a,es,je,ts,as,Ce,ss,dt,W,Be,ns,os,Xe,ls,ut,q,is,rs,ps,ht,ee,cs,ft,te,ds,mt,m,Ue,us,hs,Qe,fs,ms,Fe,vs,bs,Ne,ks;return{c(){T=s("h1"),St=l("Web Journey without JavaScript"),Oe=r(),Q=s("p"),gt=l("An exploration into developing a full web journey without JavaScript."),Ve=r(),F=s("p"),Tt=l("I\u2019m not overly keen on JavaScript (or dynamic languages in general), but the true motivation here is layering, specifically the repetition of business logic in 2 places."),Ge=r(),N=s("h2"),At=l("Vision"),Ye=r(),A=s("ul"),C=s("li"),Lt=l("Want all business logic to reside "),se=s("em"),It=l("only"),Wt=l(" on the server, since we can\u2019t trust anything handled client side."),qt=r(),ne=s("li"),Dt=l("Need interactivity in the browser, else it will be a poor user experience, but this needs to be data-driven and not contain business logic."),ze=r(),O=s("h2"),Jt=l("Initial thoughts"),Ke=r(),V=s("p"),xt=l(`WebAssembly is now available as an alternative to JavaScript in the browser, for many use cases.  There are limits, most notably the inability to interact directly with the DOM.
So the solution will require some JavaScript plumbing.`),Ze=r(),L=s("p"),Pt=l("The JavaScript elements should be limited to context-agnostic data-driven validation/display toggling, using a library such as "),B=s("a"),Mt=l("validate.js"),Rt=l("."),$e=r(),G=s("h2"),Ht=l("Design principles"),et=r(),u=s("ul"),oe=s("li"),jt=l("JavaScript is a pre-requisite, so beyond showing a nice message don\u2019t worry about progressive enhancement."),Ct=r(),le=s("li"),Bt=l("We can share code front and backend (if that makes sense) but we must write it only once"),Xt=r(),ie=s("li"),Ut=l("All code must be testable"),Qt=r(),re=s("li"),Ft=l("The application must be responsive with no significant latency"),Nt=r(),tt=s("li"),at=r(),Y=s("h2"),Ot=l("Solution design"),st=r(),z=s("p"),Vt=l("Easiest to think about this in terms of interface boundaries"),nt=r(),I=s("table"),pe=s("thead"),v=s("tr"),ce=s("th"),Gt=l("JavaScript"),Yt=r(),de=s("th"),zt=l("WASM Frontend"),Kt=r(),ue=s("th"),Zt=l("Backend"),$t=r(),he=s("th"),ea=l("Notes"),ta=r(),h=s("tbody"),b=s("tr"),fe=s("td"),aa=l("onLoad setup"),sa=r(),me=s("td"),na=l("setupForm"),oa=r(),ve=s("td"),la=l("getQuestionSet"),ia=r(),be=s("td"),ra=l("grab data from backend to generate form"),pa=r(),k=s("tr"),ke=s("td"),ca=l("onChange validate"),da=r(),ye=s("td"),ua=l("-"),ha=r(),we=s("td"),fa=l("-"),ma=r(),_e=s("td"),va=l("perform simple validation in front end"),ba=r(),y=s("tr"),Ee=s("td"),ka=l("onChange update"),ya=r(),Se=s("td"),wa=l("updateX"),_a=r(),ge=s("td"),Ea=l("-"),Sa=r(),Te=s("td"),ga=l("update central WASM model as they change"),Ta=r(),w=s("tr"),Ae=s("td"),Aa=l("onSubmit validate"),La=r(),Le=s("td"),Ia=l("validateX"),Wa=r(),Ie=s("td"),qa=l("-"),Da=r(),We=s("td"),Ja=l("perform complex multifield validation"),xa=r(),_=s("tr"),qe=s("td"),Pa=l("onSubmit submit"),Ma=r(),De=s("td"),Ra=l("submitX"),Ha=r(),Je=s("td"),ja=l("submitX"),Ca=r(),xe=s("td"),Ba=l("ensure validated, pass to backend"),ot=r(),K=s("h3"),Xa=l("QuestionSet data structure"),lt=r(),Z=s("p"),Ua=l("There should be sufficient information in here for both display and simple validation."),it=r(),X=s("pre"),rt=r(),$=s("h3"),Qa=l("Validate & submit"),pt=r(),E=s("ul"),Pe=s("li"),Fa=l("Should have already performed simple validation in the browser"),Na=r(),Me=s("li"),Oa=l("Should already have all required values from the questionset submitted during navigation"),Va=r(),U=s("li"),Ga=l("Assume neither of these things are true, validate in full."),Ya=s("br"),za=l(`
This can mean running validation twice, but the client side stuff was for the user\u2019s benefit and we didn\u2019t write it by hand for this journey, the underlying data which drives it was generated in the backend.`),ct=r(),f=s("ol"),Re=s("li"),Ka=l("All fields in questionset answered, click submit button."),Za=r(),He=s("li"),$a=l('JavaScript onSubmit() code calls WebAssembly ProcessQuestionSet() which returns error string or "".'),es=r(),je=s("li"),ts=l("JavaScript either displays errors or navigates onwards (can preload next page while waiting for response)"),as=r(),Ce=s("li"),ss=l("Wasm applies business logic and passes data on for further processing if required"),dt=r(),W=s("ul"),Be=s("li"),ns=l("Page URLs and navigation are the domain of the JS."),os=r(),Xe=s("li"),ls=l(`Data, session and persistence are the domain of the backend & wasm frontend
These 2 aspects aren\u2019t entirely independent\u2026`),ut=r(),q=s("p"),is=l("If we choose to go down the SPA route then we can consider the WASM memory as the session data."),rs=s("br"),ps=l(`
We also have the option here to break up the questionSet into as many or as few chunks as we like.
We can even combine questionSets within the same business logic, since all exist in session data together.`),ht=r(),ee=s("p"),cs=l(`If we choose to go down the multipage route then we need to call out to a persistence layer in between pages.
This persistence layer could be in the browser (localStorage/sessionStorage) or backend via an async API call, either way this should be handled by WASM.
Any time we need to look at data spanning questionSets (pages in this scenario) we need to also perform data retrieval steps to pull in data from other pages, this starts to feel messy so SPA seems preferable all things considered.`),ft=r(),te=s("h3"),ds=l("Conclusion"),mt=r(),m=s("ul"),Ue=s("li"),us=l("Layer separation is clear and there is no code duplication."),hs=r(),Qe=s("li"),fs=l("Browser-based data-annotation-driven validation is proven and well known"),ms=r(),Fe=s("li"),vs=l("The practicalities of interop for questionSet submission to be proven, can\u2019t add too much latency."),bs=r(),Ne=s("li"),ks=l("WASM to backend APIs via REST or gRPC to be considered - not clear on security in WASM"),this.h()},l(t){T=n(t,"H1",{});var c=o(T);St=i(c,"Web Journey without JavaScript"),c.forEach(a),Oe=p(t),Q=n(t,"P",{});var _s=o(Q);gt=i(_s,"An exploration into developing a full web journey without JavaScript."),_s.forEach(a),Ve=p(t),F=n(t,"P",{});var Es=o(F);Tt=i(Es,"I\u2019m not overly keen on JavaScript (or dynamic languages in general), but the true motivation here is layering, specifically the repetition of business logic in 2 places."),Es.forEach(a),Ge=p(t),N=n(t,"H2",{});var Ss=o(N);At=i(Ss,"Vision"),Ss.forEach(a),Ye=p(t),A=n(t,"UL",{});var vt=o(A);C=n(vt,"LI",{});var bt=o(C);Lt=i(bt,"Want all business logic to reside "),se=n(bt,"EM",{});var gs=o(se);It=i(gs,"only"),gs.forEach(a),Wt=i(bt," on the server, since we can\u2019t trust anything handled client side."),bt.forEach(a),qt=p(vt),ne=n(vt,"LI",{});var Ts=o(ne);Dt=i(Ts,"Need interactivity in the browser, else it will be a poor user experience, but this needs to be data-driven and not contain business logic."),Ts.forEach(a),vt.forEach(a),ze=p(t),O=n(t,"H2",{});var As=o(O);Jt=i(As,"Initial thoughts"),As.forEach(a),Ke=p(t),V=n(t,"P",{});var Ls=o(V);xt=i(Ls,`WebAssembly is now available as an alternative to JavaScript in the browser, for many use cases.  There are limits, most notably the inability to interact directly with the DOM.
So the solution will require some JavaScript plumbing.`),Ls.forEach(a),Ze=p(t),L=n(t,"P",{});var kt=o(L);Pt=i(kt,"The JavaScript elements should be limited to context-agnostic data-driven validation/display toggling, using a library such as "),B=n(kt,"A",{href:!0,rel:!0});var Is=o(B);Mt=i(Is,"validate.js"),Is.forEach(a),Rt=i(kt,"."),kt.forEach(a),$e=p(t),G=n(t,"H2",{});var Ws=o(G);Ht=i(Ws,"Design principles"),Ws.forEach(a),et=p(t),u=n(t,"UL",{});var S=o(u);oe=n(S,"LI",{});var qs=o(oe);jt=i(qs,"JavaScript is a pre-requisite, so beyond showing a nice message don\u2019t worry about progressive enhancement."),qs.forEach(a),Ct=p(S),le=n(S,"LI",{});var Ds=o(le);Bt=i(Ds,"We can share code front and backend (if that makes sense) but we must write it only once"),Ds.forEach(a),Xt=p(S),ie=n(S,"LI",{});var Js=o(ie);Ut=i(Js,"All code must be testable"),Js.forEach(a),Qt=p(S),re=n(S,"LI",{});var xs=o(re);Ft=i(xs,"The application must be responsive with no significant latency"),xs.forEach(a),Nt=p(S),tt=n(S,"LI",{}),o(tt).forEach(a),S.forEach(a),at=p(t),Y=n(t,"H2",{});var Ps=o(Y);Ot=i(Ps,"Solution design"),Ps.forEach(a),st=p(t),z=n(t,"P",{});var Ms=o(z);Vt=i(Ms,"Easiest to think about this in terms of interface boundaries"),Ms.forEach(a),nt=p(t),I=n(t,"TABLE",{});var yt=o(I);pe=n(yt,"THEAD",{});var Rs=o(pe);v=n(Rs,"TR",{});var D=o(v);ce=n(D,"TH",{});var Hs=o(ce);Gt=i(Hs,"JavaScript"),Hs.forEach(a),Yt=p(D),de=n(D,"TH",{});var js=o(de);zt=i(js,"WASM Frontend"),js.forEach(a),Kt=p(D),ue=n(D,"TH",{});var Cs=o(ue);Zt=i(Cs,"Backend"),Cs.forEach(a),$t=p(D),he=n(D,"TH",{});var Bs=o(he);ea=i(Bs,"Notes"),Bs.forEach(a),D.forEach(a),Rs.forEach(a),ta=p(yt),h=n(yt,"TBODY",{});var g=o(h);b=n(g,"TR",{});var J=o(b);fe=n(J,"TD",{});var Xs=o(fe);aa=i(Xs,"onLoad setup"),Xs.forEach(a),sa=p(J),me=n(J,"TD",{});var Us=o(me);na=i(Us,"setupForm"),Us.forEach(a),oa=p(J),ve=n(J,"TD",{});var Qs=o(ve);la=i(Qs,"getQuestionSet"),Qs.forEach(a),ia=p(J),be=n(J,"TD",{});var Fs=o(be);ra=i(Fs,"grab data from backend to generate form"),Fs.forEach(a),J.forEach(a),pa=p(g),k=n(g,"TR",{});var x=o(k);ke=n(x,"TD",{});var Ns=o(ke);ca=i(Ns,"onChange validate"),Ns.forEach(a),da=p(x),ye=n(x,"TD",{});var Os=o(ye);ua=i(Os,"-"),Os.forEach(a),ha=p(x),we=n(x,"TD",{});var Vs=o(we);fa=i(Vs,"-"),Vs.forEach(a),ma=p(x),_e=n(x,"TD",{});var Gs=o(_e);va=i(Gs,"perform simple validation in front end"),Gs.forEach(a),x.forEach(a),ba=p(g),y=n(g,"TR",{});var P=o(y);Ee=n(P,"TD",{});var Ys=o(Ee);ka=i(Ys,"onChange update"),Ys.forEach(a),ya=p(P),Se=n(P,"TD",{});var zs=o(Se);wa=i(zs,"updateX"),zs.forEach(a),_a=p(P),ge=n(P,"TD",{});var Ks=o(ge);Ea=i(Ks,"-"),Ks.forEach(a),Sa=p(P),Te=n(P,"TD",{});var Zs=o(Te);ga=i(Zs,"update central WASM model as they change"),Zs.forEach(a),P.forEach(a),Ta=p(g),w=n(g,"TR",{});var M=o(w);Ae=n(M,"TD",{});var $s=o(Ae);Aa=i($s,"onSubmit validate"),$s.forEach(a),La=p(M),Le=n(M,"TD",{});var en=o(Le);Ia=i(en,"validateX"),en.forEach(a),Wa=p(M),Ie=n(M,"TD",{});var tn=o(Ie);qa=i(tn,"-"),tn.forEach(a),Da=p(M),We=n(M,"TD",{});var an=o(We);Ja=i(an,"perform complex multifield validation"),an.forEach(a),M.forEach(a),xa=p(g),_=n(g,"TR",{});var R=o(_);qe=n(R,"TD",{});var sn=o(qe);Pa=i(sn,"onSubmit submit"),sn.forEach(a),Ma=p(R),De=n(R,"TD",{});var nn=o(De);Ra=i(nn,"submitX"),nn.forEach(a),Ha=p(R),Je=n(R,"TD",{});var on=o(Je);ja=i(on,"submitX"),on.forEach(a),Ca=p(R),xe=n(R,"TD",{});var ln=o(xe);Ba=i(ln,"ensure validated, pass to backend"),ln.forEach(a),R.forEach(a),g.forEach(a),yt.forEach(a),ot=p(t),K=n(t,"H3",{});var rn=o(K);Xa=i(rn,"QuestionSet data structure"),rn.forEach(a),lt=p(t),Z=n(t,"P",{});var pn=o(Z);Ua=i(pn,"There should be sufficient information in here for both display and simple validation."),pn.forEach(a),it=p(t),X=n(t,"PRE",{class:!0});var Ln=o(X);Ln.forEach(a),rt=p(t),$=n(t,"H3",{});var cn=o($);Qa=i(cn,"Validate & submit"),cn.forEach(a),pt=p(t),E=n(t,"UL",{});var ae=o(E);Pe=n(ae,"LI",{});var dn=o(Pe);Fa=i(dn,"Should have already performed simple validation in the browser"),dn.forEach(a),Na=p(ae),Me=n(ae,"LI",{});var un=o(Me);Oa=i(un,"Should already have all required values from the questionset submitted during navigation"),un.forEach(a),Va=p(ae),U=n(ae,"LI",{});var wt=o(U);Ga=i(wt,"Assume neither of these things are true, validate in full."),Ya=n(wt,"BR",{}),za=i(wt,`
This can mean running validation twice, but the client side stuff was for the user\u2019s benefit and we didn\u2019t write it by hand for this journey, the underlying data which drives it was generated in the backend.`),wt.forEach(a),ae.forEach(a),ct=p(t),f=n(t,"OL",{});var H=o(f);Re=n(H,"LI",{});var hn=o(Re);Ka=i(hn,"All fields in questionset answered, click submit button."),hn.forEach(a),Za=p(H),He=n(H,"LI",{});var fn=o(He);$a=i(fn,'JavaScript onSubmit() code calls WebAssembly ProcessQuestionSet() which returns error string or "".'),fn.forEach(a),es=p(H),je=n(H,"LI",{});var mn=o(je);ts=i(mn,"JavaScript either displays errors or navigates onwards (can preload next page while waiting for response)"),mn.forEach(a),as=p(H),Ce=n(H,"LI",{});var vn=o(Ce);ss=i(vn,"Wasm applies business logic and passes data on for further processing if required"),vn.forEach(a),H.forEach(a),dt=p(t),W=n(t,"UL",{});var _t=o(W);Be=n(_t,"LI",{});var bn=o(Be);ns=i(bn,"Page URLs and navigation are the domain of the JS."),bn.forEach(a),os=p(_t),Xe=n(_t,"LI",{});var kn=o(Xe);ls=i(kn,`Data, session and persistence are the domain of the backend & wasm frontend
These 2 aspects aren\u2019t entirely independent\u2026`),kn.forEach(a),_t.forEach(a),ut=p(t),q=n(t,"P",{});var Et=o(q);is=i(Et,"If we choose to go down the SPA route then we can consider the WASM memory as the session data."),rs=n(Et,"BR",{}),ps=i(Et,`
We also have the option here to break up the questionSet into as many or as few chunks as we like.
We can even combine questionSets within the same business logic, since all exist in session data together.`),Et.forEach(a),ht=p(t),ee=n(t,"P",{});var yn=o(ee);cs=i(yn,`If we choose to go down the multipage route then we need to call out to a persistence layer in between pages.
This persistence layer could be in the browser (localStorage/sessionStorage) or backend via an async API call, either way this should be handled by WASM.
Any time we need to look at data spanning questionSets (pages in this scenario) we need to also perform data retrieval steps to pull in data from other pages, this starts to feel messy so SPA seems preferable all things considered.`),yn.forEach(a),ft=p(t),te=n(t,"H3",{});var wn=o(te);ds=i(wn,"Conclusion"),wn.forEach(a),mt=p(t),m=n(t,"UL",{});var j=o(m);Ue=n(j,"LI",{});var _n=o(Ue);us=i(_n,"Layer separation is clear and there is no code duplication."),_n.forEach(a),hs=p(j),Qe=n(j,"LI",{});var En=o(Qe);fs=i(En,"Browser-based data-annotation-driven validation is proven and well known"),En.forEach(a),ms=p(j),Fe=n(j,"LI",{});var Sn=o(Fe);vs=i(Sn,"The practicalities of interop for questionSet submission to be proven, can\u2019t add too much latency."),Sn.forEach(a),bs=p(j),Ne=n(j,"LI",{});var gn=o(Ne);ks=i(gn,"WASM to backend APIs via REST or gRPC to be considered - not clear on security in WASM"),gn.forEach(a),j.forEach(a),this.h()},h(){ys(B,"href","https://validatejs.org/"),ys(B,"rel","nofollow"),ys(X,"class","language-json")},m(t,c){d(t,T,c),e(T,St),d(t,Oe,c),d(t,Q,c),e(Q,gt),d(t,Ve,c),d(t,F,c),e(F,Tt),d(t,Ge,c),d(t,N,c),e(N,At),d(t,Ye,c),d(t,A,c),e(A,C),e(C,Lt),e(C,se),e(se,It),e(C,Wt),e(A,qt),e(A,ne),e(ne,Dt),d(t,ze,c),d(t,O,c),e(O,Jt),d(t,Ke,c),d(t,V,c),e(V,xt),d(t,Ze,c),d(t,L,c),e(L,Pt),e(L,B),e(B,Mt),e(L,Rt),d(t,$e,c),d(t,G,c),e(G,Ht),d(t,et,c),d(t,u,c),e(u,oe),e(oe,jt),e(u,Ct),e(u,le),e(le,Bt),e(u,Xt),e(u,ie),e(ie,Ut),e(u,Qt),e(u,re),e(re,Ft),e(u,Nt),e(u,tt),d(t,at,c),d(t,Y,c),e(Y,Ot),d(t,st,c),d(t,z,c),e(z,Vt),d(t,nt,c),d(t,I,c),e(I,pe),e(pe,v),e(v,ce),e(ce,Gt),e(v,Yt),e(v,de),e(de,zt),e(v,Kt),e(v,ue),e(ue,Zt),e(v,$t),e(v,he),e(he,ea),e(I,ta),e(I,h),e(h,b),e(b,fe),e(fe,aa),e(b,sa),e(b,me),e(me,na),e(b,oa),e(b,ve),e(ve,la),e(b,ia),e(b,be),e(be,ra),e(h,pa),e(h,k),e(k,ke),e(ke,ca),e(k,da),e(k,ye),e(ye,ua),e(k,ha),e(k,we),e(we,fa),e(k,ma),e(k,_e),e(_e,va),e(h,ba),e(h,y),e(y,Ee),e(Ee,ka),e(y,ya),e(y,Se),e(Se,wa),e(y,_a),e(y,ge),e(ge,Ea),e(y,Sa),e(y,Te),e(Te,ga),e(h,Ta),e(h,w),e(w,Ae),e(Ae,Aa),e(w,La),e(w,Le),e(Le,Ia),e(w,Wa),e(w,Ie),e(Ie,qa),e(w,Da),e(w,We),e(We,Ja),e(h,xa),e(h,_),e(_,qe),e(qe,Pa),e(_,Ma),e(_,De),e(De,Ra),e(_,Ha),e(_,Je),e(Je,ja),e(_,Ca),e(_,xe),e(xe,Ba),d(t,ot,c),d(t,K,c),e(K,Xa),d(t,lt,c),d(t,Z,c),e(Z,Ua),d(t,it,c),d(t,X,c),X.innerHTML=An,d(t,rt,c),d(t,$,c),e($,Qa),d(t,pt,c),d(t,E,c),e(E,Pe),e(Pe,Fa),e(E,Na),e(E,Me),e(Me,Oa),e(E,Va),e(E,U),e(U,Ga),e(U,Ya),e(U,za),d(t,ct,c),d(t,f,c),e(f,Re),e(Re,Ka),e(f,Za),e(f,He),e(He,$a),e(f,es),e(f,je),e(je,ts),e(f,as),e(f,Ce),e(Ce,ss),d(t,dt,c),d(t,W,c),e(W,Be),e(Be,ns),e(W,os),e(W,Xe),e(Xe,ls),d(t,ut,c),d(t,q,c),e(q,is),e(q,rs),e(q,ps),d(t,ht,c),d(t,ee,c),e(ee,cs),d(t,ft,c),d(t,te,c),e(te,ds),d(t,mt,c),d(t,m,c),e(m,Ue),e(Ue,us),e(m,hs),e(m,Qe),e(Qe,fs),e(m,ms),e(m,Fe),e(Fe,vs),e(m,bs),e(m,Ne),e(Ne,ks)},p:ws,i:ws,o:ws,d(t){t&&a(T),t&&a(Oe),t&&a(Q),t&&a(Ve),t&&a(F),t&&a(Ge),t&&a(N),t&&a(Ye),t&&a(A),t&&a(ze),t&&a(O),t&&a(Ke),t&&a(V),t&&a(Ze),t&&a(L),t&&a($e),t&&a(G),t&&a(et),t&&a(u),t&&a(at),t&&a(Y),t&&a(st),t&&a(z),t&&a(nt),t&&a(I),t&&a(ot),t&&a(K),t&&a(lt),t&&a(Z),t&&a(it),t&&a(X),t&&a(rt),t&&a($),t&&a(pt),t&&a(E),t&&a(ct),t&&a(f),t&&a(dt),t&&a(W),t&&a(ut),t&&a(q),t&&a(ht),t&&a(ee),t&&a(ft),t&&a(te),t&&a(mt),t&&a(m)}}}class xn extends In{constructor(T){super();Wn(this,T,null,Dn,qn,{})}}export{xn as default};
