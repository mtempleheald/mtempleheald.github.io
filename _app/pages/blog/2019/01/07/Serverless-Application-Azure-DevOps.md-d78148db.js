import{S as wT,i as _T,s as gT,e as l,t as i,k as n,c as r,a,h as s,d as o,m as u,b as f,N as IT,g as p,F as e,G as gI}from"../../../../../chunks/vendor-dc71a660.js";function AT(iT){let st,Pf,pu,at,zf,Rf,Sf,fu,nt,yi,Df,Cf,Ei,Mf,hu,gl,Bf,du,C,wi,Nf,jf,_i,xf,qf,gi,Of,Hf,Ii,Ff,Xf,Ai,Uf,Gf,Ti,Wf,mu,Gt,Wt,Vf,$f,vu,Il,Jf,bu,ee,Kf,Yf,Qf,Zf,eh,th,oh,yu,ut,ki,h,Li,lh,rh,Pi,ih,sh,zi,ah,nh,Ri,uh,ch,Si,ph,fh,Di,hh,dh,Ci,mh,vh,Mi,bh,yh,Bi,Eh,wh,Ni,_h,gh,Vt,d,ji,Ih,Ah,xi,Th,kh,qi,Lh,Ph,Oi,zh,Rh,Hi,Sh,Dh,Fi,Ch,Mh,Xi,Bh,Nh,Ui,jh,xh,Gi,qh,Oh,Wi,Hh,Fh,m,Vi,Xh,Uh,$i,Gh,Wh,Ji,Vh,$h,Ki,Jh,Kh,Yi,Yh,Qh,Qi,Zh,ed,Zi,td,od,es,ld,rd,ts,id,sd,os,ad,Eu,Al,nd,wu,ke,ls,ud,cd,rs,pd,fd,is,hd,_u,Tl,dd,gu,v,Qe,md,vd,bd,$t,yd,Ed,wd,Ze,_d,gd,Id,Ad,Td,kd,Jt,Ld,Pd,zd,Rd,fe,Sd,Dd,Cd,Kt,Md,Bd,Nd,jd,xd,Yt,qd,Od,Hd,Fd,he,Xd,Ud,Gd,Qt,Wd,Vd,$d,Jd,Kd,ss,Yd,Qd,Zt,Zd,em,tm,om,as,lm,Iu,kl,rm,Au,Ll,im,Tu,H,Pl,sm,eo,ns,am,nm,us,um,cm,zl,pm,cs,ps,fm,hm,Rl,dm,fs,hs,mm,vm,Sl,bm,ds,ms,ym,Em,Dl,wm,vs,bs,_m,ku,Cl,gm,Lu,_,ys,Im,Am,Es,Tm,km,ws,Lm,Pm,Ml,zm,to,Rm,Sm,Bl,Dm,oo,Cm,Mm,_s,Bm,Nm,gs,jm,xm,Is,qm,Pu,Nl,Om,zu,jl,Hm,Ru,te,xl,Fm,et,As,Xm,Um,Ts,Gm,Wm,ks,Vm,$m,ql,Jm,tt,Ls,Km,Ym,Ps,Qm,Zm,zs,ev,tv,Ol,ov,ot,Rs,lv,rv,Ss,iv,sv,Ds,av,nv,Hl,uv,lt,Cs,cv,pv,Ms,fv,hv,Bs,dv,Su,ct,mv,vv,bv,Du,Fl,yv,Cu,k,Ev,wv,_v,Ns,gv,Iv,Av,Tv,lo,kv,Lv,Pv,zv,ro,Rv,Sv,Mu,Xl,Dv,Bu,Ul,Cv,Nu,Le,js,Mv,Bv,xs,Nv,jv,qs,xv,ju,Pe,qv,Ov,Hv,Fv,Xv,xu,ze,io,Uv,Os,Gv,Wv,Vv,so,$v,Hs,Jv,Kv,Yv,Gl,Qv,Y,Fs,Zv,e1,Xs,t1,o1,Us,l1,r1,Gs,i1,s1,Wl,a1,Q,Ws,n1,u1,Vs,c1,p1,$s,f1,h1,Js,d1,m1,Ks,v1,qu,pt,b1,y1,E1,Ou,ft,Ys,w1,_1,Qs,g1,Hu,Vl,I1,Fu,g,A1,ao,T1,k1,L1,P1,Zs,z1,R1,S1,D1,ea,C1,M1,B1,N1,no,j1,x1,Xu,M,q1,uo,O1,H1,F1,X1,ta,U1,G1,W1,V1,oa,$1,J1,Uu,$l,K1,Gu,Re,la,Y1,Q1,ra,Z1,eb,ia,tb,Wu,co,sT=`<code class="language-undefined">&#123;
    &quot;IsEncrypted&quot;: false,
    &quot;Values&quot;: &#123;
        &quot;AzureWebJobsStorage&quot;: &quot;&quot;,
        &quot;FUNCTIONS_WORKER_RUNTIME&quot;: &quot;dotnet&quot;
    &#125;
&#125;</code>`,Vu,Jl,sa,ob,$u,po,aT=`<code class="language-undefined">...
using Microsoft.Azure.WebJobs.Extensions.Http;
using Microsoft.Extensions.Logging;
namespace Company.Function
&#123;
    public static class http
    &#123;
        [FunctionName(&quot;http&quot;)]
        public static async Task&lt;IActionResult&gt; Run(
            [HttpTrigger(AuthorizationLevel.Function, &quot;get&quot;, &quot;post&quot;, Route = null)] HttpRequest req,
            ILogger log)
        &#123;
            ...
            string name = req.Query[&quot;name&quot;];
            ...            
            return name != null
                ? (ActionResult)new OkObjectResult($&quot;Hello, &#123;name&#125;&quot;)
                : new BadRequestObjectResult(&quot;Please pass a name on the query string or in the request body&quot;);
        &#125;
    &#125;
&#125;</code>`,Ju,oe,lb,rb,ib,sb,ab,nb,ub,Ku,fo,ho,cb,pb,Yu,F,aa,fb,hb,na,db,mb,ua,vb,bb,ca,yb,Eb,pa,wb,Qu,Kl,_b,Zu,Yl,gb,ec,le,fa,Ib,Ab,ha,Tb,kb,da,Lb,Pb,ma,zb,tc,Ql,Rb,oc,de,Sb,va,Db,Cb,Mb,mo,Bb,Nb,lc,Zl,jb,rc,ht,xb,vo,qb,Ob,ic,er,Hb,sc,w,Fb,ba,Xb,Ub,ya,Gb,Wb,Vb,$b,Jb,Kb,Yb,Qb,Ea,Zb,e2,t2,o2,l2,ac,rt,r2,wa,i2,s2,a2,nc,dt,tr,n2,bo,u2,c2,or,p2,yo,f2,uc,lr,h2,cc,re,d2,m2,v2,b2,y2,E2,w2,pc,mt,_2,g2,I2,fc,Se,A2,T2,k2,L2,P2,hc,rr,z2,dc,ir,R2,mc,De,_a,S2,D2,ga,C2,M2,Ia,B2,vc,b,N2,Eo,j2,x2,q2,O2,Aa,H2,F2,Ta,X2,U2,ka,G2,W2,V2,$2,La,J2,K2,Pa,Y2,Q2,bc,Z,Z2,wo,ey,ty,oy,ly,ry,iy,_o,sr,II,yc,ar,sy,Ec,nr,ay,wc,B,go,ny,za,uy,cy,py,Io,fy,Ra,hy,dy,my,Ao,vy,Sa,by,yy,Ey,To,wy,Da,_y,gy,Iy,ko,Ay,Ca,Ty,ky,Ly,Lo,Py,Ma,zy,Ry,_c,ur,Sy,gc,cr,pr,Dy,me,Ba,Cy,My,fr,By,Na,ja,Ny,jy,xa,xy,qy,ve,Oy,Po,Hy,Fy,Xy,Uy,Gy,Wy,Ic,hr,Vy,Ac,Ce,$y,zo,Jy,Ky,Yy,Qy,Tc,X,Zy,qa,eE,tE,Oa,oE,lE,Ha,rE,iE,sE,aE,kc,Ro,nE,So,uE,Lc,vt,Fa,be,Xa,cE,pE,Ua,fE,hE,Ga,dE,mE,Wa,vE,bE,S,ye,Va,yE,EE,Pc,wE,zc,_E,$a,gE,IE,Ee,Ja,AE,TE,Ka,kE,LE,Rc,PE,Ya,zE,RE,we,Qa,SE,DE,Sc,CE,Dc,ME,Za,BE,NE,_e,en,jE,xE,tn,qE,OE,on,HE,FE,Cc,XE,ge,ln,UE,GE,Mc,WE,rn,VE,$E,Bc,JE,Ie,sn,KE,YE,Nc,QE,an,ZE,ew,jc,tw,Ae,nn,ow,lw,un,rw,iw,xc,sw,cn,aw,qc,dr,nw,Oc,bt,Do,uw,pn,cw,pw,fw,Co,hw,fn,dw,mw,Hc,mr,vw,Fc,yt,vr,bw,hn,yw,Ew,dn,ww,Xc,Et,_w,Mo,gw,Iw,Uc,br,Bo,Aw,mn,Tw,kw,Gc,yr,Lw,Wc,U,Pw,No,zw,Rw,Sw,Dw,jo,Cw,Mw,Bw,Nw,Vc,Er,jw,$c,y,xw,vn,qw,Ow,Hw,Fw,xo,Xw,Uw,qo,Gw,Ww,Vw,$w,bn,Jw,Kw,Yw,Qw,yn,Zw,e3,Jc,Me,En,t3,o3,wn,l3,r3,_n,i3,Kc,O,s3,a3,n3,u3,c3,gn,p3,f3,h3,Oo,d3,m3,Yc,wt,In,v3,b3,An,y3,Qc,wr,E3,Zc,Be,Ho,w3,_3,g3,I3,Fo,A3,T3,k3,L3,Xo,P3,z3,R3,ep,_r,S3,tp,gr,D3,op,Ir,Ar,Uo,C3,M3,lp,Go,nT=`<code class="language-undefined">$resourceGroup = &#39;mthtest01&#39;
$storageAccount = &quot;$($resourceGroup)apistorage&quot;
$appServiceplan = &quot;$($resourceGroup)plan&quot;
$functionApp = &quot;$($resourceGroup)api&quot;
az group create --name $resourceGroup --location westeurope
az storage account create --name $storageAccount --location westeurope --resource-group $resourceGroup --sku Standard_LRS
az appservice plan create --name $appServiceplan --resource-group $resourceGroup --sku B1 --is-linux
az functionapp create --resource-group $resourceGroup --plan $appServiceplan --name $functionApp --storage-account $storageAccount --runtime dotnet</code>`,rp,Ne,Tr,Wo,B3,N3,j3,kr,Vo,x3,q3,O3,Lr,$o,H3,F3,ip,Jo,uT=`<code class="language-undefined">az extension add --name storage-preview --debug
az storage blob service-properties update --account-name &quot;$(resourceGroup)ui&quot; --static-website --404-document 404.html --index-document index.html --debug</code>`,sp,Pr,X3,ap,zr,U3,np,Rr,G3,up,je,Tn,W3,V3,kn,$3,J3,Ko,K3,Yo,Y3,Q3,cp,_t,Z3,Qo,e_,t_,pp,G,Ln,o_,l_,Pn,r_,i_,zn,s_,a_,Sr,n_,Zo,u_,c_,Rn,p_,fp,N,f_,el,h_,d_,tl,m_,v_,ol,b_,y_,E_,w_,__,g_,hp,Dr,I_,dp,gt,Sn,ll,A_,T_,Dn,rl,k_,mp,Cr,L_,vp,Mr,P_,bp,ie,Cn,z_,R_,Mn,S_,D_,Bn,C_,M_,Nn,B_,yp,Br,N_,Ep,il,cT=`<code class="language-json"><span class="token property">"variables"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        <span class="token property">"functionApp"</span><span class="token operator">:</span> <span class="token string">"[concat(resourceGroup().name, 'api')]"</span><span class="token punctuation">,</span>
        <span class="token property">"functionAppStorage"</span><span class="token operator">:</span> <span class="token string">"[concat(resourceGroup().name, 'apistorage')]"</span><span class="token punctuation">,</span>
        <span class="token property">"uiStorage"</span><span class="token operator">:</span> <span class="token string">"[concat(resourceGroup().name, 'ui')]"</span>
    <span class="token punctuation">&#125;</span></code>`,wp,se,j_,x_,q_,sl,O_,H_,F_,X_,_p,al,pT=`<code class="language-undefined">(Get-AzResourceProvider -ProviderNamespace Microsoft.Storage).ResourceTypes | Where &#123;$_.ResourceTypeName -eq &#39;storageAccounts&#39;&#125; | select -ExpandProperty ApiVersions
2018-07-01
2018-03-01-preview
...
2015-05-01-preview
(Get-AzResourceProvider -ProviderNamespace Microsoft.Web).ResourceTypes | Where &#123;$_.ResourceTypeName -eq &#39;sites&#39;&#125; | select -ExpandProperty ApiVersions
(Get-AzResourceProvider -ProviderNamespace Microsoft.Web).ResourceTypes | Where &#123;$_.ResourceTypeName -eq &#39;serverfarms&#39;&#125; | select -ExpandProperty ApiVersions
(Get-AzResourceProvider -ProviderNamespace Microsoft.Web).ResourceTypes | Where &#123;$_.ResourceTypeName -eq &#39;functions&#39;&#125; | select -ExpandProperty ApiVersions
2018-11-01
2018-02-01
...
2014-04-01</code>`,gp,It,U_,nl,G_,W_,Ip,ul,fT=`<code class="language-undefined">Connect-AzAccount
Select-AzSubscription -SubscriptionName &#39;Free Trial&#39;
New-AzResourceGroup -Name $resourceGroupName -Location &#39;North Europe&#39;
Test-AzResourceGroupDeployment -ResourceGroupName $resourceGroupName -TemplateFile .azuredeploy.json -Debug</code>`,Ap,xe,V_,jn,$_,J_,K_,Y_,Tp,qe,xn,cl,Q_,Z_,qn,pl,e4,t4,On,fl,o4,kp,Oe,l4,hl,r4,i4,s4,a4,Lp,E,Nr,n4,Hn,u4,c4,jr,p4,Fn,f4,h4,xr,d4,Xn,m4,v4,qr,b4,Un,y4,E4,Or,w4,Gn,_4,g4,Hr,I4,Wn,A4,T4,Fr,k4,Vn,L4,P4,dl,z4,$n,R4,S4,D4,Xr,C4,Jn,M4,Pp,At,B4,ml,N4,j4,zp,W,x4,vl,q4,O4,H4,F4,X4,U4,Kn,G4,W4,Rp,V,V4,$4,J4,Yn,K4,Y4,Q4,Qn,Z4,eg,tg,Sp,Ur,og,Dp,$,lg,rg,ig,bl,sg,ag,ng,ug,Zn,cg,pg,Cp,Gr,fg,Mp,He,hg,yl,dg,mg,vg,bg,Bp,Wr,yg,Np,j,Vr,eu,Eg,wg,_g,tu,ou,gg,Ig,$r,Ag,El,lu,Tg,kg,ru,Lg,Pg,iu,zg,Rg,wl,Sg,su,Dg,Cg,Mg,au,Bg,jp,Jr,Ng,xp,Tt,nu,jg,xg,uu,qg;return{c(){st=l("h1"),Pf=i("Building a Serverless Application in Azure"),pu=n(),at=l("p"),zf=i("Serverless computing is getting a lot of attention at the moment, touted as a great way to get to market quickly and popular with startups."),Rf=l("br"),Sf=i(`
My aim with this project is to add this tool to my arsenal by building a small but realistically complex proof of concept application:`),fu=n(),nt=l("ul"),yi=l("li"),Df=i("Backend built using Azure Functions written in C# and .NET Core"),Cf=n(),Ei=l("li"),Mf=i("Frontend hosted in Azure Static Content Hosting using AngularJS to connect to the backend service"),hu=n(),gl=l("p"),Bf=i("Key principles:"),du=n(),C=l("ul"),wi=l("li"),Nf=i("Separate application logic and integration details to facilite unit testing, portability and supportability."),jf=n(),_i=l("li"),xf=i("Continuous deployment (CD) where every check-in to the master branch results in a production release."),qf=n(),gi=l("li"),Of=i("Open source, because why not?  Maybe it is interesting to someone, or perhaps I can learn something from others who see it."),Hf=n(),Ii=l("li"),Ff=i("Try to be cloud agnostic, realistically this is only partially possible at present but let\u2019s see where we get up to."),Xf=n(),Ai=l("li"),Uf=i("Establish clear cost management, arguably the most important factor regarding practicality."),Gf=n(),Ti=l("li"),Wf=i("Minimum Viable Product (MVP) - A working application with no data persistence and limited security."),mu=n(),Gt=l("h3"),Wt=l("a"),Vf=i("Live application"),$f=i("."),vu=n(),Il=l("h2"),Jf=i("Application Logic"),bu=n(),ee=l("p"),Kf=i("Cricket is a darts game played by 2 or more people."),Yf=l("br"),Qf=i(`
The idea is to tick off 3 of each of the numbers 15-20 plus the bull (centre bull counts double).`),Zf=l("br"),eh=i(`
Hitting a number which you\u2019ve already completed but others haven\u2019t scores you those points.`),th=l("br"),oh=i(`
The winner is the first to complete this checklist and also have the best score overall.`),yu=n(),ut=l("table"),ki=l("thead"),h=l("tr"),Li=l("th"),lh=i("Player"),rh=n(),Pi=l("th"),ih=i("Bull"),sh=n(),zi=l("th"),ah=i("20"),nh=n(),Ri=l("th"),uh=i("19"),ch=n(),Si=l("th"),ph=i("18"),fh=n(),Di=l("th"),hh=i("17"),dh=n(),Ci=l("th"),mh=i("16"),vh=n(),Mi=l("th"),bh=i("15"),yh=n(),Bi=l("th"),Eh=i("Points"),wh=n(),Ni=l("th"),_h=i("Ranking"),gh=n(),Vt=l("tbody"),d=l("tr"),ji=l("td"),Ih=i("Player 1"),Ah=n(),xi=l("td"),Th=i("XXX"),kh=n(),qi=l("td"),Lh=i("XXX"),Ph=n(),Oi=l("td"),zh=i("XXX"),Rh=n(),Hi=l("td"),Sh=i("XXX"),Dh=n(),Fi=l("td"),Ch=i("XXX"),Mh=n(),Xi=l("td"),Bh=i("XXX"),Nh=n(),Ui=l("td"),jh=i("XXX"),xh=n(),Gi=l("td"),qh=i("0"),Oh=n(),Wi=l("td"),Hh=i("1"),Fh=n(),m=l("tr"),Vi=l("td"),Xh=i("Player 2"),Uh=n(),$i=l("td"),Gh=i("XXX"),Wh=n(),Ji=l("td"),Vh=i("XXX"),$h=n(),Ki=l("td"),Jh=i("XXX"),Kh=n(),Yi=l("td"),Yh=i("XXX"),Qh=n(),Qi=l("td"),Zh=i("XXX"),ed=n(),Zi=l("td"),td=i("XXX"),od=n(),es=l("td"),ld=i("XXX"),rd=n(),ts=l("td"),id=i("100"),sd=n(),os=l("td"),ad=i("2"),Eu=n(),Al=l("p"),nd=i("There are additional extended rules too, notably:"),wu=n(),ke=l("ul"),ls=l("li"),ud=i("Cutthroat - scores go on everybody else, not you, the winner has the lowest score at the end"),cd=n(),rs=l("li"),pd=i("Require 3 - If all 3 hits on a number aren\u2019t completed within a single visit they aren\u2019t saved for the next visit"),fd=n(),is=l("li"),hd=i("Unlimited vs round-based, usually 20 rounds"),_u=n(),Tl=l("h2"),dd=i("Development process"),gu=n(),v=l("ol"),Qe=l("li"),md=i("Set up version control."),vd=l("br"),bd=i(`
I\u2019ve opted to use a GitHub-hosted `),$t=l("a"),yd=i("Git repository"),Ed=i("."),wd=n(),Ze=l("li"),_d=i("Set up a development environment."),gd=l("br"),Id=i(`
I\u2019ve chosen VS Code on Windows with extensions C#, .NET Core Test Explorer, Azure Functions.`),Ad=l("br"),Td=i(`
I\u2019m working alone, there\u2019s no need for collaboration tools for this project, documentation to be housed with the code.`),kd=n(),Jt=l("li"),Ld=i("Write the domain logic (C#, .NET Standard), ignorant of hosting considerations."),Pd=l("br"),zd=i(`
Testing (xUnit) with a pragmatic TDD approach, that is I\u2019m not writing code just to pass tests, but I am writing tests first.`),Rd=n(),fe=l("li"),Sd=i("Configure build pipeline, triggered from check-in to master."),Dd=l("br"),Cd=i(`
Azure DevOps uses `),Kt=l("a"),Md=i("azure-pipelines.yml"),Bd=i("."),Nd=l("br"),jd=i(`
I\u2019m a little uncomfortable now in terms of vendor lock-in, but at least I\u2019m building CI in from the start, defined in the codebase, can switch later.`),xd=n(),Yt=l("li"),qd=i("Build the function wrappers (API) referencing the tested domain project (with tests) and add to build pipeline."),Od=l("br"),Hd=i(`
Now I\u2019m learning.  It is immediately clear that this code can never be portable to AWS, GCP etc, wrappers would instead need to be built separately.`),Fd=n(),he=l("li"),Xd=i("Configure release pipeline, triggered from successful build/test."),Ud=l("br"),Gd=i(`
Azure DevOps this is currently UI-driven, YAML expected `),Qt=l("a"),Wd=i("2018 Q4"),Vd=i("."),$d=l("br"),Jd=i(`
Again, this is worryingly Azure-specific but it has to be to some extent, we\u2019re now connecting to the platform itself.`),Kd=n(),ss=l("li"),Yd=i("Build independent integration tests, this is on hold but will probably use Postman on the command line (Newman)."),Qd=n(),Zt=l("li"),Zd=i("Build the user interface and add to build/ release pipelines."),em=l("br"),tm=i(`
I stick with consistent naming convention for collation purposes but this is an AngularJS (for now) project, not .NET.`),om=n(),as=l("li"),lm=i("Manual live smoke testing."),Iu=n(),kl=l("h2"),rm=i("Code structure and naming"),Au=n(),Ll=l("p"),im=i("Projects:"),Tu=n(),H=l("ul"),Pl=l("li"),sm=i("Mth.Darts.Cricket"),eo=l("ul"),ns=l("li"),am=i("Domain service (business logic), C#, .NET Standard"),nm=n(),us=l("li"),um=i("Minimise dependencies to maximise portability, reduce build times and improve supportability."),cm=n(),zl=l("li"),pm=i("Mth.Darts.Cricket.Tests"),cs=l("ul"),ps=l("li"),fm=i("Business logic tests, C#, xUnit"),hm=n(),Rl=l("li"),dm=i("Mth.Darts.Cricket.Api"),fs=l("ul"),hs=l("li"),mm=i("Application service (Azure functions) referencing the domain service, C#, .NET Core"),vm=n(),Sl=l("li"),bm=i("Mth.Darts.Cricket.Api.Tests"),ds=l("ul"),ms=l("li"),ym=i("Application service tests, C#, xUnit"),Em=n(),Dl=l("li"),wm=i("Mth.Darts.Cricket.Ui"),vs=l("ul"),bs=l("li"),_m=i("User interface, static web pages using AngularJS to reference the Api"),ku=n(),Cl=l("h2"),gm=i("Standards"),Lu=n(),_=l("ul"),ys=l("li"),Im=i("1 file per class/ struct, even if only used in one place"),Am=n(),Es=l("li"),Tm=i("Files names in a collation-friendly way, nested items to be prefixed with the parent name"),km=n(),ws=l("li"),Lm=i("Comments where they add value, must describe the why not the how (that should be obvious from the code)"),Pm=n(),Ml=l("li"),zm=i("Hold scoreboard state in nested structs not classes because "),to=l("a"),Rm=i("has no identity, defined by its data"),Sm=n(),Bl=l("li"),Dm=i("JSON Serialisation using Newtonsoft.Json - "),oo=l("a"),Cm=i("use attributes to expose private properties"),Mm=n(),_s=l("li"),Bm=i("Adopt REST API standards, e.g. avoid verbs, pluralise collections always"),Nm=n(),gs=l("li"),jm=i("single .gitignore file at root as usually recommended"),xm=n(),Is=l("li"),qm=i(".vscode settings checked-in could help future developers, no harm to the code to keep them"),Pu=n(),Nl=l("h2"),Om=i("API"),zu=n(),jl=l("p"),Hm=i("The connection between front and backend is through a REST API (Azure Function App) with 4 key endpoints (Functions):"),Ru=n(),te=l("ul"),xl=l("li"),Fm=i("create match"),et=l("ul"),As=l("li"),Xm=i("requires list of players and match settings"),Um=n(),Ts=l("li"),Gm=i("returns new match, initialised with zero scores/ hits"),Wm=n(),ks=l("li"),Vm=i("POST: /api/matches"),$m=n(),ql=l("li"),Jm=i("throw dart"),tt=l("ul"),Ls=l("li"),Km=i("requires current match state and details of the current throw"),Ym=n(),Ps=l("li"),Qm=i("returns updated match"),Zm=n(),zs=l("li"),ev=i("POST: /api/matches/123/"),tv=n(),Ol=l("li"),ov=i("undo throw"),ot=l("ul"),Rs=l("li"),lv=i("requires current match state (including history of throws)"),rv=n(),Ss=l("li"),iv=i("returns updated match state"),sv=n(),Ds=l("li"),av=i("POST: /api/matches/123/undo"),nv=n(),Hl=l("li"),uv=i("start new game"),lt=l("ul"),Cs=l("li"),cv=i("requires current match state (with current game marked as complete)"),pv=n(),Ms=l("li"),fv=i("returns updated match state"),hv=n(),Bs=l("li"),dv=i("POST: /api/matches/123/newgame"),Su=n(),ct=l("p"),mv=i("These are all independently deterministic but obviously need to be combined in a logical order to manage the flow of a Cricket darts match."),vv=l("br"),bv=i(`
This activity will be left to the caller to manage for the MVP, with persistent this may change.`),Du=n(),Fl=l("h2"),yv=i("Azure Functions"),Cu=n(),k=l("p"),Ev=i("A key component of this serverless design is the use of scalable functions, for which I\u2019ve chosen Azure Functions."),wv=l("br"),_v=i(`
Azure deploys functions within an umbrella entity called a `),Ns=l("strong"),gv=i("Function App"),Iv=i("."),Av=l("br"),Tv=i(`
Function Apps are considered infrastructure and the recommended deployment approach is to use `),lo=l("a"),kv=i("Azure Resource Manager (ARM) templates"),Lv=i("."),Pv=l("br"),zv=i(`
Functions are considered code and the recommended deployment approach is to use `),ro=l("a"),Rv=i("Zip Deployment"),Sv=i("."),Mu=n(),Xl=l("h2"),Dv=i("Create Function App manually"),Bu=n(),Ul=l("p"),Cv=i("In the interest of understanding before coding I experimented by manually creating a Function App using QuickStart (Azure Portal)."),Nu=n(),Le=l("ul"),js=l("li"),Mv=i("resource group:             xmthcricket01"),Bv=n(),xs=l("li"),Nv=i("function app:               xmthcricket01functionapp"),jv=n(),qs=l("li"),xv=i("storage account (required): xmthcricket01storageaccount"),ju=n(),Pe=l("p"),qv=i("I feel that standards are important from the start so I settled on naming convention %owner%%application%%version%%resource%."),Ov=l("br"),Hv=i(`
I avoided underscores, hyphens, mixed case because storage accounts don\u2019t allow them and consistency trumps appearance in my opinion.`),Fv=l("br"),Xv=i(`
I then examined the storage account, since I didn\u2019t understand its purpose.`),xu=n(),ze=l("ul"),io=l("li"),Uv=i("Blob container "),Os=l("em"),Gv=i("azure-webjobs-hosts"),Wv=i(" used for storing blob receipts, ensuring that each blob is only processed once."),Vv=n(),so=l("li"),$v=i("Blob container "),Hs=l("em"),Jv=i("azure-webjobs-secrets"),Kv=i(" used for storing keys/secrets required by the function app (I guess, can\u2019t find documentation)."),Yv=n(),Gl=l("li"),Qv=i("File share xmthcricket01 which guessing from the name represents the function app"),Y=l("ul"),Fs=l("li"),Zv=i(".nuget        (capture NuGet dependencies)"),e1=n(),Xs=l("li"),t1=i(".ssh          (for connectivity)"),o1=n(),Us=l("li"),l1=i("data          (ASP.NET compilation snapshots, function secrets + sample data)"),r1=n(),Gs=l("li"),i1=i("LogFiles      (for if we opt to inject logging into our functions)"),s1=n(),Wl=l("li"),a1=i("site"),Q=l("ul"),Ws=l("li"),n1=i("deployments   (deployment settings + history - will need to be tidied up at some point)"),u1=n(),Vs=l("li"),c1=i("diagnostics   (diagnostics settings)"),p1=n(),$s=l("li"),f1=i("locks         (empty)"),h1=n(),Js=l("li"),d1=i("repository    (source code depending on deployment approach)"),m1=n(),Ks=l("li"),v1=i("wwwroot       (The published function app itself)"),qu=n(),pt=l("p"),b1=i("Makes sense, everything needed to make the app run is stored in a storage account we own, though don\u2019t need to actively manage (serverless)."),y1=l("br"),E1=i(`
I\u2019m not going to worry too much about the details except that:`),Ou=n(),ft=l("ul"),Ys=l("li"),w1=i("For automation purposes we need to replace the wwwroot directory contents"),_1=n(),Qs=l("li"),g1=i("Deployment history could build up and storage accounts are paid for by size, so cleanup may be required"),Hu=n(),Vl=l("h2"),I1=i("Create Function App with code"),Fu=n(),g=l("p"),A1=i("The most familiar way for me to create a C# HTTP trigger based function is the "),ao=l("a"),T1=i("dotnet CLI"),k1=i(":"),L1=l("br"),P1=n(),Zs=l("code"),z1=i("dotnet new func"),R1=i(" to create the project from within a target folder"),S1=l("br"),D1=n(),ea=l("code"),C1=i("dotnet new http"),M1=i(" to create a new http trigger function within a function app project"),B1=l("br"),N1=i(`
Producing the structure seen in the `),no=l("a"),j1=i("Azure functions C# Developer reference"),x1=i("."),Xu=n(),M=l("p"),q1=i("It is also possible using the "),uo=l("a"),O1=i("azure-functions-core-tools"),H1=i(":"),F1=l("br"),X1=n(),ta=l("code"),U1=i("func init"),G1=i(" to create a function app, selecting a runtime (dotnet, selected from list)"),W1=l("br"),V1=n(),oa=l("code"),$1=i("func new"),J1=i(" to create a function, C# httpTrigger"),Uu=n(),$l=l("p"),K1=i("The end result is very similar:"),Gu=n(),Re=l("ul"),la=l("li"),Y1=i(".csproj with netcoreapp2.1 set as the target framework"),Q1=n(),ra=l("li"),Z1=i("host.json with version set to \u201C2.0\u201D"),eb=n(),ia=l("li"),tb=i("local.settings.json"),Wu=n(),co=l("pre"),Vu=n(),Jl=l("ul"),sa=l("li"),ob=i("A hello world sample function; Company.Function.http"),$u=n(),po=l("pre"),Ju=n(),oe=l("p"),lb=i("Simple enough, an asynchronous JSON REST endpoint which accepts GET and POST methods, expects a / route, does some basic validation and returns a response."),rb=l("br"),ib=i(`
This is .NET Core so no surprises that logging is available by dependency injection.`),sb=l("br"),ab=i(`
This example has everything I need for now so no need to dwell on the details.`),nb=l("br"),ub=i(`
Time to build my own\u2026`),Ku=n(),fo=l("p"),ho=l("a"),cb=i("Mth.Darts.Cricket.Api.StartMatch"),pb=i(" should:"),Yu=n(),F=l("ul"),aa=l("li"),fb=i("accept POST only"),hb=n(),na=l("li"),db=i("expect a route of /api/matches"),mb=n(),ua=l("li"),vb=i("expect parameters of scoring_mode, max_rounds and a list of [player[]], or a single json object containing all three"),bb=n(),ca=l("li"),yb=i("reference the domain service, specifically the Match constructor to get back a Match object, tested elsewhere"),Eb=n(),pa=l("li"),wb=i("return a json object representing the Cricket match if all went well, an error message otherwise"),Qu=n(),Kl=l("h2"),_b=i("Testing Azure functions"),Zu=n(),Yl=l("p"),gb=i("There are several different facets to testing here:"),ec=n(),le=l("ol"),fa=l("li"),Ib=i("Logic - nothing to do with serverless design but the most important part in my opinion"),Ab=n(),ha=l("li"),Tb=i("Plumbing - does the function work as expected when called directly using an HttpRequest object?"),kb=n(),da=l("li"),Lb=i("Routing - does an HTTP request get picked up by the expected function?"),Pb=n(),ma=l("li"),zb=i("Integration - When deployed does everything just work?"),tc=n(),Ql=l("h3"),Rb=i("Testing logic"),oc=n(),de=l("p"),Sb=i("Nothing new here, create a test project using "),va=l("code"),Db=i("dotnet new xunit"),Cb=l("br"),Mb=i(`
I did make things awkward for myself by restricting access on as much as possible so had to tweak the project to `),mo=l("a"),Bb=i("make internals visible to the test project"),Nb=i("."),lc=n(),Zl=l("h3"),jb=i("Testing function plumbing"),rc=n(),ht=l("p"),xb=i("No need to repeat anything here, I followed the guide to "),vo=l("a"),qb=i("testing azure functions"),Ob=i(", extended it for multiple parameters and a different return value and used a JSON test file."),ic=n(),er=l("h3"),Hb=i("Testing function routing"),sc=n(),w=l("p"),Fb=i("In REST terms a match can be considered a "),ba=l("em"),Xb=i("resource"),Ub=i(", a member of the matches "),ya=l("em"),Gb=i("collection"),Wb=i("."),Vb=l("br"),$b=i(`
To create a match we need to pass parameters to the uri, repeating the player parameter as many times as required.`),Jb=l("br"),Kb=i(`
For a 2 player match between Van Gerwen and Taylor we need to`),Yb=l("br"),Qb=n(),Ea=l("code"),Zb=i("POST /api/v1/matches/?scoring_mode=Standard&max_rounds=0&player[]=Van%20Gerwen&player[]=Taylor"),e2=l("br"),t2=i(`
Initially there\u2019s no persistent data store, so this match isn\u2019t retrievable, but if it were it would be available at, e.g. /api/v1/matches/123.`),o2=l("br"),l2=i(`
Note that I converted player to player[] in the url, because this is what AngularJS and some backend frameworks consider correct, though I can\u2019t find a definitive answer on the matter anywhere.`),ac=n(),rt=l("p"),r2=i("To run Azure Functions locally from within the function app project use the Azure Functions Core Tools: "),wa=l("code"),i2=i("func start"),s2=l("br"),a2=i(`
I\u2019ve opted to manually test routing using Postman for the MVP but intend to automate this eventually, using one of:`),nc=n(),dt=l("ul"),tr=l("li"),n2=i("Postman CLI tool "),bo=l("a"),u2=i("Newman"),c2=n(),or=l("li"),p2=i(".Net Core "),yo=l("a"),f2=i("Integration tests"),uc=n(),lr=l("h2"),h2=i("Continuous Integration, Delivery & Deployment"),cc=n(),re=l("p"),d2=i("In modern software development there is no excuse to not have some form of continuous integration (CI)."),m2=l("br"),v2=i(`
Build and Test automation is usually easy and cheap to setup and pays for itself even in the short term.`),b2=l("br"),y2=i(`
It is also entirely within the control of the software development team.`),E2=l("br"),w2=i(`
How you implement this is dependent on the team and project requirements, for this project I\u2019m just building on the master branch.`),pc=n(),mt=l("p"),_2=i("Continuous delivery is just as valuable, all projects should strive for some degree of this, but it is significantly harder to implement."),g2=l("br"),I2=i(`
Release automation complexity depends on the technology stack and collaboration with TechOps but the benefits far outweigh the costs.`),fc=n(),Se=l("p"),A2=i("Continuous deployment takes this a step further, automating releases without human intervention, subject to quality gates from automated testing."),T2=l("br"),k2=i(`
This is a cultural thing, not all organisations or teams can work in this way for a myriad of reasons.`),L2=l("br"),P2=i(`
I can though, for this project, so that\u2019s the plan, straight to production after every build which passes tests.`),hc=n(),rr=l("h2"),z2=i("Build pipeline"),dc=n(),ir=l("p"),R2=i("Two mandatory requirements here:"),mc=n(),De=l("ul"),_a=l("li"),S2=i("Build automatically triggered every time the code is changed."),D2=n(),ga=l("li"),C2=i(`Build steps live with the code because who better to know how to build an application than the application developer?
And one optional requirement:`),M2=n(),Ia=l("li"),B2=i("Build should be target-agnostic for portability, to avoid vendor lock-in"),vc=n(),b=l("p"),N2=i("Focussing just on the mandatory requirements for the MVP I followed Microsoft\u2019s advice on "),Eo=l("a"),j2=i("Linking Azure DevOps to GitHub"),x2=i("."),q2=l("br"),O2=i(`
I chose the `),Aa=l("strong"),H2=i("GitHub App"),F2=i(` option because I didn\u2019t want it linked directly to my credentials.
In GitHub `),Ta=l("strong"),X2=i("Azure Pipelines"),U2=i(" now shows up under "),ka=l("em"),G2=i("Settings > Integration & services > Installed GitHub Apps"),W2=i(" where I can configure it to restrict access to specific repositories or remove it altogether."),V2=l("br"),$2=i(`
In Azure DevOps `),La=l("strong"),J2=i("mtempleheald"),K2=i(" now shows up under "),Pa=l("em"),Y2=i("Project Settings > Pipelines > Service Connections"),Q2=i(", I can disconnect it here but it tells me that any configuration must be done on GitHub."),bc=n(),Z=l("p"),Z2=i("During this process a default "),wo=l("a"),ey=i("azure-pipelines.yml"),ty=i(" file was presented to me with the option to commit it, which I accepted.  From here it didn\u2019t take long to configure a working build by chaining dotnet CLI commands together."),oy=l("br"),ly=i(`
It is very easy to break a build so having this set up early on is really important for stability, I\u2019d say that this is step 1 on the way to true DevOps, where the developers take responsibility for handover of artifacts.`),ry=l("br"),iy=i(`
Some nice visual feedback and convenient logging, plus a status badge is available for the project
`),_o=l("a"),sr=l("img"),yc=n(),ar=l("h3"),sy=i("Build steps"),Ec=n(),nr=l("p"),ay=i("Build steps used:"),wc=n(),B=l("ul"),go=l("li"),ny=i("script: "),za=l("code"),uy=i("dotnet --version"),cy=i(" - check that we know which version of .NET lives on the Microsoft-managed build agent"),py=n(),Io=l("li"),fy=i("script: "),Ra=l("code"),hy=i("dotnet build '<project>' --configuration $(buildConfiguration)"),dy=i(" - build a named project"),my=n(),Ao=l("li"),vy=i("task: "),Sa=l("code"),by=i("DotNetCoreCLI@2"),yy=i(" - run tests"),Ey=n(),To=l("li"),wy=i("script: "),Da=l("code"),_y=i("dotnet publish '<function_app_project>' --output '<target_dir>'"),gy=i(" - prepare function app artifacts for publication"),Iy=n(),ko=l("li"),Ay=i("task: "),Ca=l("code"),Ty=i("CopyFiles@2"),ky=i(" - copy specified files to artifact drop location"),Ly=n(),Lo=l("li"),Py=i("task: "),Ma=l("code"),zy=i("PublishBuildArtifacts@1"),Ry=i(" - publish the artifacts ready for the release pipeline"),_c=n(),ur=l("p"),Sy=i("output of dotnet publish:"),gc=n(),cr=l("ul"),pr=l("li"),Dy=i("FunctionApp"),me=l("ul"),Ba=l("li"),Cy=i("bin/"),My=n(),fr=l("li"),By=i("StartMatch"),Na=l("ul"),ja=l("li"),Ny=i("function.json"),jy=n(),xa=l("li"),xy=i("host.json"),qy=n(),ve=l("li"),Oy=i(`*.deps.json
which seems to match the `),Po=l("a"),Hy=i("continuous deployment requirements"),Fy=i("."),Xy=l("br"),Uy=i(`
What this doesn\u2019t make clear however is that the top level folder is not expected within the zip file.`),Gy=l("br"),Wy=i(`
This is important as it means that the build pipeline does not need to provide the name for the deployed artifact and facilitates a multi-environment deployment from a single build artifact (assuming everything else is parameterised appropriately).`),Ic=n(),hr=l("h2"),Vy=i("Azure DevOps Artifacts"),Ac=n(),Ce=l("p"),$y=i("It is good practice to keep build and release steps separate "),zo=l("a"),Jy=i("The 12 Factor App"),Ky=i("."),Yy=l("br"),Qy=i(`
This makes sense, there may be some overlap but build steps are developer controlled and release steps are about environment config and is more of a TechOps role unless you truly embrace DevOps.`),Tc=n(),X=l("p"),Zy=i("In the terminology of Azure DevOps I need to publish an "),qa=l("strong"),eE=i("artifact"),tE=i(" on the "),Oa=l("strong"),oE=i("build pipeline"),lE=i(" to make it available to the "),Ha=l("strong"),rE=i("release pipeline"),iE=i("."),sE=l("br"),aE=i(`
This is simple, but very easy to make mistakes, so it is useful to be able to debug pipeline execution.`),kc=n(),Ro=l("p"),nE=i("It helps to understand how files are stored on the build/release agents, "),So=l("a"),uE=i("pre-defined variables"),Lc=n(),vt=l("table"),Fa=l("thead"),be=l("tr"),Xa=l("th"),cE=i("Path structure"),pE=n(),Ua=l("th"),fE=i("System."),hE=n(),Ga=l("th"),dE=i("Build."),mE=n(),Wa=l("th"),vE=i("Agent."),bE=n(),S=l("tbody"),ye=l("tr"),Va=l("td"),yE=i("/agent/"),EE=n(),Pc=l("td"),wE=n(),zc=l("td"),_E=n(),$a=l("td"),gE=i("HomeDirectory"),IE=n(),Ee=l("tr"),Ja=l("td"),AE=i("/agent/work/"),TE=n(),Ka=l("td"),kE=i("WorkFolder"),LE=n(),Rc=l("td"),PE=n(),Ya=l("td"),zE=i("RootDirectory WorkFolder"),RE=n(),we=l("tr"),Qa=l("td"),SE=i("/agent/work/1"),DE=n(),Sc=l("td"),CE=n(),Dc=l("td"),ME=n(),Za=l("td"),BE=i("BuildDirectory"),NE=n(),_e=l("tr"),en=l("td"),jE=i("/agent/work/1/s"),xE=n(),tn=l("td"),qE=i("DefaultWorkingDirectory"),OE=n(),on=l("td"),HE=i("SourcesDirectory"),FE=n(),Cc=l("td"),XE=n(),ge=l("tr"),ln=l("td"),UE=i("/agent/work/1/b"),GE=n(),Mc=l("td"),WE=n(),rn=l("td"),VE=i("BinariesDirectory"),$E=n(),Bc=l("td"),JE=n(),Ie=l("tr"),sn=l("td"),KE=i("/agent/work/1/a"),YE=n(),Nc=l("td"),QE=n(),an=l("td"),ZE=i("ArtifactStagingDirectory StagingDirectory"),ew=n(),jc=l("td"),tw=n(),Ae=l("tr"),nn=l("td"),ow=i("/agent/work/r1/a"),lw=n(),un=l("td"),rw=i("ArtifactsDirectory DefaultWorkingDirectory"),iw=n(),xc=l("td"),sw=n(),cn=l("td"),aw=i("ReleaseDirectory"),qc=n(),dr=l("p"),nw=i("Most of these steps provide useful information but if it isn\u2019t enough we can add extra debug information:"),Oc=n(),bt=l("ul"),Do=l("li"),uw=i("To debug build steps add "),pn=l("code"),cw=i("system.debug: true"),pw=i(" to azure-pipelines.yml."),fw=n(),Co=l("li"),hw=i("To debug release steps add "),fn=l("em"),dw=i("system.debug"),mw=i(" to the Variables tab on the UI, with a value of true."),Hc=n(),mr=l("p"),vw=i("A notable issue I had was with the release pipeline being unable to find the published function app artifact, despite triple-checking paths and successful step execution:"),Fc=n(),yt=l("ul"),vr=l("li"),bw=i("Zip up function app - "),hn=l("em"),yw=i("Successfully created archive: /home/vsts/work/1/a/11.zip"),Ew=n(),dn=l("li"),ww=i("Publish Build Artifacts - no listed output (suspicious but successful)"),Xc=n(),Et=l("p"),_w=i("It turns out that the publish step was failing silently because I\u2019d put an incorrect parameter in.  I only figured this out by looking at the "),Mo=l("a"),gw=i("source code"),Iw=i(" of the suspicious step.  There are 2 allowed values for artifactType; \u2018Container\u2019 and \u2018FilePath\u2019.  Turns out I\u2019d been passing the description of container instead (\u2018Azure Pipelines/TFS\u2019) - oops!"),Uc=n(),br=l("ul"),Bo=l("li"),Aw=i("Publish Build Artifacts - "),mn=l("em"),Tw=i("Upload \u2018/home/vsts/work/1/a\u2019 to file container: \u2019#/2495698/drop\u2019"),kw=i(" - success!"),Gc=n(),yr=l("h2"),Lw=i("Release pipeline"),Wc=n(),U=l("p"),Pw=i("Azure DevOps release pipelines currently work differently from build pipelines, although release pipeline Configuration as code (YAML) is "),No=l("a"),zw=i("planned for 2018 Q4"),Rw=i("."),Sw=l("br"),Dw=i(`
That being said, tasks are common but categorised (build, utility, test, package, deploy, tool) - `),jo=l("a"),Cw=i("code"),Mw=i("."),Bw=l("br"),Nw=i(`
So there is nothing stopping me from adding release steps to the azure-pipelines.yml file above, but I\u2019m going to do it properly instead, keeping build and release separate by using the published artifacts.`),Vc=n(),Er=l("h3"),jw=i("Connecting the release pipeline to Azure"),$c=n(),y=l("p"),xw=i("The Azure Portal function app page has a "),vn=l("em"),qw=i("Deployment Center"),Ow=i(" tab, where you can configure a Git repository connection."),Hw=l("br"),Fw=i(`
This uses `),xo=l("a"),Xw=i("Kudo"),Uw=i(" which by default expects either 1 solution or 1 project to deploy, but can be "),qo=l("a"),Gw=i("customised"),Ww=i("."),Vw=l("br"),$w=i(`
It can also be customised in the Azure portal, by adding the target project (`),bn=l("em"),Jw=i("PROJECT = function-app/function-app.csproj"),Kw=i(")"),Yw=l("br"),Qw=i(`
to application settings `),yn=l("em"),Zw=i("Azure > Overview > Application Settings > Application Settings"),e3=i(`
I\u2019m uncomfortable with this approach for several reasons:`),Jc=n(),Me=l("ul"),En=l("li"),t3=i("The GitHub connection is tied directly to my account"),o3=n(),wn=l("li"),l3=i("This configuration is hidden away and easily forgotten, though I could address this using the custom .deployment file in the code."),r3=n(),_n=l("li"),i3=i("What about the other elements of the release?  Storage, static content, I want consistency in my releases."),Kc=n(),O=l("p"),s3=i("The better approach is to manage releases within an independent release pipeline (Azure DevOps), even when aiming for continuous deployment."),a3=l("br"),n3=i(`
This requires setting up an Azure Resource Manager (ARM) connection:`),u3=l("br"),c3=n(),gn=l("em"),p3=i("Azure DevOps > Project Settings > Pipelines > Service Connections > New Service Connection > Azure Resource Manager"),f3=l("br"),h3=i(`
For which I had to `),Oo=l("a"),d3=i("create a service principal"),m3=i(":"),Yc=n(),wt=l("ol"),In=l("li"),v3=i("Azure Portal > App Registrations > Create > Web App (url not important yet)"),b3=n(),An=l("li"),y3=i("Azure Portal > Subscriptions > ~MySubscription~ > IAM > Add role assignment > Contributor + App name"),Qc=n(),wr=l("p"),E3=i("I could now access the parameters required to add the connection:"),Zc=n(),Be=l("ul"),Ho=l("li"),w3=i("Tenant-Id:"),_3=l("br"),g3=i(`
Azure Portal > Azure Active Directory > Properties > Directory ID`),I3=n(),Fo=l("li"),A3=i("Application ID:"),T3=l("br"),k3=i(`
Azure Portal > App Registrations > ~My App~ > Application ID`),L3=n(),Xo=l("li"),P3=i("Authentication Key:"),z3=l("br"),R3=i(`
Azure Portal > App Registrations > ~My App~ > Settings > Keys`),ep=n(),_r=l("p"),S3=i("Hereafter release pipeline tasks simply need to refer to this connection and it just works."),tp=n(),gr=l("h3"),D3=i("Release pipeline steps"),op=n(),Ir=l("ul"),Ar=l("li"),Uo=l("a"),C3=i("ARM deployment"),M3=i(" - all infrastructure elements within the resource group, the equivalent of using the command line tools:"),lp=n(),Go=l("pre"),rp=n(),Ne=l("ul"),Tr=l("li"),Wo=l("a"),B3=i("Azure App Service Deploy (Preview)"),N3=i(" - azure function deployment to function app"),j3=n(),kr=l("li"),Vo=l("a"),x3=i("Azure File Copy (Preview)"),q3=i(" - static website copied to $web blob container"),O3=n(),Lr=l("li"),$o=l("a"),H3=i("Azure CLI"),F3=i(" - using the az command line tools to turn the blob container into a static website:"),ip=n(),Jo=l("pre"),sp=n(),Pr=l("h2"),X3=i("ARM templates for continuous deployment"),ap=n(),zr=l("p"),U3=i("I have come across ARM templates before and know that they\u2019re the recommended approach for (re)deploying Azure artifacts in a consistent fashion, but I\u2019ve never built any from scratch, so it is time to investigate.  My aim here is to develop a pattern which I can use again for another serverless app in Azure, without having to think about this stuff again.  This has been easily the most time-consuming part of this project."),np=n(),Rr=l("p"),G3=i("I want a single ARM template containing all aspects of the serverless application MVP:"),up=n(),je=l("ul"),Tn=l("li"),W3=i("Storage account for static file hosting"),V3=n(),kn=l("li"),$3=i("Storage account for function app support"),J3=n(),Ko=l("li"),K3=i("Function app (It is possible but makes little sense to "),Yo=l("a"),Y3=i("deploy functions themselves using ARM"),Q3=i(")"),cp=n(),_t=l("p"),Z3=i("ARM "),Qo=l("a"),e_=i("template structure"),t_=i(":"),pp=n(),G=l("ul"),Ln=l("li"),o_=i("parameters    - passed on execution, e.g. environment/ version/ build number"),l_=n(),Pn=l("li"),r_=i("variables     - build upon parameters and group names together for consistency"),i_=n(),zn=l("li"),s_=i("functions     - user-defined functions"),a_=n(),Sr=l("li"),n_=i("resources     - deploy stuff - "),Zo=l("a"),u_=i("intro"),c_=n(),Rn=l("li"),p_=i("outputs       - capture values from during execution in case further processing required, e.g. url available"),fp=n(),N=l("p"),f_=i("There are some useful "),el=l("a"),h_=i("quickStart templates"),d_=i(" to learn from, specifically "),tl=l("a"),m_=i("101-storage-account-create"),v_=i(" and "),ol=l("a"),b_=i("101-function-app-create-dynamic"),y_=i("."),E_=l("br"),w_=i(`
It can also be useful to create stuff manually once and view the generated script:`),__=l("br"),g_=i(`
Azure Portal > Resource Groups > %Resource Group% > Automation Script`),hp=n(),Dr=l("p"),I_=i("I also found it useful to briefly look at the REST APIs which ARM deployment use under the hood:"),dp=n(),gt=l("ul"),Sn=l("li"),ll=l("a"),A_=i("storage account REST API"),T_=n(),Dn=l("li"),rl=l("a"),k_=i("webapps REST API"),mp=n(),Cr=l("h3"),L_=i("Preparing the ARM template"),vp=n(),Mr=l("p"),P_=i("Starting with naming I want the following visible in the Azure Portal:"),bp=n(),ie=l("ul"),Cn=l("li"),z_=i("mthcricket01 (resource group)"),R_=n(),Mn=l("li"),S_=i("mthcricket01api (function app)"),D_=n(),Bn=l("li"),C_=i("mthcricket01apistorage (storage account required by function app)"),M_=n(),Nn=l("li"),B_=i("mthcricket01ui (storage account for static content)"),yp=n(),Br=l("p"),N_=i("This is easily achieved using variables:"),Ep=n(),il=l("pre"),wp=n(),se=l("p"),j_=i("The real details are in the resources section and this can get quite complicated; you have to learn Azure terminology, relationships and specify API versions."),x_=l("br"),q_=i(`
I\u2019ve found the most useful information in the `),sl=l("a"),O_=i("Azure template reference"),H_=i(" where apiVersion options are clear."),F_=l("br"),X_=i(`
This is also available through Azure PowerShell:`),_p=n(),al=l("pre"),gp=n(),It=l("p"),U_=i("It took me a long time to get to grips with apiVersion, in the end I realised that it was the tooling in VS Code that was causing the confusion with unnecessary warnings, I learnt to instead just perform a test run in PowerShell (requires the "),nl=l("a"),G_=i("Azure PowerShell module"),W_=i("):"),Ip=n(),ul=l("pre"),Ap=n(),xe=l("p"),V_=i("It is possible to have the template refer to the latest version, using "),jn=l("code"),$_=i("[providers('<provider>','<type>').apiVersions[0]]"),J_=i(" but this opens you up to breaking changes, so I\u2019m avoiding that route.  I do think that it is important to be on the latest version you can be, this is a process thing, add the upgrade step into any future template update tasks."),K_=l("br"),Y_=i(`
Once I was comfortable that I knew which versions I was aiming for I was able to get it done:`),Tp=n(),qe=l("ul"),xn=l("li"),cl=l("a"),Q_=i("Function App"),Z_=n(),qn=l("li"),pl=l("a"),e4=i("Hosting Plan for function app"),t4=n(),On=l("li"),fl=l("a"),o4=i("Storage Account"),kp=n(),Oe=l("p"),l4=i("Another awkward bit is configuring the "),hl=l("a"),r4=i("App Settings for Azure Functions"),i4=i("."),s4=l("br"),a4=i(`
properties > siteConfig > appSettings:`),Lp=n(),E=l("ul"),Nr=l("li"),n4=i("AzureWebJobsStorage == "),Hn=l("em"),u4=i("(DefaultEndpointsProtocol=https;AccountName=[name];AccountKey=[key])"),c4=n(),jr=l("li"),p4=i("AzureWebJobsDashboard == "),Fn=l("em"),f4=i("(DefaultEndpointsProtocol=https;AccountName=[name];AccountKey=[key])"),h4=n(),xr=l("li"),d4=i("WEBSITE_CONTENTAZUREFILECONNECTIONSTRING == "),Xn=l("em"),m4=i("(DefaultEndpointsProtocol=https;AccountName=[name];AccountKey=[key])"),v4=n(),qr=l("li"),b4=i("WEBSITE_CONTENTSHARE == "),Un=l("em"),y4=i("mthcricket01api"),E4=n(),Or=l("li"),w4=i("AzureWebJobsDisableHomepage == "),Gn=l("em"),_4=i("true"),g4=n(),Hr=l("li"),I4=i("FUNCTIONS_EXTENSION_VERSION == "),Wn=l("em"),A4=i("~2"),T4=n(),Fr=l("li"),k4=i("FUNCTIONS_WORKER_RUNTIME == "),Vn=l("em"),L4=i("dotnet"),P4=n(),dl=l("li"),z4=i("AzureWebJobsDotNetReleaseCompilation == "),$n=l("em"),R4=i("false"),S4=i(" (for debugging)"),D4=n(),Xr=l("li"),C4=i("APPINSIGHTS_INSTRUMENTATIONKEY == "),Jn=l("em"),M4=i("plan"),Pp=n(),At=l("p"),B4=i("I\u2019m still working through the nuances of functionapp deployment, I\u2019m getting internal server errors from Azure on the 2nd run through, having deployed fine the 1st run through.  The difficulty is primarily because this stuff is quite new and in flux, there are changes between "),ml=l("a"),N4=i("Runtime version 1 vs 2"),j4=i(" plus I\u2019ve chosen some awkward options like Linux hosting."),zp=n(),W=l("p"),x4=i("I opted part way through to adopt "),vl=l("a"),q4=i("Template Linking"),O4=i("."),H4=l("br"),F4=i(`
This was simply because the template was already becoming uncomfortably long though I\u2019m not sure this helped for my small project.`),X4=l("br"),U4=i(`
This didn\u2019t add too much complexity either, mostly moving the `),Kn=l("em"),G4=i("DependsOn"),W4=i("  settings from the resource itself, to the deployment of the resource and providing template outputs."),Rp=n(),V=l("p"),V4=i("I prefer this in principle because it is more modular.  For example the functionapp depends on the storage account connection string.  To get this you need to access the storage account API to get the key:"),$4=l("br"),J4=n(),Yn=l("code"),K4=i(`"value": "[listKeys(variables('StorageAccountName'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0])]"`),Y4=l("br"),Q4=i(`
The equivalent in PowerShell: `),Qn=l("code"),Z4=i("(Get-AzStorageAccountKey -ResourceGroupName <resource-group> -Name <storage-account>).key1"),eg=l("br"),tg=i(`
It feels right to me that this lives within the storage account creation template, not the function app, otherwise both templates need to manage apiVersions for the storage account API (although this example just uses latest).`),Sp=n(),Ur=l("h2"),og=i("Costs"),Dp=n(),$=l("p"),lg=i("This was never meant to be a serious production application, I\u2019m certainly not expecting it to scale to fully utilise serverless scaling capabilities."),rg=l("br"),ig=i(`
My intention was to use the `),bl=l("a"),sg=i("consumption plan"),ag=i(", therefore I was expecting it to be free or very close to."),ng=l("br"),ug=i(`
What I actually witnessed was that in the couple of weeks that I\u2019ve had something running I accrued \xA30.09 on API storage and nearly \xA35 on an App Service Plan.  I\u2019ve now addressed this, the ARM template was wrong, fixed by manually recreating all, viewing the generated Azure `),Zn=l("em"),cg=i("automation script"),pg=i(" and tweaking settings accordingly."),Cp=n(),Gr=l("h2"),fg=i("Summary"),Mp=n(),He=l("p"),hg=i("This project has been fairly successful so far, zero to "),yl=l("a"),dg=i("Live application"),mg=i(" in under a month."),vg=l("br"),bg=i(`
I\u2019ve also quite enjoyed bringing together lots of different elements I\u2019ve used to varying degrees to build something real.`),Bp=n(),Wr=l("p"),yg=i("It isn\u2019t perfect of course, there are some known issues:"),Np=n(),j=l("ul"),Vr=l("li"),eu=l("del"),Eg=i("Scores continue adding on even if all ticked off - API logic wrong"),wg=i(" Fixed"),_g=n(),tu=l("li"),ou=l("del"),gg=i("Plan costing money, something isn\u2019t right about the functionapp deployment yet, consumption plan should be free (at low volumes)."),Ig=n(),$r=l("li"),Ag=i("Clicking too quickly misrepresents the status as evidenced by the history of throws - 2 choices (possibly both):"),El=l("ul"),lu=l("li"),Tg=i("throttling within Angular controller, checksum-esque, possibly store actions in local queue before calling API (web worker?)"),kg=n(),ru=l("li"),Lg=i("incremement version within the API, check that requests are received in order, depends upon data persistence but may be better solution"),Pg=n(),iu=l("li"),zg=i("Skip function totally broken (symptom of the above)"),Rg=n(),wl=l("li"),Sg=i("Initial load is extremely slow (several seconds) and it "),su=l("em"),Dg=i("appears"),Cg=i(" to be broken.  Possibly send a dummy request in the background to hide this from the user."),Mg=n(),au=l("li"),Bg=i("Buttons jump about a bit due to flexbox/ grid layout and conditional display of skip, would be nice to fix this"),jp=n(),Jr=l("p"),Ng=i("There\u2019s also outstanding work to do:"),xp=n(),Tt=l("ul"),nu=l("li"),jg=i("Deployments building up in storage, no need to keep history of deployments so need to add clear step to release pipeline (start)."),xg=n(),uu=l("li"),qg=i("Better understand Azure\u2019s inner workings, or terminology at least, I feel that I\u2019m missing something (or the documentation is).  Possibly I\u2019m just more pedantic than most users, I want to understand it, not just get it working."),this.h()},l(t){st=r(t,"H1",{});var c=a(st);Pf=s(c,"Building a Serverless Application in Azure"),c.forEach(o),pu=u(t),at=r(t,"P",{});var qp=a(at);zf=s(qp,"Serverless computing is getting a lot of attention at the moment, touted as a great way to get to market quickly and popular with startups."),Rf=r(qp,"BR",{}),Sf=s(qp,`
My aim with this project is to add this tool to my arsenal by building a small but realistically complex proof of concept application:`),qp.forEach(o),fu=u(t),nt=r(t,"UL",{});var Op=a(nt);yi=r(Op,"LI",{});var AI=a(yi);Df=s(AI,"Backend built using Azure Functions written in C# and .NET Core"),AI.forEach(o),Cf=u(Op),Ei=r(Op,"LI",{});var TI=a(Ei);Mf=s(TI,"Frontend hosted in Azure Static Content Hosting using AngularJS to connect to the backend service"),TI.forEach(o),Op.forEach(o),hu=u(t),gl=r(t,"P",{});var kI=a(gl);Bf=s(kI,"Key principles:"),kI.forEach(o),du=u(t),C=r(t,"UL",{});var ae=a(C);wi=r(ae,"LI",{});var LI=a(wi);Nf=s(LI,"Separate application logic and integration details to facilite unit testing, portability and supportability."),LI.forEach(o),jf=u(ae),_i=r(ae,"LI",{});var PI=a(_i);xf=s(PI,"Continuous deployment (CD) where every check-in to the master branch results in a production release."),PI.forEach(o),qf=u(ae),gi=r(ae,"LI",{});var zI=a(gi);Of=s(zI,"Open source, because why not?  Maybe it is interesting to someone, or perhaps I can learn something from others who see it."),zI.forEach(o),Hf=u(ae),Ii=r(ae,"LI",{});var RI=a(Ii);Ff=s(RI,"Try to be cloud agnostic, realistically this is only partially possible at present but let\u2019s see where we get up to."),RI.forEach(o),Xf=u(ae),Ai=r(ae,"LI",{});var SI=a(Ai);Uf=s(SI,"Establish clear cost management, arguably the most important factor regarding practicality."),SI.forEach(o),Gf=u(ae),Ti=r(ae,"LI",{});var DI=a(Ti);Wf=s(DI,"Minimum Viable Product (MVP) - A working application with no data persistence and limited security."),DI.forEach(o),ae.forEach(o),mu=u(t),Gt=r(t,"H3",{});var Og=a(Gt);Wt=r(Og,"A",{href:!0,rel:!0});var CI=a(Wt);Vf=s(CI,"Live application"),CI.forEach(o),$f=s(Og,"."),Og.forEach(o),vu=u(t),Il=r(t,"H2",{});var MI=a(Il);Jf=s(MI,"Application Logic"),MI.forEach(o),bu=u(t),ee=r(t,"P",{});var kt=a(ee);Kf=s(kt,"Cricket is a darts game played by 2 or more people."),Yf=r(kt,"BR",{}),Qf=s(kt,`
The idea is to tick off 3 of each of the numbers 15-20 plus the bull (centre bull counts double).`),Zf=r(kt,"BR",{}),eh=s(kt,`
Hitting a number which you\u2019ve already completed but others haven\u2019t scores you those points.`),th=r(kt,"BR",{}),oh=s(kt,`
The winner is the first to complete this checklist and also have the best score overall.`),kt.forEach(o),yu=u(t),ut=r(t,"TABLE",{});var Hp=a(ut);ki=r(Hp,"THEAD",{});var BI=a(ki);h=r(BI,"TR",{});var I=a(h);Li=r(I,"TH",{});var NI=a(Li);lh=s(NI,"Player"),NI.forEach(o),rh=u(I),Pi=r(I,"TH",{});var jI=a(Pi);ih=s(jI,"Bull"),jI.forEach(o),sh=u(I),zi=r(I,"TH",{});var xI=a(zi);ah=s(xI,"20"),xI.forEach(o),nh=u(I),Ri=r(I,"TH",{});var qI=a(Ri);uh=s(qI,"19"),qI.forEach(o),ch=u(I),Si=r(I,"TH",{});var OI=a(Si);ph=s(OI,"18"),OI.forEach(o),fh=u(I),Di=r(I,"TH",{});var HI=a(Di);hh=s(HI,"17"),HI.forEach(o),dh=u(I),Ci=r(I,"TH",{});var FI=a(Ci);mh=s(FI,"16"),FI.forEach(o),vh=u(I),Mi=r(I,"TH",{});var XI=a(Mi);bh=s(XI,"15"),XI.forEach(o),yh=u(I),Bi=r(I,"TH",{});var UI=a(Bi);Eh=s(UI,"Points"),UI.forEach(o),wh=u(I),Ni=r(I,"TH",{});var GI=a(Ni);_h=s(GI,"Ranking"),GI.forEach(o),I.forEach(o),BI.forEach(o),gh=u(Hp),Vt=r(Hp,"TBODY",{});var Fp=a(Vt);d=r(Fp,"TR",{});var A=a(d);ji=r(A,"TD",{});var WI=a(ji);Ih=s(WI,"Player 1"),WI.forEach(o),Ah=u(A),xi=r(A,"TD",{});var VI=a(xi);Th=s(VI,"XXX"),VI.forEach(o),kh=u(A),qi=r(A,"TD",{});var $I=a(qi);Lh=s($I,"XXX"),$I.forEach(o),Ph=u(A),Oi=r(A,"TD",{});var JI=a(Oi);zh=s(JI,"XXX"),JI.forEach(o),Rh=u(A),Hi=r(A,"TD",{});var KI=a(Hi);Sh=s(KI,"XXX"),KI.forEach(o),Dh=u(A),Fi=r(A,"TD",{});var YI=a(Fi);Ch=s(YI,"XXX"),YI.forEach(o),Mh=u(A),Xi=r(A,"TD",{});var QI=a(Xi);Bh=s(QI,"XXX"),QI.forEach(o),Nh=u(A),Ui=r(A,"TD",{});var ZI=a(Ui);jh=s(ZI,"XXX"),ZI.forEach(o),xh=u(A),Gi=r(A,"TD",{});var e5=a(Gi);qh=s(e5,"0"),e5.forEach(o),Oh=u(A),Wi=r(A,"TD",{});var t5=a(Wi);Hh=s(t5,"1"),t5.forEach(o),A.forEach(o),Fh=u(Fp),m=r(Fp,"TR",{});var T=a(m);Vi=r(T,"TD",{});var o5=a(Vi);Xh=s(o5,"Player 2"),o5.forEach(o),Uh=u(T),$i=r(T,"TD",{});var l5=a($i);Gh=s(l5,"XXX"),l5.forEach(o),Wh=u(T),Ji=r(T,"TD",{});var r5=a(Ji);Vh=s(r5,"XXX"),r5.forEach(o),$h=u(T),Ki=r(T,"TD",{});var i5=a(Ki);Jh=s(i5,"XXX"),i5.forEach(o),Kh=u(T),Yi=r(T,"TD",{});var s5=a(Yi);Yh=s(s5,"XXX"),s5.forEach(o),Qh=u(T),Qi=r(T,"TD",{});var a5=a(Qi);Zh=s(a5,"XXX"),a5.forEach(o),ed=u(T),Zi=r(T,"TD",{});var n5=a(Zi);td=s(n5,"XXX"),n5.forEach(o),od=u(T),es=r(T,"TD",{});var u5=a(es);ld=s(u5,"XXX"),u5.forEach(o),rd=u(T),ts=r(T,"TD",{});var c5=a(ts);id=s(c5,"100"),c5.forEach(o),sd=u(T),os=r(T,"TD",{});var p5=a(os);ad=s(p5,"2"),p5.forEach(o),T.forEach(o),Fp.forEach(o),Hp.forEach(o),Eu=u(t),Al=r(t,"P",{});var f5=a(Al);nd=s(f5,"There are additional extended rules too, notably:"),f5.forEach(o),wu=u(t),ke=r(t,"UL",{});var Kr=a(ke);ls=r(Kr,"LI",{});var h5=a(ls);ud=s(h5,"Cutthroat - scores go on everybody else, not you, the winner has the lowest score at the end"),h5.forEach(o),cd=u(Kr),rs=r(Kr,"LI",{});var d5=a(rs);pd=s(d5,"Require 3 - If all 3 hits on a number aren\u2019t completed within a single visit they aren\u2019t saved for the next visit"),d5.forEach(o),fd=u(Kr),is=r(Kr,"LI",{});var m5=a(is);hd=s(m5,"Unlimited vs round-based, usually 20 rounds"),m5.forEach(o),Kr.forEach(o),_u=u(t),Tl=r(t,"H2",{});var v5=a(Tl);dd=s(v5,"Development process"),v5.forEach(o),gu=u(t),v=r(t,"OL",{});var L=a(v);Qe=r(L,"LI",{});var Yr=a(Qe);md=s(Yr,"Set up version control."),vd=r(Yr,"BR",{}),bd=s(Yr,`
I\u2019ve opted to use a GitHub-hosted `),$t=r(Yr,"A",{href:!0,rel:!0});var b5=a($t);yd=s(b5,"Git repository"),b5.forEach(o),Ed=s(Yr,"."),Yr.forEach(o),wd=u(L),Ze=r(L,"LI",{});var Qr=a(Ze);_d=s(Qr,"Set up a development environment."),gd=r(Qr,"BR",{}),Id=s(Qr,`
I\u2019ve chosen VS Code on Windows with extensions C#, .NET Core Test Explorer, Azure Functions.`),Ad=r(Qr,"BR",{}),Td=s(Qr,`
I\u2019m working alone, there\u2019s no need for collaboration tools for this project, documentation to be housed with the code.`),Qr.forEach(o),kd=u(L),Jt=r(L,"LI",{});var Xp=a(Jt);Ld=s(Xp,"Write the domain logic (C#, .NET Standard), ignorant of hosting considerations."),Pd=r(Xp,"BR",{}),zd=s(Xp,`
Testing (xUnit) with a pragmatic TDD approach, that is I\u2019m not writing code just to pass tests, but I am writing tests first.`),Xp.forEach(o),Rd=u(L),fe=r(L,"LI",{});var Lt=a(fe);Sd=s(Lt,"Configure build pipeline, triggered from check-in to master."),Dd=r(Lt,"BR",{}),Cd=s(Lt,`
Azure DevOps uses `),Kt=r(Lt,"A",{href:!0,rel:!0});var y5=a(Kt);Md=s(y5,"azure-pipelines.yml"),y5.forEach(o),Bd=s(Lt,"."),Nd=r(Lt,"BR",{}),jd=s(Lt,`
I\u2019m a little uncomfortable now in terms of vendor lock-in, but at least I\u2019m building CI in from the start, defined in the codebase, can switch later.`),Lt.forEach(o),xd=u(L),Yt=r(L,"LI",{});var Up=a(Yt);qd=s(Up,"Build the function wrappers (API) referencing the tested domain project (with tests) and add to build pipeline."),Od=r(Up,"BR",{}),Hd=s(Up,`
Now I\u2019m learning.  It is immediately clear that this code can never be portable to AWS, GCP etc, wrappers would instead need to be built separately.`),Up.forEach(o),Fd=u(L),he=r(L,"LI",{});var Pt=a(he);Xd=s(Pt,"Configure release pipeline, triggered from successful build/test."),Ud=r(Pt,"BR",{}),Gd=s(Pt,`
Azure DevOps this is currently UI-driven, YAML expected `),Qt=r(Pt,"A",{href:!0,rel:!0});var E5=a(Qt);Wd=s(E5,"2018 Q4"),E5.forEach(o),Vd=s(Pt,"."),$d=r(Pt,"BR",{}),Jd=s(Pt,`
Again, this is worryingly Azure-specific but it has to be to some extent, we\u2019re now connecting to the platform itself.`),Pt.forEach(o),Kd=u(L),ss=r(L,"LI",{});var w5=a(ss);Yd=s(w5,"Build independent integration tests, this is on hold but will probably use Postman on the command line (Newman)."),w5.forEach(o),Qd=u(L),Zt=r(L,"LI",{});var Gp=a(Zt);Zd=s(Gp,"Build the user interface and add to build/ release pipelines."),em=r(Gp,"BR",{}),tm=s(Gp,`
I stick with consistent naming convention for collation purposes but this is an AngularJS (for now) project, not .NET.`),Gp.forEach(o),om=u(L),as=r(L,"LI",{});var _5=a(as);lm=s(_5,"Manual live smoke testing."),_5.forEach(o),L.forEach(o),Iu=u(t),kl=r(t,"H2",{});var g5=a(kl);rm=s(g5,"Code structure and naming"),g5.forEach(o),Au=u(t),Ll=r(t,"P",{});var I5=a(Ll);im=s(I5,"Projects:"),I5.forEach(o),Tu=u(t),H=r(t,"UL",{});var Fe=a(H);Pl=r(Fe,"LI",{});var Hg=a(Pl);sm=s(Hg,"Mth.Darts.Cricket"),eo=r(Hg,"UL",{});var Wp=a(eo);ns=r(Wp,"LI",{});var A5=a(ns);am=s(A5,"Domain service (business logic), C#, .NET Standard"),A5.forEach(o),nm=u(Wp),us=r(Wp,"LI",{});var T5=a(us);um=s(T5,"Minimise dependencies to maximise portability, reduce build times and improve supportability."),T5.forEach(o),Wp.forEach(o),Hg.forEach(o),cm=u(Fe),zl=r(Fe,"LI",{});var Fg=a(zl);pm=s(Fg,"Mth.Darts.Cricket.Tests"),cs=r(Fg,"UL",{});var k5=a(cs);ps=r(k5,"LI",{});var L5=a(ps);fm=s(L5,"Business logic tests, C#, xUnit"),L5.forEach(o),k5.forEach(o),Fg.forEach(o),hm=u(Fe),Rl=r(Fe,"LI",{});var Xg=a(Rl);dm=s(Xg,"Mth.Darts.Cricket.Api"),fs=r(Xg,"UL",{});var P5=a(fs);hs=r(P5,"LI",{});var z5=a(hs);mm=s(z5,"Application service (Azure functions) referencing the domain service, C#, .NET Core"),z5.forEach(o),P5.forEach(o),Xg.forEach(o),vm=u(Fe),Sl=r(Fe,"LI",{});var Ug=a(Sl);bm=s(Ug,"Mth.Darts.Cricket.Api.Tests"),ds=r(Ug,"UL",{});var R5=a(ds);ms=r(R5,"LI",{});var S5=a(ms);ym=s(S5,"Application service tests, C#, xUnit"),S5.forEach(o),R5.forEach(o),Ug.forEach(o),Em=u(Fe),Dl=r(Fe,"LI",{});var Gg=a(Dl);wm=s(Gg,"Mth.Darts.Cricket.Ui"),vs=r(Gg,"UL",{});var D5=a(vs);bs=r(D5,"LI",{});var C5=a(bs);_m=s(C5,"User interface, static web pages using AngularJS to reference the Api"),C5.forEach(o),D5.forEach(o),Gg.forEach(o),Fe.forEach(o),ku=u(t),Cl=r(t,"H2",{});var M5=a(Cl);gm=s(M5,"Standards"),M5.forEach(o),Lu=u(t),_=r(t,"UL",{});var x=a(_);ys=r(x,"LI",{});var B5=a(ys);Im=s(B5,"1 file per class/ struct, even if only used in one place"),B5.forEach(o),Am=u(x),Es=r(x,"LI",{});var N5=a(Es);Tm=s(N5,"Files names in a collation-friendly way, nested items to be prefixed with the parent name"),N5.forEach(o),km=u(x),ws=r(x,"LI",{});var j5=a(ws);Lm=s(j5,"Comments where they add value, must describe the why not the how (that should be obvious from the code)"),j5.forEach(o),Pm=u(x),Ml=r(x,"LI",{});var Wg=a(Ml);zm=s(Wg,"Hold scoreboard state in nested structs not classes because "),to=r(Wg,"A",{href:!0,rel:!0});var x5=a(to);Rm=s(x5,"has no identity, defined by its data"),x5.forEach(o),Wg.forEach(o),Sm=u(x),Bl=r(x,"LI",{});var Vg=a(Bl);Dm=s(Vg,"JSON Serialisation using Newtonsoft.Json - "),oo=r(Vg,"A",{href:!0,rel:!0});var q5=a(oo);Cm=s(q5,"use attributes to expose private properties"),q5.forEach(o),Vg.forEach(o),Mm=u(x),_s=r(x,"LI",{});var O5=a(_s);Bm=s(O5,"Adopt REST API standards, e.g. avoid verbs, pluralise collections always"),O5.forEach(o),Nm=u(x),gs=r(x,"LI",{});var H5=a(gs);jm=s(H5,"single .gitignore file at root as usually recommended"),H5.forEach(o),xm=u(x),Is=r(x,"LI",{});var F5=a(Is);qm=s(F5,".vscode settings checked-in could help future developers, no harm to the code to keep them"),F5.forEach(o),x.forEach(o),Pu=u(t),Nl=r(t,"H2",{});var X5=a(Nl);Om=s(X5,"API"),X5.forEach(o),zu=u(t),jl=r(t,"P",{});var U5=a(jl);Hm=s(U5,"The connection between front and backend is through a REST API (Azure Function App) with 4 key endpoints (Functions):"),U5.forEach(o),Ru=u(t),te=r(t,"UL",{});var zt=a(te);xl=r(zt,"LI",{});var $g=a(xl);Fm=s($g,"create match"),et=r($g,"UL",{});var Zr=a(et);As=r(Zr,"LI",{});var G5=a(As);Xm=s(G5,"requires list of players and match settings"),G5.forEach(o),Um=u(Zr),Ts=r(Zr,"LI",{});var W5=a(Ts);Gm=s(W5,"returns new match, initialised with zero scores/ hits"),W5.forEach(o),Wm=u(Zr),ks=r(Zr,"LI",{});var V5=a(ks);Vm=s(V5,"POST: /api/matches"),V5.forEach(o),Zr.forEach(o),$g.forEach(o),$m=u(zt),ql=r(zt,"LI",{});var Jg=a(ql);Jm=s(Jg,"throw dart"),tt=r(Jg,"UL",{});var ei=a(tt);Ls=r(ei,"LI",{});var $5=a(Ls);Km=s($5,"requires current match state and details of the current throw"),$5.forEach(o),Ym=u(ei),Ps=r(ei,"LI",{});var J5=a(Ps);Qm=s(J5,"returns updated match"),J5.forEach(o),Zm=u(ei),zs=r(ei,"LI",{});var K5=a(zs);ev=s(K5,"POST: /api/matches/123/"),K5.forEach(o),ei.forEach(o),Jg.forEach(o),tv=u(zt),Ol=r(zt,"LI",{});var Kg=a(Ol);ov=s(Kg,"undo throw"),ot=r(Kg,"UL",{});var ti=a(ot);Rs=r(ti,"LI",{});var Y5=a(Rs);lv=s(Y5,"requires current match state (including history of throws)"),Y5.forEach(o),rv=u(ti),Ss=r(ti,"LI",{});var Q5=a(Ss);iv=s(Q5,"returns updated match state"),Q5.forEach(o),sv=u(ti),Ds=r(ti,"LI",{});var Z5=a(Ds);av=s(Z5,"POST: /api/matches/123/undo"),Z5.forEach(o),ti.forEach(o),Kg.forEach(o),nv=u(zt),Hl=r(zt,"LI",{});var Yg=a(Hl);uv=s(Yg,"start new game"),lt=r(Yg,"UL",{});var oi=a(lt);Cs=r(oi,"LI",{});var eA=a(Cs);cv=s(eA,"requires current match state (with current game marked as complete)"),eA.forEach(o),pv=u(oi),Ms=r(oi,"LI",{});var tA=a(Ms);fv=s(tA,"returns updated match state"),tA.forEach(o),hv=u(oi),Bs=r(oi,"LI",{});var oA=a(Bs);dv=s(oA,"POST: /api/matches/123/newgame"),oA.forEach(o),oi.forEach(o),Yg.forEach(o),zt.forEach(o),Su=u(t),ct=r(t,"P",{});var Vp=a(ct);mv=s(Vp,"These are all independently deterministic but obviously need to be combined in a logical order to manage the flow of a Cricket darts match."),vv=r(Vp,"BR",{}),bv=s(Vp,`
This activity will be left to the caller to manage for the MVP, with persistent this may change.`),Vp.forEach(o),Du=u(t),Fl=r(t,"H2",{});var lA=a(Fl);yv=s(lA,"Azure Functions"),lA.forEach(o),Cu=u(t),k=r(t,"P",{});var J=a(k);Ev=s(J,"A key component of this serverless design is the use of scalable functions, for which I\u2019ve chosen Azure Functions."),wv=r(J,"BR",{}),_v=s(J,`
Azure deploys functions within an umbrella entity called a `),Ns=r(J,"STRONG",{});var rA=a(Ns);gv=s(rA,"Function App"),rA.forEach(o),Iv=s(J,"."),Av=r(J,"BR",{}),Tv=s(J,`
Function Apps are considered infrastructure and the recommended deployment approach is to use `),lo=r(J,"A",{href:!0,rel:!0});var iA=a(lo);kv=s(iA,"Azure Resource Manager (ARM) templates"),iA.forEach(o),Lv=s(J,"."),Pv=r(J,"BR",{}),zv=s(J,`
Functions are considered code and the recommended deployment approach is to use `),ro=r(J,"A",{href:!0,rel:!0});var sA=a(ro);Rv=s(sA,"Zip Deployment"),sA.forEach(o),Sv=s(J,"."),J.forEach(o),Mu=u(t),Xl=r(t,"H2",{});var aA=a(Xl);Dv=s(aA,"Create Function App manually"),aA.forEach(o),Bu=u(t),Ul=r(t,"P",{});var nA=a(Ul);Cv=s(nA,"In the interest of understanding before coding I experimented by manually creating a Function App using QuickStart (Azure Portal)."),nA.forEach(o),Nu=u(t),Le=r(t,"UL",{});var li=a(Le);js=r(li,"LI",{});var uA=a(js);Mv=s(uA,"resource group:             xmthcricket01"),uA.forEach(o),Bv=u(li),xs=r(li,"LI",{});var cA=a(xs);Nv=s(cA,"function app:               xmthcricket01functionapp"),cA.forEach(o),jv=u(li),qs=r(li,"LI",{});var pA=a(qs);xv=s(pA,"storage account (required): xmthcricket01storageaccount"),pA.forEach(o),li.forEach(o),ju=u(t),Pe=r(t,"P",{});var ri=a(Pe);qv=s(ri,"I feel that standards are important from the start so I settled on naming convention %owner%%application%%version%%resource%."),Ov=r(ri,"BR",{}),Hv=s(ri,`
I avoided underscores, hyphens, mixed case because storage accounts don\u2019t allow them and consistency trumps appearance in my opinion.`),Fv=r(ri,"BR",{}),Xv=s(ri,`
I then examined the storage account, since I didn\u2019t understand its purpose.`),ri.forEach(o),xu=u(t),ze=r(t,"UL",{});var ii=a(ze);io=r(ii,"LI",{});var $p=a(io);Uv=s($p,"Blob container "),Os=r($p,"EM",{});var fA=a(Os);Gv=s(fA,"azure-webjobs-hosts"),fA.forEach(o),Wv=s($p," used for storing blob receipts, ensuring that each blob is only processed once."),$p.forEach(o),Vv=u(ii),so=r(ii,"LI",{});var Jp=a(so);$v=s(Jp,"Blob container "),Hs=r(Jp,"EM",{});var hA=a(Hs);Jv=s(hA,"azure-webjobs-secrets"),hA.forEach(o),Kv=s(Jp," used for storing keys/secrets required by the function app (I guess, can\u2019t find documentation)."),Jp.forEach(o),Yv=u(ii),Gl=r(ii,"LI",{});var Qg=a(Gl);Qv=s(Qg,"File share xmthcricket01 which guessing from the name represents the function app"),Y=r(Qg,"UL",{});var Xe=a(Y);Fs=r(Xe,"LI",{});var dA=a(Fs);Zv=s(dA,".nuget        (capture NuGet dependencies)"),dA.forEach(o),e1=u(Xe),Xs=r(Xe,"LI",{});var mA=a(Xs);t1=s(mA,".ssh          (for connectivity)"),mA.forEach(o),o1=u(Xe),Us=r(Xe,"LI",{});var vA=a(Us);l1=s(vA,"data          (ASP.NET compilation snapshots, function secrets + sample data)"),vA.forEach(o),r1=u(Xe),Gs=r(Xe,"LI",{});var bA=a(Gs);i1=s(bA,"LogFiles      (for if we opt to inject logging into our functions)"),bA.forEach(o),s1=u(Xe),Wl=r(Xe,"LI",{});var Zg=a(Wl);a1=s(Zg,"site"),Q=r(Zg,"UL",{});var Ue=a(Q);Ws=r(Ue,"LI",{});var yA=a(Ws);n1=s(yA,"deployments   (deployment settings + history - will need to be tidied up at some point)"),yA.forEach(o),u1=u(Ue),Vs=r(Ue,"LI",{});var EA=a(Vs);c1=s(EA,"diagnostics   (diagnostics settings)"),EA.forEach(o),p1=u(Ue),$s=r(Ue,"LI",{});var wA=a($s);f1=s(wA,"locks         (empty)"),wA.forEach(o),h1=u(Ue),Js=r(Ue,"LI",{});var _A=a(Js);d1=s(_A,"repository    (source code depending on deployment approach)"),_A.forEach(o),m1=u(Ue),Ks=r(Ue,"LI",{});var gA=a(Ks);v1=s(gA,"wwwroot       (The published function app itself)"),gA.forEach(o),Ue.forEach(o),Zg.forEach(o),Xe.forEach(o),Qg.forEach(o),ii.forEach(o),qu=u(t),pt=r(t,"P",{});var Kp=a(pt);b1=s(Kp,"Makes sense, everything needed to make the app run is stored in a storage account we own, though don\u2019t need to actively manage (serverless)."),y1=r(Kp,"BR",{}),E1=s(Kp,`
I\u2019m not going to worry too much about the details except that:`),Kp.forEach(o),Ou=u(t),ft=r(t,"UL",{});var Yp=a(ft);Ys=r(Yp,"LI",{});var IA=a(Ys);w1=s(IA,"For automation purposes we need to replace the wwwroot directory contents"),IA.forEach(o),_1=u(Yp),Qs=r(Yp,"LI",{});var AA=a(Qs);g1=s(AA,"Deployment history could build up and storage accounts are paid for by size, so cleanup may be required"),AA.forEach(o),Yp.forEach(o),Hu=u(t),Vl=r(t,"H2",{});var TA=a(Vl);I1=s(TA,"Create Function App with code"),TA.forEach(o),Fu=u(t),g=r(t,"P",{});var q=a(g);A1=s(q,"The most familiar way for me to create a C# HTTP trigger based function is the "),ao=r(q,"A",{href:!0,rel:!0});var kA=a(ao);T1=s(kA,"dotnet CLI"),kA.forEach(o),k1=s(q,":"),L1=r(q,"BR",{}),P1=u(q),Zs=r(q,"CODE",{});var LA=a(Zs);z1=s(LA,"dotnet new func"),LA.forEach(o),R1=s(q," to create the project from within a target folder"),S1=r(q,"BR",{}),D1=u(q),ea=r(q,"CODE",{});var PA=a(ea);C1=s(PA,"dotnet new http"),PA.forEach(o),M1=s(q," to create a new http trigger function within a function app project"),B1=r(q,"BR",{}),N1=s(q,`
Producing the structure seen in the `),no=r(q,"A",{href:!0,rel:!0});var zA=a(no);j1=s(zA,"Azure functions C# Developer reference"),zA.forEach(o),x1=s(q,"."),q.forEach(o),Xu=u(t),M=r(t,"P",{});var ne=a(M);q1=s(ne,"It is also possible using the "),uo=r(ne,"A",{href:!0,rel:!0});var RA=a(uo);O1=s(RA,"azure-functions-core-tools"),RA.forEach(o),H1=s(ne,":"),F1=r(ne,"BR",{}),X1=u(ne),ta=r(ne,"CODE",{});var SA=a(ta);U1=s(SA,"func init"),SA.forEach(o),G1=s(ne," to create a function app, selecting a runtime (dotnet, selected from list)"),W1=r(ne,"BR",{}),V1=u(ne),oa=r(ne,"CODE",{});var DA=a(oa);$1=s(DA,"func new"),DA.forEach(o),J1=s(ne," to create a function, C# httpTrigger"),ne.forEach(o),Uu=u(t),$l=r(t,"P",{});var CA=a($l);K1=s(CA,"The end result is very similar:"),CA.forEach(o),Gu=u(t),Re=r(t,"UL",{});var si=a(Re);la=r(si,"LI",{});var MA=a(la);Y1=s(MA,".csproj with netcoreapp2.1 set as the target framework"),MA.forEach(o),Q1=u(si),ra=r(si,"LI",{});var BA=a(ra);Z1=s(BA,"host.json with version set to \u201C2.0\u201D"),BA.forEach(o),eb=u(si),ia=r(si,"LI",{});var NA=a(ia);tb=s(NA,"local.settings.json"),NA.forEach(o),si.forEach(o),Wu=u(t),co=r(t,"PRE",{class:!0});var hT=a(co);hT.forEach(o),Vu=u(t),Jl=r(t,"UL",{});var jA=a(Jl);sa=r(jA,"LI",{});var xA=a(sa);ob=s(xA,"A hello world sample function; Company.Function.http"),xA.forEach(o),jA.forEach(o),$u=u(t),po=r(t,"PRE",{class:!0});var dT=a(po);dT.forEach(o),Ju=u(t),oe=r(t,"P",{});var Rt=a(oe);lb=s(Rt,"Simple enough, an asynchronous JSON REST endpoint which accepts GET and POST methods, expects a / route, does some basic validation and returns a response."),rb=r(Rt,"BR",{}),ib=s(Rt,`
This is .NET Core so no surprises that logging is available by dependency injection.`),sb=r(Rt,"BR",{}),ab=s(Rt,`
This example has everything I need for now so no need to dwell on the details.`),nb=r(Rt,"BR",{}),ub=s(Rt,`
Time to build my own\u2026`),Rt.forEach(o),Ku=u(t),fo=r(t,"P",{});var eI=a(fo);ho=r(eI,"A",{href:!0,rel:!0});var qA=a(ho);cb=s(qA,"Mth.Darts.Cricket.Api.StartMatch"),qA.forEach(o),pb=s(eI," should:"),eI.forEach(o),Yu=u(t),F=r(t,"UL",{});var Ge=a(F);aa=r(Ge,"LI",{});var OA=a(aa);fb=s(OA,"accept POST only"),OA.forEach(o),hb=u(Ge),na=r(Ge,"LI",{});var HA=a(na);db=s(HA,"expect a route of /api/matches"),HA.forEach(o),mb=u(Ge),ua=r(Ge,"LI",{});var FA=a(ua);vb=s(FA,"expect parameters of scoring_mode, max_rounds and a list of [player[]], or a single json object containing all three"),FA.forEach(o),bb=u(Ge),ca=r(Ge,"LI",{});var XA=a(ca);yb=s(XA,"reference the domain service, specifically the Match constructor to get back a Match object, tested elsewhere"),XA.forEach(o),Eb=u(Ge),pa=r(Ge,"LI",{});var UA=a(pa);wb=s(UA,"return a json object representing the Cricket match if all went well, an error message otherwise"),UA.forEach(o),Ge.forEach(o),Qu=u(t),Kl=r(t,"H2",{});var GA=a(Kl);_b=s(GA,"Testing Azure functions"),GA.forEach(o),Zu=u(t),Yl=r(t,"P",{});var WA=a(Yl);gb=s(WA,"There are several different facets to testing here:"),WA.forEach(o),ec=u(t),le=r(t,"OL",{});var St=a(le);fa=r(St,"LI",{});var VA=a(fa);Ib=s(VA,"Logic - nothing to do with serverless design but the most important part in my opinion"),VA.forEach(o),Ab=u(St),ha=r(St,"LI",{});var $A=a(ha);Tb=s($A,"Plumbing - does the function work as expected when called directly using an HttpRequest object?"),$A.forEach(o),kb=u(St),da=r(St,"LI",{});var JA=a(da);Lb=s(JA,"Routing - does an HTTP request get picked up by the expected function?"),JA.forEach(o),Pb=u(St),ma=r(St,"LI",{});var KA=a(ma);zb=s(KA,"Integration - When deployed does everything just work?"),KA.forEach(o),St.forEach(o),tc=u(t),Ql=r(t,"H3",{});var YA=a(Ql);Rb=s(YA,"Testing logic"),YA.forEach(o),oc=u(t),de=r(t,"P",{});var _l=a(de);Sb=s(_l,"Nothing new here, create a test project using "),va=r(_l,"CODE",{});var QA=a(va);Db=s(QA,"dotnet new xunit"),QA.forEach(o),Cb=r(_l,"BR",{}),Mb=s(_l,`
I did make things awkward for myself by restricting access on as much as possible so had to tweak the project to `),mo=r(_l,"A",{href:!0,rel:!0});var ZA=a(mo);Bb=s(ZA,"make internals visible to the test project"),ZA.forEach(o),Nb=s(_l,"."),_l.forEach(o),lc=u(t),Zl=r(t,"H3",{});var e0=a(Zl);jb=s(e0,"Testing function plumbing"),e0.forEach(o),rc=u(t),ht=r(t,"P",{});var Qp=a(ht);xb=s(Qp,"No need to repeat anything here, I followed the guide to "),vo=r(Qp,"A",{href:!0,rel:!0});var t0=a(vo);qb=s(t0,"testing azure functions"),t0.forEach(o),Ob=s(Qp,", extended it for multiple parameters and a different return value and used a JSON test file."),Qp.forEach(o),ic=u(t),er=r(t,"H3",{});var o0=a(er);Hb=s(o0,"Testing function routing"),o0.forEach(o),sc=u(t),w=r(t,"P",{});var D=a(w);Fb=s(D,"In REST terms a match can be considered a "),ba=r(D,"EM",{});var l0=a(ba);Xb=s(l0,"resource"),l0.forEach(o),Ub=s(D,", a member of the matches "),ya=r(D,"EM",{});var r0=a(ya);Gb=s(r0,"collection"),r0.forEach(o),Wb=s(D,"."),Vb=r(D,"BR",{}),$b=s(D,`
To create a match we need to pass parameters to the uri, repeating the player parameter as many times as required.`),Jb=r(D,"BR",{}),Kb=s(D,`
For a 2 player match between Van Gerwen and Taylor we need to`),Yb=r(D,"BR",{}),Qb=u(D),Ea=r(D,"CODE",{});var i0=a(Ea);Zb=s(i0,"POST /api/v1/matches/?scoring_mode=Standard&max_rounds=0&player[]=Van%20Gerwen&player[]=Taylor"),i0.forEach(o),e2=r(D,"BR",{}),t2=s(D,`
Initially there\u2019s no persistent data store, so this match isn\u2019t retrievable, but if it were it would be available at, e.g. /api/v1/matches/123.`),o2=r(D,"BR",{}),l2=s(D,`
Note that I converted player to player[] in the url, because this is what AngularJS and some backend frameworks consider correct, though I can\u2019t find a definitive answer on the matter anywhere.`),D.forEach(o),ac=u(t),rt=r(t,"P",{});var cu=a(rt);r2=s(cu,"To run Azure Functions locally from within the function app project use the Azure Functions Core Tools: "),wa=r(cu,"CODE",{});var s0=a(wa);i2=s(s0,"func start"),s0.forEach(o),s2=r(cu,"BR",{}),a2=s(cu,`
I\u2019ve opted to manually test routing using Postman for the MVP but intend to automate this eventually, using one of:`),cu.forEach(o),nc=u(t),dt=r(t,"UL",{});var Zp=a(dt);tr=r(Zp,"LI",{});var tI=a(tr);n2=s(tI,"Postman CLI tool "),bo=r(tI,"A",{href:!0,rel:!0});var a0=a(bo);u2=s(a0,"Newman"),a0.forEach(o),tI.forEach(o),c2=u(Zp),or=r(Zp,"LI",{});var oI=a(or);p2=s(oI,".Net Core "),yo=r(oI,"A",{href:!0,rel:!0});var n0=a(yo);f2=s(n0,"Integration tests"),n0.forEach(o),oI.forEach(o),Zp.forEach(o),uc=u(t),lr=r(t,"H2",{});var u0=a(lr);h2=s(u0,"Continuous Integration, Delivery & Deployment"),u0.forEach(o),cc=u(t),re=r(t,"P",{});var Dt=a(re);d2=s(Dt,"In modern software development there is no excuse to not have some form of continuous integration (CI)."),m2=r(Dt,"BR",{}),v2=s(Dt,`
Build and Test automation is usually easy and cheap to setup and pays for itself even in the short term.`),b2=r(Dt,"BR",{}),y2=s(Dt,`
It is also entirely within the control of the software development team.`),E2=r(Dt,"BR",{}),w2=s(Dt,`
How you implement this is dependent on the team and project requirements, for this project I\u2019m just building on the master branch.`),Dt.forEach(o),pc=u(t),mt=r(t,"P",{});var ef=a(mt);_2=s(ef,"Continuous delivery is just as valuable, all projects should strive for some degree of this, but it is significantly harder to implement."),g2=r(ef,"BR",{}),I2=s(ef,`
Release automation complexity depends on the technology stack and collaboration with TechOps but the benefits far outweigh the costs.`),ef.forEach(o),fc=u(t),Se=r(t,"P",{});var ai=a(Se);A2=s(ai,"Continuous deployment takes this a step further, automating releases without human intervention, subject to quality gates from automated testing."),T2=r(ai,"BR",{}),k2=s(ai,`
This is a cultural thing, not all organisations or teams can work in this way for a myriad of reasons.`),L2=r(ai,"BR",{}),P2=s(ai,`
I can though, for this project, so that\u2019s the plan, straight to production after every build which passes tests.`),ai.forEach(o),hc=u(t),rr=r(t,"H2",{});var c0=a(rr);z2=s(c0,"Build pipeline"),c0.forEach(o),dc=u(t),ir=r(t,"P",{});var p0=a(ir);R2=s(p0,"Two mandatory requirements here:"),p0.forEach(o),mc=u(t),De=r(t,"UL",{});var ni=a(De);_a=r(ni,"LI",{});var f0=a(_a);S2=s(f0,"Build automatically triggered every time the code is changed."),f0.forEach(o),D2=u(ni),ga=r(ni,"LI",{});var h0=a(ga);C2=s(h0,`Build steps live with the code because who better to know how to build an application than the application developer?
And one optional requirement:`),h0.forEach(o),M2=u(ni),Ia=r(ni,"LI",{});var d0=a(Ia);B2=s(d0,"Build should be target-agnostic for portability, to avoid vendor lock-in"),d0.forEach(o),ni.forEach(o),vc=u(t),b=r(t,"P",{});var P=a(b);N2=s(P,"Focussing just on the mandatory requirements for the MVP I followed Microsoft\u2019s advice on "),Eo=r(P,"A",{href:!0,rel:!0});var m0=a(Eo);j2=s(m0,"Linking Azure DevOps to GitHub"),m0.forEach(o),x2=s(P,"."),q2=r(P,"BR",{}),O2=s(P,`
I chose the `),Aa=r(P,"STRONG",{});var v0=a(Aa);H2=s(v0,"GitHub App"),v0.forEach(o),F2=s(P,` option because I didn\u2019t want it linked directly to my credentials.
In GitHub `),Ta=r(P,"STRONG",{});var b0=a(Ta);X2=s(b0,"Azure Pipelines"),b0.forEach(o),U2=s(P," now shows up under "),ka=r(P,"EM",{});var y0=a(ka);G2=s(y0,"Settings > Integration & services > Installed GitHub Apps"),y0.forEach(o),W2=s(P," where I can configure it to restrict access to specific repositories or remove it altogether."),V2=r(P,"BR",{}),$2=s(P,`
In Azure DevOps `),La=r(P,"STRONG",{});var E0=a(La);J2=s(E0,"mtempleheald"),E0.forEach(o),K2=s(P," now shows up under "),Pa=r(P,"EM",{});var w0=a(Pa);Y2=s(w0,"Project Settings > Pipelines > Service Connections"),w0.forEach(o),Q2=s(P,", I can disconnect it here but it tells me that any configuration must be done on GitHub."),P.forEach(o),bc=u(t),Z=r(t,"P",{});var it=a(Z);Z2=s(it,"During this process a default "),wo=r(it,"A",{href:!0,rel:!0});var _0=a(wo);ey=s(_0,"azure-pipelines.yml"),_0.forEach(o),ty=s(it," file was presented to me with the option to commit it, which I accepted.  From here it didn\u2019t take long to configure a working build by chaining dotnet CLI commands together."),oy=r(it,"BR",{}),ly=s(it,`
It is very easy to break a build so having this set up early on is really important for stability, I\u2019d say that this is step 1 on the way to true DevOps, where the developers take responsibility for handover of artifacts.`),ry=r(it,"BR",{}),iy=s(it,`
Some nice visual feedback and convenient logging, plus a status badge is available for the project
`),_o=r(it,"A",{href:!0,rel:!0});var g0=a(_o);sr=r(g0,"IMG",{src:!0,alt:!0}),g0.forEach(o),it.forEach(o),yc=u(t),ar=r(t,"H3",{});var I0=a(ar);sy=s(I0,"Build steps"),I0.forEach(o),Ec=u(t),nr=r(t,"P",{});var A0=a(nr);ay=s(A0,"Build steps used:"),A0.forEach(o),wc=u(t),B=r(t,"UL",{});var ue=a(B);go=r(ue,"LI",{});var tf=a(go);ny=s(tf,"script: "),za=r(tf,"CODE",{});var T0=a(za);uy=s(T0,"dotnet --version"),T0.forEach(o),cy=s(tf," - check that we know which version of .NET lives on the Microsoft-managed build agent"),tf.forEach(o),py=u(ue),Io=r(ue,"LI",{});var of=a(Io);fy=s(of,"script: "),Ra=r(of,"CODE",{});var k0=a(Ra);hy=s(k0,"dotnet build '<project>' --configuration $(buildConfiguration)"),k0.forEach(o),dy=s(of," - build a named project"),of.forEach(o),my=u(ue),Ao=r(ue,"LI",{});var lf=a(Ao);vy=s(lf,"task: "),Sa=r(lf,"CODE",{});var L0=a(Sa);by=s(L0,"DotNetCoreCLI@2"),L0.forEach(o),yy=s(lf," - run tests"),lf.forEach(o),Ey=u(ue),To=r(ue,"LI",{});var rf=a(To);wy=s(rf,"script: "),Da=r(rf,"CODE",{});var P0=a(Da);_y=s(P0,"dotnet publish '<function_app_project>' --output '<target_dir>'"),P0.forEach(o),gy=s(rf," - prepare function app artifacts for publication"),rf.forEach(o),Iy=u(ue),ko=r(ue,"LI",{});var sf=a(ko);Ay=s(sf,"task: "),Ca=r(sf,"CODE",{});var z0=a(Ca);Ty=s(z0,"CopyFiles@2"),z0.forEach(o),ky=s(sf," - copy specified files to artifact drop location"),sf.forEach(o),Ly=u(ue),Lo=r(ue,"LI",{});var af=a(Lo);Py=s(af,"task: "),Ma=r(af,"CODE",{});var R0=a(Ma);zy=s(R0,"PublishBuildArtifacts@1"),R0.forEach(o),Ry=s(af," - publish the artifacts ready for the release pipeline"),af.forEach(o),ue.forEach(o),_c=u(t),ur=r(t,"P",{});var S0=a(ur);Sy=s(S0,"output of dotnet publish:"),S0.forEach(o),gc=u(t),cr=r(t,"UL",{});var D0=a(cr);pr=r(D0,"LI",{});var lI=a(pr);Dy=s(lI,"FunctionApp"),me=r(lI,"UL",{});var Ct=a(me);Ba=r(Ct,"LI",{});var C0=a(Ba);Cy=s(C0,"bin/"),C0.forEach(o),My=u(Ct),fr=r(Ct,"LI",{});var rI=a(fr);By=s(rI,"StartMatch"),Na=r(rI,"UL",{});var M0=a(Na);ja=r(M0,"LI",{});var B0=a(ja);Ny=s(B0,"function.json"),B0.forEach(o),M0.forEach(o),rI.forEach(o),jy=u(Ct),xa=r(Ct,"LI",{});var N0=a(xa);xy=s(N0,"host.json"),N0.forEach(o),qy=u(Ct),ve=r(Ct,"LI",{});var Mt=a(ve);Oy=s(Mt,`*.deps.json
which seems to match the `),Po=r(Mt,"A",{href:!0,rel:!0});var j0=a(Po);Hy=s(j0,"continuous deployment requirements"),j0.forEach(o),Fy=s(Mt,"."),Xy=r(Mt,"BR",{}),Uy=s(Mt,`
What this doesn\u2019t make clear however is that the top level folder is not expected within the zip file.`),Gy=r(Mt,"BR",{}),Wy=s(Mt,`
This is important as it means that the build pipeline does not need to provide the name for the deployed artifact and facilitates a multi-environment deployment from a single build artifact (assuming everything else is parameterised appropriately).`),Mt.forEach(o),Ct.forEach(o),lI.forEach(o),D0.forEach(o),Ic=u(t),hr=r(t,"H2",{});var x0=a(hr);Vy=s(x0,"Azure DevOps Artifacts"),x0.forEach(o),Ac=u(t),Ce=r(t,"P",{});var ui=a(Ce);$y=s(ui,"It is good practice to keep build and release steps separate "),zo=r(ui,"A",{href:!0,rel:!0});var q0=a(zo);Jy=s(q0,"The 12 Factor App"),q0.forEach(o),Ky=s(ui,"."),Yy=r(ui,"BR",{}),Qy=s(ui,`
This makes sense, there may be some overlap but build steps are developer controlled and release steps are about environment config and is more of a TechOps role unless you truly embrace DevOps.`),ui.forEach(o),Tc=u(t),X=r(t,"P",{});var We=a(X);Zy=s(We,"In the terminology of Azure DevOps I need to publish an "),qa=r(We,"STRONG",{});var O0=a(qa);eE=s(O0,"artifact"),O0.forEach(o),tE=s(We," on the "),Oa=r(We,"STRONG",{});var H0=a(Oa);oE=s(H0,"build pipeline"),H0.forEach(o),lE=s(We," to make it available to the "),Ha=r(We,"STRONG",{});var F0=a(Ha);rE=s(F0,"release pipeline"),F0.forEach(o),iE=s(We,"."),sE=r(We,"BR",{}),aE=s(We,`
This is simple, but very easy to make mistakes, so it is useful to be able to debug pipeline execution.`),We.forEach(o),kc=u(t),Ro=r(t,"P",{});var iI=a(Ro);nE=s(iI,"It helps to understand how files are stored on the build/release agents, "),So=r(iI,"A",{href:!0,rel:!0});var X0=a(So);uE=s(X0,"pre-defined variables"),X0.forEach(o),iI.forEach(o),Lc=u(t),vt=r(t,"TABLE",{});var nf=a(vt);Fa=r(nf,"THEAD",{});var U0=a(Fa);be=r(U0,"TR",{});var Bt=a(be);Xa=r(Bt,"TH",{});var G0=a(Xa);cE=s(G0,"Path structure"),G0.forEach(o),pE=u(Bt),Ua=r(Bt,"TH",{});var W0=a(Ua);fE=s(W0,"System."),W0.forEach(o),hE=u(Bt),Ga=r(Bt,"TH",{});var V0=a(Ga);dE=s(V0,"Build."),V0.forEach(o),mE=u(Bt),Wa=r(Bt,"TH",{});var $0=a(Wa);vE=s($0,"Agent."),$0.forEach(o),Bt.forEach(o),U0.forEach(o),bE=u(nf),S=r(nf,"TBODY",{});var K=a(S);ye=r(K,"TR",{});var Nt=a(ye);Va=r(Nt,"TD",{});var J0=a(Va);yE=s(J0,"/agent/"),J0.forEach(o),EE=u(Nt),Pc=r(Nt,"TD",{}),a(Pc).forEach(o),wE=u(Nt),zc=r(Nt,"TD",{}),a(zc).forEach(o),_E=u(Nt),$a=r(Nt,"TD",{});var K0=a($a);gE=s(K0,"HomeDirectory"),K0.forEach(o),Nt.forEach(o),IE=u(K),Ee=r(K,"TR",{});var jt=a(Ee);Ja=r(jt,"TD",{});var Y0=a(Ja);AE=s(Y0,"/agent/work/"),Y0.forEach(o),TE=u(jt),Ka=r(jt,"TD",{});var Q0=a(Ka);kE=s(Q0,"WorkFolder"),Q0.forEach(o),LE=u(jt),Rc=r(jt,"TD",{}),a(Rc).forEach(o),PE=u(jt),Ya=r(jt,"TD",{});var Z0=a(Ya);zE=s(Z0,"RootDirectory WorkFolder"),Z0.forEach(o),jt.forEach(o),RE=u(K),we=r(K,"TR",{});var xt=a(we);Qa=r(xt,"TD",{});var e6=a(Qa);SE=s(e6,"/agent/work/1"),e6.forEach(o),DE=u(xt),Sc=r(xt,"TD",{}),a(Sc).forEach(o),CE=u(xt),Dc=r(xt,"TD",{}),a(Dc).forEach(o),ME=u(xt),Za=r(xt,"TD",{});var t6=a(Za);BE=s(t6,"BuildDirectory"),t6.forEach(o),xt.forEach(o),NE=u(K),_e=r(K,"TR",{});var qt=a(_e);en=r(qt,"TD",{});var o6=a(en);jE=s(o6,"/agent/work/1/s"),o6.forEach(o),xE=u(qt),tn=r(qt,"TD",{});var l6=a(tn);qE=s(l6,"DefaultWorkingDirectory"),l6.forEach(o),OE=u(qt),on=r(qt,"TD",{});var r6=a(on);HE=s(r6,"SourcesDirectory"),r6.forEach(o),FE=u(qt),Cc=r(qt,"TD",{}),a(Cc).forEach(o),qt.forEach(o),XE=u(K),ge=r(K,"TR",{});var Ot=a(ge);ln=r(Ot,"TD",{});var i6=a(ln);UE=s(i6,"/agent/work/1/b"),i6.forEach(o),GE=u(Ot),Mc=r(Ot,"TD",{}),a(Mc).forEach(o),WE=u(Ot),rn=r(Ot,"TD",{});var s6=a(rn);VE=s(s6,"BinariesDirectory"),s6.forEach(o),$E=u(Ot),Bc=r(Ot,"TD",{}),a(Bc).forEach(o),Ot.forEach(o),JE=u(K),Ie=r(K,"TR",{});var Ht=a(Ie);sn=r(Ht,"TD",{});var a6=a(sn);KE=s(a6,"/agent/work/1/a"),a6.forEach(o),YE=u(Ht),Nc=r(Ht,"TD",{}),a(Nc).forEach(o),QE=u(Ht),an=r(Ht,"TD",{});var n6=a(an);ZE=s(n6,"ArtifactStagingDirectory StagingDirectory"),n6.forEach(o),ew=u(Ht),jc=r(Ht,"TD",{}),a(jc).forEach(o),Ht.forEach(o),tw=u(K),Ae=r(K,"TR",{});var Ft=a(Ae);nn=r(Ft,"TD",{});var u6=a(nn);ow=s(u6,"/agent/work/r1/a"),u6.forEach(o),lw=u(Ft),un=r(Ft,"TD",{});var c6=a(un);rw=s(c6,"ArtifactsDirectory DefaultWorkingDirectory"),c6.forEach(o),iw=u(Ft),xc=r(Ft,"TD",{}),a(xc).forEach(o),sw=u(Ft),cn=r(Ft,"TD",{});var p6=a(cn);aw=s(p6,"ReleaseDirectory"),p6.forEach(o),Ft.forEach(o),K.forEach(o),nf.forEach(o),qc=u(t),dr=r(t,"P",{});var f6=a(dr);nw=s(f6,"Most of these steps provide useful information but if it isn\u2019t enough we can add extra debug information:"),f6.forEach(o),Oc=u(t),bt=r(t,"UL",{});var uf=a(bt);Do=r(uf,"LI",{});var cf=a(Do);uw=s(cf,"To debug build steps add "),pn=r(cf,"CODE",{});var h6=a(pn);cw=s(h6,"system.debug: true"),h6.forEach(o),pw=s(cf," to azure-pipelines.yml."),cf.forEach(o),fw=u(uf),Co=r(uf,"LI",{});var pf=a(Co);hw=s(pf,"To debug release steps add "),fn=r(pf,"EM",{});var d6=a(fn);dw=s(d6,"system.debug"),d6.forEach(o),mw=s(pf," to the Variables tab on the UI, with a value of true."),pf.forEach(o),uf.forEach(o),Hc=u(t),mr=r(t,"P",{});var m6=a(mr);vw=s(m6,"A notable issue I had was with the release pipeline being unable to find the published function app artifact, despite triple-checking paths and successful step execution:"),m6.forEach(o),Fc=u(t),yt=r(t,"UL",{});var ff=a(yt);vr=r(ff,"LI",{});var sI=a(vr);bw=s(sI,"Zip up function app - "),hn=r(sI,"EM",{});var v6=a(hn);yw=s(v6,"Successfully created archive: /home/vsts/work/1/a/11.zip"),v6.forEach(o),sI.forEach(o),Ew=u(ff),dn=r(ff,"LI",{});var b6=a(dn);ww=s(b6,"Publish Build Artifacts - no listed output (suspicious but successful)"),b6.forEach(o),ff.forEach(o),Xc=u(t),Et=r(t,"P",{});var hf=a(Et);_w=s(hf,"It turns out that the publish step was failing silently because I\u2019d put an incorrect parameter in.  I only figured this out by looking at the "),Mo=r(hf,"A",{href:!0,rel:!0});var y6=a(Mo);gw=s(y6,"source code"),y6.forEach(o),Iw=s(hf," of the suspicious step.  There are 2 allowed values for artifactType; \u2018Container\u2019 and \u2018FilePath\u2019.  Turns out I\u2019d been passing the description of container instead (\u2018Azure Pipelines/TFS\u2019) - oops!"),hf.forEach(o),Uc=u(t),br=r(t,"UL",{});var E6=a(br);Bo=r(E6,"LI",{});var df=a(Bo);Aw=s(df,"Publish Build Artifacts - "),mn=r(df,"EM",{});var w6=a(mn);Tw=s(w6,"Upload \u2018/home/vsts/work/1/a\u2019 to file container: \u2019#/2495698/drop\u2019"),w6.forEach(o),kw=s(df," - success!"),df.forEach(o),E6.forEach(o),Gc=u(t),yr=r(t,"H2",{});var _6=a(yr);Lw=s(_6,"Release pipeline"),_6.forEach(o),Wc=u(t),U=r(t,"P",{});var Ve=a(U);Pw=s(Ve,"Azure DevOps release pipelines currently work differently from build pipelines, although release pipeline Configuration as code (YAML) is "),No=r(Ve,"A",{href:!0,rel:!0});var g6=a(No);zw=s(g6,"planned for 2018 Q4"),g6.forEach(o),Rw=s(Ve,"."),Sw=r(Ve,"BR",{}),Dw=s(Ve,`
That being said, tasks are common but categorised (build, utility, test, package, deploy, tool) - `),jo=r(Ve,"A",{href:!0,rel:!0});var I6=a(jo);Cw=s(I6,"code"),I6.forEach(o),Mw=s(Ve,"."),Bw=r(Ve,"BR",{}),Nw=s(Ve,`
So there is nothing stopping me from adding release steps to the azure-pipelines.yml file above, but I\u2019m going to do it properly instead, keeping build and release separate by using the published artifacts.`),Ve.forEach(o),Vc=u(t),Er=r(t,"H3",{});var A6=a(Er);jw=s(A6,"Connecting the release pipeline to Azure"),A6.forEach(o),$c=u(t),y=r(t,"P",{});var z=a(y);xw=s(z,"The Azure Portal function app page has a "),vn=r(z,"EM",{});var T6=a(vn);qw=s(T6,"Deployment Center"),T6.forEach(o),Ow=s(z," tab, where you can configure a Git repository connection."),Hw=r(z,"BR",{}),Fw=s(z,`
This uses `),xo=r(z,"A",{href:!0,rel:!0});var k6=a(xo);Xw=s(k6,"Kudo"),k6.forEach(o),Uw=s(z," which by default expects either 1 solution or 1 project to deploy, but can be "),qo=r(z,"A",{href:!0,rel:!0});var L6=a(qo);Gw=s(L6,"customised"),L6.forEach(o),Ww=s(z,"."),Vw=r(z,"BR",{}),$w=s(z,`
It can also be customised in the Azure portal, by adding the target project (`),bn=r(z,"EM",{});var P6=a(bn);Jw=s(P6,"PROJECT = function-app/function-app.csproj"),P6.forEach(o),Kw=s(z,")"),Yw=r(z,"BR",{}),Qw=s(z,`
to application settings `),yn=r(z,"EM",{});var z6=a(yn);Zw=s(z6,"Azure > Overview > Application Settings > Application Settings"),z6.forEach(o),e3=s(z,`
I\u2019m uncomfortable with this approach for several reasons:`),z.forEach(o),Jc=u(t),Me=r(t,"UL",{});var ci=a(Me);En=r(ci,"LI",{});var R6=a(En);t3=s(R6,"The GitHub connection is tied directly to my account"),R6.forEach(o),o3=u(ci),wn=r(ci,"LI",{});var S6=a(wn);l3=s(S6,"This configuration is hidden away and easily forgotten, though I could address this using the custom .deployment file in the code."),S6.forEach(o),r3=u(ci),_n=r(ci,"LI",{});var D6=a(_n);i3=s(D6,"What about the other elements of the release?  Storage, static content, I want consistency in my releases."),D6.forEach(o),ci.forEach(o),Kc=u(t),O=r(t,"P",{});var Te=a(O);s3=s(Te,"The better approach is to manage releases within an independent release pipeline (Azure DevOps), even when aiming for continuous deployment."),a3=r(Te,"BR",{}),n3=s(Te,`
This requires setting up an Azure Resource Manager (ARM) connection:`),u3=r(Te,"BR",{}),c3=u(Te),gn=r(Te,"EM",{});var C6=a(gn);p3=s(C6,"Azure DevOps > Project Settings > Pipelines > Service Connections > New Service Connection > Azure Resource Manager"),C6.forEach(o),f3=r(Te,"BR",{}),h3=s(Te,`
For which I had to `),Oo=r(Te,"A",{href:!0,rel:!0});var M6=a(Oo);d3=s(M6,"create a service principal"),M6.forEach(o),m3=s(Te,":"),Te.forEach(o),Yc=u(t),wt=r(t,"OL",{});var mf=a(wt);In=r(mf,"LI",{});var B6=a(In);v3=s(B6,"Azure Portal > App Registrations > Create > Web App (url not important yet)"),B6.forEach(o),b3=u(mf),An=r(mf,"LI",{});var N6=a(An);y3=s(N6,"Azure Portal > Subscriptions > ~MySubscription~ > IAM > Add role assignment > Contributor + App name"),N6.forEach(o),mf.forEach(o),Qc=u(t),wr=r(t,"P",{});var j6=a(wr);E3=s(j6,"I could now access the parameters required to add the connection:"),j6.forEach(o),Zc=u(t),Be=r(t,"UL",{});var pi=a(Be);Ho=r(pi,"LI",{});var vf=a(Ho);w3=s(vf,"Tenant-Id:"),_3=r(vf,"BR",{}),g3=s(vf,`
Azure Portal > Azure Active Directory > Properties > Directory ID`),vf.forEach(o),I3=u(pi),Fo=r(pi,"LI",{});var bf=a(Fo);A3=s(bf,"Application ID:"),T3=r(bf,"BR",{}),k3=s(bf,`
Azure Portal > App Registrations > ~My App~ > Application ID`),bf.forEach(o),L3=u(pi),Xo=r(pi,"LI",{});var yf=a(Xo);P3=s(yf,"Authentication Key:"),z3=r(yf,"BR",{}),R3=s(yf,`
Azure Portal > App Registrations > ~My App~ > Settings > Keys`),yf.forEach(o),pi.forEach(o),ep=u(t),_r=r(t,"P",{});var x6=a(_r);S3=s(x6,"Hereafter release pipeline tasks simply need to refer to this connection and it just works."),x6.forEach(o),tp=u(t),gr=r(t,"H3",{});var q6=a(gr);D3=s(q6,"Release pipeline steps"),q6.forEach(o),op=u(t),Ir=r(t,"UL",{});var O6=a(Ir);Ar=r(O6,"LI",{});var aI=a(Ar);Uo=r(aI,"A",{href:!0,rel:!0});var H6=a(Uo);C3=s(H6,"ARM deployment"),H6.forEach(o),M3=s(aI," - all infrastructure elements within the resource group, the equivalent of using the command line tools:"),aI.forEach(o),O6.forEach(o),lp=u(t),Go=r(t,"PRE",{class:!0});var mT=a(Go);mT.forEach(o),rp=u(t),Ne=r(t,"UL",{});var fi=a(Ne);Tr=r(fi,"LI",{});var nI=a(Tr);Wo=r(nI,"A",{href:!0,rel:!0});var F6=a(Wo);B3=s(F6,"Azure App Service Deploy (Preview)"),F6.forEach(o),N3=s(nI," - azure function deployment to function app"),nI.forEach(o),j3=u(fi),kr=r(fi,"LI",{});var uI=a(kr);Vo=r(uI,"A",{href:!0,rel:!0});var X6=a(Vo);x3=s(X6,"Azure File Copy (Preview)"),X6.forEach(o),q3=s(uI," - static website copied to $web blob container"),uI.forEach(o),O3=u(fi),Lr=r(fi,"LI",{});var cI=a(Lr);$o=r(cI,"A",{href:!0,rel:!0});var U6=a($o);H3=s(U6,"Azure CLI"),U6.forEach(o),F3=s(cI," - using the az command line tools to turn the blob container into a static website:"),cI.forEach(o),fi.forEach(o),ip=u(t),Jo=r(t,"PRE",{class:!0});var vT=a(Jo);vT.forEach(o),sp=u(t),Pr=r(t,"H2",{});var G6=a(Pr);X3=s(G6,"ARM templates for continuous deployment"),G6.forEach(o),ap=u(t),zr=r(t,"P",{});var W6=a(zr);U3=s(W6,"I have come across ARM templates before and know that they\u2019re the recommended approach for (re)deploying Azure artifacts in a consistent fashion, but I\u2019ve never built any from scratch, so it is time to investigate.  My aim here is to develop a pattern which I can use again for another serverless app in Azure, without having to think about this stuff again.  This has been easily the most time-consuming part of this project."),W6.forEach(o),np=u(t),Rr=r(t,"P",{});var V6=a(Rr);G3=s(V6,"I want a single ARM template containing all aspects of the serverless application MVP:"),V6.forEach(o),up=u(t),je=r(t,"UL",{});var hi=a(je);Tn=r(hi,"LI",{});var $6=a(Tn);W3=s($6,"Storage account for static file hosting"),$6.forEach(o),V3=u(hi),kn=r(hi,"LI",{});var J6=a(kn);$3=s(J6,"Storage account for function app support"),J6.forEach(o),J3=u(hi),Ko=r(hi,"LI",{});var Ef=a(Ko);K3=s(Ef,"Function app (It is possible but makes little sense to "),Yo=r(Ef,"A",{href:!0,rel:!0});var K6=a(Yo);Y3=s(K6,"deploy functions themselves using ARM"),K6.forEach(o),Q3=s(Ef,")"),Ef.forEach(o),hi.forEach(o),cp=u(t),_t=r(t,"P",{});var wf=a(_t);Z3=s(wf,"ARM "),Qo=r(wf,"A",{href:!0,rel:!0});var Y6=a(Qo);e_=s(Y6,"template structure"),Y6.forEach(o),t_=s(wf,":"),wf.forEach(o),pp=u(t),G=r(t,"UL",{});var $e=a(G);Ln=r($e,"LI",{});var Q6=a(Ln);o_=s(Q6,"parameters    - passed on execution, e.g. environment/ version/ build number"),Q6.forEach(o),l_=u($e),Pn=r($e,"LI",{});var Z6=a(Pn);r_=s(Z6,"variables     - build upon parameters and group names together for consistency"),Z6.forEach(o),i_=u($e),zn=r($e,"LI",{});var e7=a(zn);s_=s(e7,"functions     - user-defined functions"),e7.forEach(o),a_=u($e),Sr=r($e,"LI",{});var pI=a(Sr);n_=s(pI,"resources     - deploy stuff - "),Zo=r(pI,"A",{href:!0,rel:!0});var t7=a(Zo);u_=s(t7,"intro"),t7.forEach(o),pI.forEach(o),c_=u($e),Rn=r($e,"LI",{});var o7=a(Rn);p_=s(o7,"outputs       - capture values from during execution in case further processing required, e.g. url available"),o7.forEach(o),$e.forEach(o),fp=u(t),N=r(t,"P",{});var ce=a(N);f_=s(ce,"There are some useful "),el=r(ce,"A",{href:!0,rel:!0});var l7=a(el);h_=s(l7,"quickStart templates"),l7.forEach(o),d_=s(ce," to learn from, specifically "),tl=r(ce,"A",{href:!0,rel:!0});var r7=a(tl);m_=s(r7,"101-storage-account-create"),r7.forEach(o),v_=s(ce," and "),ol=r(ce,"A",{href:!0,rel:!0});var i7=a(ol);b_=s(i7,"101-function-app-create-dynamic"),i7.forEach(o),y_=s(ce,"."),E_=r(ce,"BR",{}),w_=s(ce,`
It can also be useful to create stuff manually once and view the generated script:`),__=r(ce,"BR",{}),g_=s(ce,`
Azure Portal > Resource Groups > %Resource Group% > Automation Script`),ce.forEach(o),hp=u(t),Dr=r(t,"P",{});var s7=a(Dr);I_=s(s7,"I also found it useful to briefly look at the REST APIs which ARM deployment use under the hood:"),s7.forEach(o),dp=u(t),gt=r(t,"UL",{});var _f=a(gt);Sn=r(_f,"LI",{});var a7=a(Sn);ll=r(a7,"A",{href:!0,rel:!0});var n7=a(ll);A_=s(n7,"storage account REST API"),n7.forEach(o),a7.forEach(o),T_=u(_f),Dn=r(_f,"LI",{});var u7=a(Dn);rl=r(u7,"A",{href:!0,rel:!0});var c7=a(rl);k_=s(c7,"webapps REST API"),c7.forEach(o),u7.forEach(o),_f.forEach(o),mp=u(t),Cr=r(t,"H3",{});var p7=a(Cr);L_=s(p7,"Preparing the ARM template"),p7.forEach(o),vp=u(t),Mr=r(t,"P",{});var f7=a(Mr);P_=s(f7,"Starting with naming I want the following visible in the Azure Portal:"),f7.forEach(o),bp=u(t),ie=r(t,"UL",{});var Xt=a(ie);Cn=r(Xt,"LI",{});var h7=a(Cn);z_=s(h7,"mthcricket01 (resource group)"),h7.forEach(o),R_=u(Xt),Mn=r(Xt,"LI",{});var d7=a(Mn);S_=s(d7,"mthcricket01api (function app)"),d7.forEach(o),D_=u(Xt),Bn=r(Xt,"LI",{});var m7=a(Bn);C_=s(m7,"mthcricket01apistorage (storage account required by function app)"),m7.forEach(o),M_=u(Xt),Nn=r(Xt,"LI",{});var v7=a(Nn);B_=s(v7,"mthcricket01ui (storage account for static content)"),v7.forEach(o),Xt.forEach(o),yp=u(t),Br=r(t,"P",{});var b7=a(Br);N_=s(b7,"This is easily achieved using variables:"),b7.forEach(o),Ep=u(t),il=r(t,"PRE",{class:!0});var bT=a(il);bT.forEach(o),wp=u(t),se=r(t,"P",{});var Ut=a(se);j_=s(Ut,"The real details are in the resources section and this can get quite complicated; you have to learn Azure terminology, relationships and specify API versions."),x_=r(Ut,"BR",{}),q_=s(Ut,`
I\u2019ve found the most useful information in the `),sl=r(Ut,"A",{href:!0,rel:!0});var y7=a(sl);O_=s(y7,"Azure template reference"),y7.forEach(o),H_=s(Ut," where apiVersion options are clear."),F_=r(Ut,"BR",{}),X_=s(Ut,`
This is also available through Azure PowerShell:`),Ut.forEach(o),_p=u(t),al=r(t,"PRE",{class:!0});var yT=a(al);yT.forEach(o),gp=u(t),It=r(t,"P",{});var gf=a(It);U_=s(gf,"It took me a long time to get to grips with apiVersion, in the end I realised that it was the tooling in VS Code that was causing the confusion with unnecessary warnings, I learnt to instead just perform a test run in PowerShell (requires the "),nl=r(gf,"A",{href:!0,rel:!0});var E7=a(nl);G_=s(E7,"Azure PowerShell module"),E7.forEach(o),W_=s(gf,"):"),gf.forEach(o),Ip=u(t),ul=r(t,"PRE",{class:!0});var ET=a(ul);ET.forEach(o),Ap=u(t),xe=r(t,"P",{});var di=a(xe);V_=s(di,"It is possible to have the template refer to the latest version, using "),jn=r(di,"CODE",{});var w7=a(jn);$_=s(w7,"[providers('<provider>','<type>').apiVersions[0]]"),w7.forEach(o),J_=s(di," but this opens you up to breaking changes, so I\u2019m avoiding that route.  I do think that it is important to be on the latest version you can be, this is a process thing, add the upgrade step into any future template update tasks."),K_=r(di,"BR",{}),Y_=s(di,`
Once I was comfortable that I knew which versions I was aiming for I was able to get it done:`),di.forEach(o),Tp=u(t),qe=r(t,"UL",{});var mi=a(qe);xn=r(mi,"LI",{});var _7=a(xn);cl=r(_7,"A",{href:!0,rel:!0});var g7=a(cl);Q_=s(g7,"Function App"),g7.forEach(o),_7.forEach(o),Z_=u(mi),qn=r(mi,"LI",{});var I7=a(qn);pl=r(I7,"A",{href:!0,rel:!0});var A7=a(pl);e4=s(A7,"Hosting Plan for function app"),A7.forEach(o),I7.forEach(o),t4=u(mi),On=r(mi,"LI",{});var T7=a(On);fl=r(T7,"A",{href:!0,rel:!0});var k7=a(fl);o4=s(k7,"Storage Account"),k7.forEach(o),T7.forEach(o),mi.forEach(o),kp=u(t),Oe=r(t,"P",{});var vi=a(Oe);l4=s(vi,"Another awkward bit is configuring the "),hl=r(vi,"A",{href:!0,rel:!0});var L7=a(hl);r4=s(L7,"App Settings for Azure Functions"),L7.forEach(o),i4=s(vi,"."),s4=r(vi,"BR",{}),a4=s(vi,`
properties > siteConfig > appSettings:`),vi.forEach(o),Lp=u(t),E=r(t,"UL",{});var R=a(E);Nr=r(R,"LI",{});var fI=a(Nr);n4=s(fI,"AzureWebJobsStorage == "),Hn=r(fI,"EM",{});var P7=a(Hn);u4=s(P7,"(DefaultEndpointsProtocol=https;AccountName=[name];AccountKey=[key])"),P7.forEach(o),fI.forEach(o),c4=u(R),jr=r(R,"LI",{});var hI=a(jr);p4=s(hI,"AzureWebJobsDashboard == "),Fn=r(hI,"EM",{});var z7=a(Fn);f4=s(z7,"(DefaultEndpointsProtocol=https;AccountName=[name];AccountKey=[key])"),z7.forEach(o),hI.forEach(o),h4=u(R),xr=r(R,"LI",{});var dI=a(xr);d4=s(dI,"WEBSITE_CONTENTAZUREFILECONNECTIONSTRING == "),Xn=r(dI,"EM",{});var R7=a(Xn);m4=s(R7,"(DefaultEndpointsProtocol=https;AccountName=[name];AccountKey=[key])"),R7.forEach(o),dI.forEach(o),v4=u(R),qr=r(R,"LI",{});var mI=a(qr);b4=s(mI,"WEBSITE_CONTENTSHARE == "),Un=r(mI,"EM",{});var S7=a(Un);y4=s(S7,"mthcricket01api"),S7.forEach(o),mI.forEach(o),E4=u(R),Or=r(R,"LI",{});var vI=a(Or);w4=s(vI,"AzureWebJobsDisableHomepage == "),Gn=r(vI,"EM",{});var D7=a(Gn);_4=s(D7,"true"),D7.forEach(o),vI.forEach(o),g4=u(R),Hr=r(R,"LI",{});var bI=a(Hr);I4=s(bI,"FUNCTIONS_EXTENSION_VERSION == "),Wn=r(bI,"EM",{});var C7=a(Wn);A4=s(C7,"~2"),C7.forEach(o),bI.forEach(o),T4=u(R),Fr=r(R,"LI",{});var yI=a(Fr);k4=s(yI,"FUNCTIONS_WORKER_RUNTIME == "),Vn=r(yI,"EM",{});var M7=a(Vn);L4=s(M7,"dotnet"),M7.forEach(o),yI.forEach(o),P4=u(R),dl=r(R,"LI",{});var If=a(dl);z4=s(If,"AzureWebJobsDotNetReleaseCompilation == "),$n=r(If,"EM",{});var B7=a($n);R4=s(B7,"false"),B7.forEach(o),S4=s(If," (for debugging)"),If.forEach(o),D4=u(R),Xr=r(R,"LI",{});var EI=a(Xr);C4=s(EI,"APPINSIGHTS_INSTRUMENTATIONKEY == "),Jn=r(EI,"EM",{});var N7=a(Jn);M4=s(N7,"plan"),N7.forEach(o),EI.forEach(o),R.forEach(o),Pp=u(t),At=r(t,"P",{});var Af=a(At);B4=s(Af,"I\u2019m still working through the nuances of functionapp deployment, I\u2019m getting internal server errors from Azure on the 2nd run through, having deployed fine the 1st run through.  The difficulty is primarily because this stuff is quite new and in flux, there are changes between "),ml=r(Af,"A",{href:!0,rel:!0});var j7=a(ml);N4=s(j7,"Runtime version 1 vs 2"),j7.forEach(o),j4=s(Af," plus I\u2019ve chosen some awkward options like Linux hosting."),Af.forEach(o),zp=u(t),W=r(t,"P",{});var Je=a(W);x4=s(Je,"I opted part way through to adopt "),vl=r(Je,"A",{href:!0,rel:!0});var x7=a(vl);q4=s(x7,"Template Linking"),x7.forEach(o),O4=s(Je,"."),H4=r(Je,"BR",{}),F4=s(Je,`
This was simply because the template was already becoming uncomfortably long though I\u2019m not sure this helped for my small project.`),X4=r(Je,"BR",{}),U4=s(Je,`
This didn\u2019t add too much complexity either, mostly moving the `),Kn=r(Je,"EM",{});var q7=a(Kn);G4=s(q7,"DependsOn"),q7.forEach(o),W4=s(Je,"  settings from the resource itself, to the deployment of the resource and providing template outputs."),Je.forEach(o),Rp=u(t),V=r(t,"P",{});var Ke=a(V);V4=s(Ke,"I prefer this in principle because it is more modular.  For example the functionapp depends on the storage account connection string.  To get this you need to access the storage account API to get the key:"),$4=r(Ke,"BR",{}),J4=u(Ke),Yn=r(Ke,"CODE",{});var O7=a(Yn);K4=s(O7,`"value": "[listKeys(variables('StorageAccountName'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0])]"`),O7.forEach(o),Y4=r(Ke,"BR",{}),Q4=s(Ke,`
The equivalent in PowerShell: `),Qn=r(Ke,"CODE",{});var H7=a(Qn);Z4=s(H7,"(Get-AzStorageAccountKey -ResourceGroupName <resource-group> -Name <storage-account>).key1"),H7.forEach(o),eg=r(Ke,"BR",{}),tg=s(Ke,`
It feels right to me that this lives within the storage account creation template, not the function app, otherwise both templates need to manage apiVersions for the storage account API (although this example just uses latest).`),Ke.forEach(o),Sp=u(t),Ur=r(t,"H2",{});var F7=a(Ur);og=s(F7,"Costs"),F7.forEach(o),Dp=u(t),$=r(t,"P",{});var Ye=a($);lg=s(Ye,"This was never meant to be a serious production application, I\u2019m certainly not expecting it to scale to fully utilise serverless scaling capabilities."),rg=r(Ye,"BR",{}),ig=s(Ye,`
My intention was to use the `),bl=r(Ye,"A",{href:!0,rel:!0});var X7=a(bl);sg=s(X7,"consumption plan"),X7.forEach(o),ag=s(Ye,", therefore I was expecting it to be free or very close to."),ng=r(Ye,"BR",{}),ug=s(Ye,`
What I actually witnessed was that in the couple of weeks that I\u2019ve had something running I accrued \xA30.09 on API storage and nearly \xA35 on an App Service Plan.  I\u2019ve now addressed this, the ARM template was wrong, fixed by manually recreating all, viewing the generated Azure `),Zn=r(Ye,"EM",{});var U7=a(Zn);cg=s(U7,"automation script"),U7.forEach(o),pg=s(Ye," and tweaking settings accordingly."),Ye.forEach(o),Cp=u(t),Gr=r(t,"H2",{});var G7=a(Gr);fg=s(G7,"Summary"),G7.forEach(o),Mp=u(t),He=r(t,"P",{});var bi=a(He);hg=s(bi,"This project has been fairly successful so far, zero to "),yl=r(bi,"A",{href:!0,rel:!0});var W7=a(yl);dg=s(W7,"Live application"),W7.forEach(o),mg=s(bi," in under a month."),vg=r(bi,"BR",{}),bg=s(bi,`
I\u2019ve also quite enjoyed bringing together lots of different elements I\u2019ve used to varying degrees to build something real.`),bi.forEach(o),Bp=u(t),Wr=r(t,"P",{});var V7=a(Wr);yg=s(V7,"It isn\u2019t perfect of course, there are some known issues:"),V7.forEach(o),Np=u(t),j=r(t,"UL",{});var pe=a(j);Vr=r(pe,"LI",{});var wI=a(Vr);eu=r(wI,"DEL",{});var $7=a(eu);Eg=s($7,"Scores continue adding on even if all ticked off - API logic wrong"),$7.forEach(o),wg=s(wI," Fixed"),wI.forEach(o),_g=u(pe),tu=r(pe,"LI",{});var J7=a(tu);ou=r(J7,"DEL",{});var K7=a(ou);gg=s(K7,"Plan costing money, something isn\u2019t right about the functionapp deployment yet, consumption plan should be free (at low volumes)."),K7.forEach(o),J7.forEach(o),Ig=u(pe),$r=r(pe,"LI",{});var _I=a($r);Ag=s(_I,"Clicking too quickly misrepresents the status as evidenced by the history of throws - 2 choices (possibly both):"),El=r(_I,"UL",{});var Tf=a(El);lu=r(Tf,"LI",{});var Y7=a(lu);Tg=s(Y7,"throttling within Angular controller, checksum-esque, possibly store actions in local queue before calling API (web worker?)"),Y7.forEach(o),kg=u(Tf),ru=r(Tf,"LI",{});var Q7=a(ru);Lg=s(Q7,"incremement version within the API, check that requests are received in order, depends upon data persistence but may be better solution"),Q7.forEach(o),Tf.forEach(o),_I.forEach(o),Pg=u(pe),iu=r(pe,"LI",{});var Z7=a(iu);zg=s(Z7,"Skip function totally broken (symptom of the above)"),Z7.forEach(o),Rg=u(pe),wl=r(pe,"LI",{});var kf=a(wl);Sg=s(kf,"Initial load is extremely slow (several seconds) and it "),su=r(kf,"EM",{});var eT=a(su);Dg=s(eT,"appears"),eT.forEach(o),Cg=s(kf," to be broken.  Possibly send a dummy request in the background to hide this from the user."),kf.forEach(o),Mg=u(pe),au=r(pe,"LI",{});var tT=a(au);Bg=s(tT,"Buttons jump about a bit due to flexbox/ grid layout and conditional display of skip, would be nice to fix this"),tT.forEach(o),pe.forEach(o),jp=u(t),Jr=r(t,"P",{});var oT=a(Jr);Ng=s(oT,"There\u2019s also outstanding work to do:"),oT.forEach(o),xp=u(t),Tt=r(t,"UL",{});var Lf=a(Tt);nu=r(Lf,"LI",{});var lT=a(nu);jg=s(lT,"Deployments building up in storage, no need to keep history of deployments so need to add clear step to release pipeline (start)."),lT.forEach(o),xg=u(Lf),uu=r(Lf,"LI",{});var rT=a(uu);qg=s(rT,"Better understand Azure\u2019s inner workings, or terminology at least, I feel that I\u2019m missing something (or the documentation is).  Possibly I\u2019m just more pedantic than most users, I want to understand it, not just get it working."),rT.forEach(o),Lf.forEach(o),this.h()},h(){f(Wt,"href","https://mthcricket01ui.z16.web.core.windows.net/"),f(Wt,"rel","nofollow"),f($t,"href","https://github.com/mtempleheald/cricket-azure"),f($t,"rel","nofollow"),f(Kt,"href","https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&tabs=schema"),f(Kt,"rel","nofollow"),f(Qt,"href","https://dev.azure.com/mseng/Azure%20DevOps%20Roadmap/_workitems/edit/1221170"),f(Qt,"rel","nofollow"),f(to,"href","https://softwareengineering.stackexchange.com/questions/92339/when-do-you-use-a-struct-instead-of-a-class"),f(to,"rel","nofollow"),f(oo,"href","https://stackoverflow.com/questions/32008869/json-net-serialize-specific-private-field"),f(oo,"rel","nofollow"),f(lo,"href","https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-authoring-templates"),f(lo,"rel","nofollow"),f(ro,"href","https://docs.microsoft.com/en-gb/azure/azure-functions/deployment-zip-push"),f(ro,"rel","nofollow"),f(ao,"href","https://github.com/dotnet/cli"),f(ao,"rel","nofollow"),f(no,"href","https://docs.microsoft.com/en-us/azure/azure-functions/functions-dotnet-class-library"),f(no,"rel","nofollow"),f(uo,"href","https://github.com/Azure/azure-functions-core-tools"),f(uo,"rel","nofollow"),f(co,"class","language-undefined"),f(po,"class","language-undefined"),f(ho,"href","https://github.com/mtempleheald/cricket-azure/blob/master/Mth.Darts.Cricket.Api/StartMatch.cs"),f(ho,"rel","nofollow"),f(mo,"href","https://stackoverflow.com/questions/15440935/how-to-test-internal-class-library#answer-15440997"),f(mo,"rel","nofollow"),f(vo,"href","https://docs.microsoft.com/en-us/azure/azure-functions/functions-test-a-function"),f(vo,"rel","nofollow"),f(bo,"href","https://learning.getpostman.com/docs/postman/collection_runs/command_line_integration_with_newman/"),f(bo,"rel","nofollow"),f(yo,"href","https://docs.microsoft.com/en-us/aspnet/core/test/integration-tests?view=aspnetcore-2.2"),f(yo,"rel","nofollow"),f(Eo,"href","https://docs.microsoft.com/en-us/azure/devops/pipelines/repos/github?view=vsts"),f(Eo,"rel","nofollow"),f(wo,"href","https://docs.microsoft.com/en-us/azure/devops/pipelines/process/tasks"),f(wo,"rel","nofollow"),IT(sr.src,II="https://dev.azure.com/mtempleheald/cricket-azure/_apis/build/status/mtempleheald.cricket-azure?branchName=master")||f(sr,"src",II),f(sr,"alt","Build Status"),f(_o,"href","https://dev.azure.com/mtempleheald/cricket-azure/_build/latest?definitionId=1?branchName=master"),f(_o,"rel","nofollow"),f(Po,"href","https://docs.microsoft.com/en-gb/azure/azure-functions/functions-continuous-deployment#continuous-deployment-requirements"),f(Po,"rel","nofollow"),f(zo,"href","https://12factor.net/build-release-run"),f(zo,"rel","nofollow"),f(So,"href","https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=vsts"),f(So,"rel","nofollow"),f(Mo,"href","https://github.com/Microsoft/azure-pipelines-tasks/blob/master/Tasks/PublishBuildArtifactsV1/publishbuildartifacts.ts"),f(Mo,"rel","nofollow"),f(No,"href","https://dev.azure.com/mseng/Azure%20DevOps%20Roadmap/_workitems/edit/1221170"),f(No,"rel","nofollow"),f(jo,"href","https://github.com/Microsoft/azure-pipelines-tasks/tree/master/Tasks"),f(jo,"rel","nofollow"),f(xo,"href","https://github.com/projectkudu/kudu"),f(xo,"rel","nofollow"),f(qo,"href","https://github.com/projectkudu/kudu/wiki/Customizing-deployments"),f(qo,"rel","nofollow"),f(Oo,"href","https://docs.microsoft.com/en-gb/azure/active-directory/develop/howto-create-service-principal-portal"),f(Oo,"rel","nofollow"),f(Uo,"href","https://github.com/Microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureResourceGroupDeploymentV2/README.md"),f(Uo,"rel","nofollow"),f(Go,"class","language-undefined"),f(Wo,"href","https://aka.ms/azurermwebdeployreadme"),f(Wo,"rel","nofollow"),f(Vo,"href","https://aka.ms/azurefilecopyreadme"),f(Vo,"rel","nofollow"),f($o,"href","https://github.com/Microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureCLIV1/Readme.md"),f($o,"rel","nofollow"),f(Jo,"class","language-undefined"),f(Yo,"href","https://blog.kloud.com.au/2018/08/16/deploying-azure-functions-with-arm-templates/"),f(Yo,"rel","nofollow"),f(Qo,"href","https://docs.microsoft.com/en-gb/azure/azure-resource-manager/resource-group-authoring-templates"),f(Qo,"rel","nofollow"),f(Zo,"href","https://docs.microsoft.com/en-gb/azure/azure-resource-manager/resource-manager-templates-resources"),f(Zo,"rel","nofollow"),f(el,"href","https://github.com/Azure/azure-quickstart-templates"),f(el,"rel","nofollow"),f(tl,"href","https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-storage-account-create/azuredeploy.json"),f(tl,"rel","nofollow"),f(ol,"href","https://github.com/Azure/azure-quickstart-templates/blob/master/101-function-app-create-dynamic/azuredeploy.json"),f(ol,"rel","nofollow"),f(ll,"href","https://docs.microsoft.com/en-us/rest/api/storagerp/storageaccounts"),f(ll,"rel","nofollow"),f(rl,"href","https://docs.microsoft.com/en-us/rest/api/appservice/webapps"),f(rl,"rel","nofollow"),f(il,"class","language-json"),f(sl,"href","https://docs.microsoft.com/en-us/azure/templates"),f(sl,"rel","nofollow"),f(al,"class","language-undefined"),f(nl,"href","https://docs.microsoft.com/en-gb/powershell/azure/install-az-ps?view=azps-1.0.0&viewFallbackFrom=azurermps-4.0.0"),f(nl,"rel","nofollow"),f(ul,"class","language-undefined"),f(cl,"href","https://docs.microsoft.com/en-us/azure/templates/microsoft.web/2018-02-01/sites"),f(cl,"rel","nofollow"),f(pl,"href","https://docs.microsoft.com/en-us/azure/templates/microsoft.web/2018-02-01/serverfarms"),f(pl,"rel","nofollow"),f(fl,"href","https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/2018-07-01/storageaccounts"),f(fl,"rel","nofollow"),f(hl,"href","https://docs.microsoft.com/en-gb/azure/azure-functions/functions-app-settings"),f(hl,"rel","nofollow"),f(ml,"href","https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions"),f(ml,"rel","nofollow"),f(vl,"href","https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-linked-templates"),f(vl,"rel","nofollow"),f(bl,"href","https://azure.microsoft.com/en-gb/pricing/details/app-service/plans/"),f(bl,"rel","nofollow"),f(yl,"href","https://mthcricket01ui.z16.web.core.windows.net/"),f(yl,"rel","nofollow")},m(t,c){p(t,st,c),e(st,Pf),p(t,pu,c),p(t,at,c),e(at,zf),e(at,Rf),e(at,Sf),p(t,fu,c),p(t,nt,c),e(nt,yi),e(yi,Df),e(nt,Cf),e(nt,Ei),e(Ei,Mf),p(t,hu,c),p(t,gl,c),e(gl,Bf),p(t,du,c),p(t,C,c),e(C,wi),e(wi,Nf),e(C,jf),e(C,_i),e(_i,xf),e(C,qf),e(C,gi),e(gi,Of),e(C,Hf),e(C,Ii),e(Ii,Ff),e(C,Xf),e(C,Ai),e(Ai,Uf),e(C,Gf),e(C,Ti),e(Ti,Wf),p(t,mu,c),p(t,Gt,c),e(Gt,Wt),e(Wt,Vf),e(Gt,$f),p(t,vu,c),p(t,Il,c),e(Il,Jf),p(t,bu,c),p(t,ee,c),e(ee,Kf),e(ee,Yf),e(ee,Qf),e(ee,Zf),e(ee,eh),e(ee,th),e(ee,oh),p(t,yu,c),p(t,ut,c),e(ut,ki),e(ki,h),e(h,Li),e(Li,lh),e(h,rh),e(h,Pi),e(Pi,ih),e(h,sh),e(h,zi),e(zi,ah),e(h,nh),e(h,Ri),e(Ri,uh),e(h,ch),e(h,Si),e(Si,ph),e(h,fh),e(h,Di),e(Di,hh),e(h,dh),e(h,Ci),e(Ci,mh),e(h,vh),e(h,Mi),e(Mi,bh),e(h,yh),e(h,Bi),e(Bi,Eh),e(h,wh),e(h,Ni),e(Ni,_h),e(ut,gh),e(ut,Vt),e(Vt,d),e(d,ji),e(ji,Ih),e(d,Ah),e(d,xi),e(xi,Th),e(d,kh),e(d,qi),e(qi,Lh),e(d,Ph),e(d,Oi),e(Oi,zh),e(d,Rh),e(d,Hi),e(Hi,Sh),e(d,Dh),e(d,Fi),e(Fi,Ch),e(d,Mh),e(d,Xi),e(Xi,Bh),e(d,Nh),e(d,Ui),e(Ui,jh),e(d,xh),e(d,Gi),e(Gi,qh),e(d,Oh),e(d,Wi),e(Wi,Hh),e(Vt,Fh),e(Vt,m),e(m,Vi),e(Vi,Xh),e(m,Uh),e(m,$i),e($i,Gh),e(m,Wh),e(m,Ji),e(Ji,Vh),e(m,$h),e(m,Ki),e(Ki,Jh),e(m,Kh),e(m,Yi),e(Yi,Yh),e(m,Qh),e(m,Qi),e(Qi,Zh),e(m,ed),e(m,Zi),e(Zi,td),e(m,od),e(m,es),e(es,ld),e(m,rd),e(m,ts),e(ts,id),e(m,sd),e(m,os),e(os,ad),p(t,Eu,c),p(t,Al,c),e(Al,nd),p(t,wu,c),p(t,ke,c),e(ke,ls),e(ls,ud),e(ke,cd),e(ke,rs),e(rs,pd),e(ke,fd),e(ke,is),e(is,hd),p(t,_u,c),p(t,Tl,c),e(Tl,dd),p(t,gu,c),p(t,v,c),e(v,Qe),e(Qe,md),e(Qe,vd),e(Qe,bd),e(Qe,$t),e($t,yd),e(Qe,Ed),e(v,wd),e(v,Ze),e(Ze,_d),e(Ze,gd),e(Ze,Id),e(Ze,Ad),e(Ze,Td),e(v,kd),e(v,Jt),e(Jt,Ld),e(Jt,Pd),e(Jt,zd),e(v,Rd),e(v,fe),e(fe,Sd),e(fe,Dd),e(fe,Cd),e(fe,Kt),e(Kt,Md),e(fe,Bd),e(fe,Nd),e(fe,jd),e(v,xd),e(v,Yt),e(Yt,qd),e(Yt,Od),e(Yt,Hd),e(v,Fd),e(v,he),e(he,Xd),e(he,Ud),e(he,Gd),e(he,Qt),e(Qt,Wd),e(he,Vd),e(he,$d),e(he,Jd),e(v,Kd),e(v,ss),e(ss,Yd),e(v,Qd),e(v,Zt),e(Zt,Zd),e(Zt,em),e(Zt,tm),e(v,om),e(v,as),e(as,lm),p(t,Iu,c),p(t,kl,c),e(kl,rm),p(t,Au,c),p(t,Ll,c),e(Ll,im),p(t,Tu,c),p(t,H,c),e(H,Pl),e(Pl,sm),e(Pl,eo),e(eo,ns),e(ns,am),e(eo,nm),e(eo,us),e(us,um),e(H,cm),e(H,zl),e(zl,pm),e(zl,cs),e(cs,ps),e(ps,fm),e(H,hm),e(H,Rl),e(Rl,dm),e(Rl,fs),e(fs,hs),e(hs,mm),e(H,vm),e(H,Sl),e(Sl,bm),e(Sl,ds),e(ds,ms),e(ms,ym),e(H,Em),e(H,Dl),e(Dl,wm),e(Dl,vs),e(vs,bs),e(bs,_m),p(t,ku,c),p(t,Cl,c),e(Cl,gm),p(t,Lu,c),p(t,_,c),e(_,ys),e(ys,Im),e(_,Am),e(_,Es),e(Es,Tm),e(_,km),e(_,ws),e(ws,Lm),e(_,Pm),e(_,Ml),e(Ml,zm),e(Ml,to),e(to,Rm),e(_,Sm),e(_,Bl),e(Bl,Dm),e(Bl,oo),e(oo,Cm),e(_,Mm),e(_,_s),e(_s,Bm),e(_,Nm),e(_,gs),e(gs,jm),e(_,xm),e(_,Is),e(Is,qm),p(t,Pu,c),p(t,Nl,c),e(Nl,Om),p(t,zu,c),p(t,jl,c),e(jl,Hm),p(t,Ru,c),p(t,te,c),e(te,xl),e(xl,Fm),e(xl,et),e(et,As),e(As,Xm),e(et,Um),e(et,Ts),e(Ts,Gm),e(et,Wm),e(et,ks),e(ks,Vm),e(te,$m),e(te,ql),e(ql,Jm),e(ql,tt),e(tt,Ls),e(Ls,Km),e(tt,Ym),e(tt,Ps),e(Ps,Qm),e(tt,Zm),e(tt,zs),e(zs,ev),e(te,tv),e(te,Ol),e(Ol,ov),e(Ol,ot),e(ot,Rs),e(Rs,lv),e(ot,rv),e(ot,Ss),e(Ss,iv),e(ot,sv),e(ot,Ds),e(Ds,av),e(te,nv),e(te,Hl),e(Hl,uv),e(Hl,lt),e(lt,Cs),e(Cs,cv),e(lt,pv),e(lt,Ms),e(Ms,fv),e(lt,hv),e(lt,Bs),e(Bs,dv),p(t,Su,c),p(t,ct,c),e(ct,mv),e(ct,vv),e(ct,bv),p(t,Du,c),p(t,Fl,c),e(Fl,yv),p(t,Cu,c),p(t,k,c),e(k,Ev),e(k,wv),e(k,_v),e(k,Ns),e(Ns,gv),e(k,Iv),e(k,Av),e(k,Tv),e(k,lo),e(lo,kv),e(k,Lv),e(k,Pv),e(k,zv),e(k,ro),e(ro,Rv),e(k,Sv),p(t,Mu,c),p(t,Xl,c),e(Xl,Dv),p(t,Bu,c),p(t,Ul,c),e(Ul,Cv),p(t,Nu,c),p(t,Le,c),e(Le,js),e(js,Mv),e(Le,Bv),e(Le,xs),e(xs,Nv),e(Le,jv),e(Le,qs),e(qs,xv),p(t,ju,c),p(t,Pe,c),e(Pe,qv),e(Pe,Ov),e(Pe,Hv),e(Pe,Fv),e(Pe,Xv),p(t,xu,c),p(t,ze,c),e(ze,io),e(io,Uv),e(io,Os),e(Os,Gv),e(io,Wv),e(ze,Vv),e(ze,so),e(so,$v),e(so,Hs),e(Hs,Jv),e(so,Kv),e(ze,Yv),e(ze,Gl),e(Gl,Qv),e(Gl,Y),e(Y,Fs),e(Fs,Zv),e(Y,e1),e(Y,Xs),e(Xs,t1),e(Y,o1),e(Y,Us),e(Us,l1),e(Y,r1),e(Y,Gs),e(Gs,i1),e(Y,s1),e(Y,Wl),e(Wl,a1),e(Wl,Q),e(Q,Ws),e(Ws,n1),e(Q,u1),e(Q,Vs),e(Vs,c1),e(Q,p1),e(Q,$s),e($s,f1),e(Q,h1),e(Q,Js),e(Js,d1),e(Q,m1),e(Q,Ks),e(Ks,v1),p(t,qu,c),p(t,pt,c),e(pt,b1),e(pt,y1),e(pt,E1),p(t,Ou,c),p(t,ft,c),e(ft,Ys),e(Ys,w1),e(ft,_1),e(ft,Qs),e(Qs,g1),p(t,Hu,c),p(t,Vl,c),e(Vl,I1),p(t,Fu,c),p(t,g,c),e(g,A1),e(g,ao),e(ao,T1),e(g,k1),e(g,L1),e(g,P1),e(g,Zs),e(Zs,z1),e(g,R1),e(g,S1),e(g,D1),e(g,ea),e(ea,C1),e(g,M1),e(g,B1),e(g,N1),e(g,no),e(no,j1),e(g,x1),p(t,Xu,c),p(t,M,c),e(M,q1),e(M,uo),e(uo,O1),e(M,H1),e(M,F1),e(M,X1),e(M,ta),e(ta,U1),e(M,G1),e(M,W1),e(M,V1),e(M,oa),e(oa,$1),e(M,J1),p(t,Uu,c),p(t,$l,c),e($l,K1),p(t,Gu,c),p(t,Re,c),e(Re,la),e(la,Y1),e(Re,Q1),e(Re,ra),e(ra,Z1),e(Re,eb),e(Re,ia),e(ia,tb),p(t,Wu,c),p(t,co,c),co.innerHTML=sT,p(t,Vu,c),p(t,Jl,c),e(Jl,sa),e(sa,ob),p(t,$u,c),p(t,po,c),po.innerHTML=aT,p(t,Ju,c),p(t,oe,c),e(oe,lb),e(oe,rb),e(oe,ib),e(oe,sb),e(oe,ab),e(oe,nb),e(oe,ub),p(t,Ku,c),p(t,fo,c),e(fo,ho),e(ho,cb),e(fo,pb),p(t,Yu,c),p(t,F,c),e(F,aa),e(aa,fb),e(F,hb),e(F,na),e(na,db),e(F,mb),e(F,ua),e(ua,vb),e(F,bb),e(F,ca),e(ca,yb),e(F,Eb),e(F,pa),e(pa,wb),p(t,Qu,c),p(t,Kl,c),e(Kl,_b),p(t,Zu,c),p(t,Yl,c),e(Yl,gb),p(t,ec,c),p(t,le,c),e(le,fa),e(fa,Ib),e(le,Ab),e(le,ha),e(ha,Tb),e(le,kb),e(le,da),e(da,Lb),e(le,Pb),e(le,ma),e(ma,zb),p(t,tc,c),p(t,Ql,c),e(Ql,Rb),p(t,oc,c),p(t,de,c),e(de,Sb),e(de,va),e(va,Db),e(de,Cb),e(de,Mb),e(de,mo),e(mo,Bb),e(de,Nb),p(t,lc,c),p(t,Zl,c),e(Zl,jb),p(t,rc,c),p(t,ht,c),e(ht,xb),e(ht,vo),e(vo,qb),e(ht,Ob),p(t,ic,c),p(t,er,c),e(er,Hb),p(t,sc,c),p(t,w,c),e(w,Fb),e(w,ba),e(ba,Xb),e(w,Ub),e(w,ya),e(ya,Gb),e(w,Wb),e(w,Vb),e(w,$b),e(w,Jb),e(w,Kb),e(w,Yb),e(w,Qb),e(w,Ea),e(Ea,Zb),e(w,e2),e(w,t2),e(w,o2),e(w,l2),p(t,ac,c),p(t,rt,c),e(rt,r2),e(rt,wa),e(wa,i2),e(rt,s2),e(rt,a2),p(t,nc,c),p(t,dt,c),e(dt,tr),e(tr,n2),e(tr,bo),e(bo,u2),e(dt,c2),e(dt,or),e(or,p2),e(or,yo),e(yo,f2),p(t,uc,c),p(t,lr,c),e(lr,h2),p(t,cc,c),p(t,re,c),e(re,d2),e(re,m2),e(re,v2),e(re,b2),e(re,y2),e(re,E2),e(re,w2),p(t,pc,c),p(t,mt,c),e(mt,_2),e(mt,g2),e(mt,I2),p(t,fc,c),p(t,Se,c),e(Se,A2),e(Se,T2),e(Se,k2),e(Se,L2),e(Se,P2),p(t,hc,c),p(t,rr,c),e(rr,z2),p(t,dc,c),p(t,ir,c),e(ir,R2),p(t,mc,c),p(t,De,c),e(De,_a),e(_a,S2),e(De,D2),e(De,ga),e(ga,C2),e(De,M2),e(De,Ia),e(Ia,B2),p(t,vc,c),p(t,b,c),e(b,N2),e(b,Eo),e(Eo,j2),e(b,x2),e(b,q2),e(b,O2),e(b,Aa),e(Aa,H2),e(b,F2),e(b,Ta),e(Ta,X2),e(b,U2),e(b,ka),e(ka,G2),e(b,W2),e(b,V2),e(b,$2),e(b,La),e(La,J2),e(b,K2),e(b,Pa),e(Pa,Y2),e(b,Q2),p(t,bc,c),p(t,Z,c),e(Z,Z2),e(Z,wo),e(wo,ey),e(Z,ty),e(Z,oy),e(Z,ly),e(Z,ry),e(Z,iy),e(Z,_o),e(_o,sr),p(t,yc,c),p(t,ar,c),e(ar,sy),p(t,Ec,c),p(t,nr,c),e(nr,ay),p(t,wc,c),p(t,B,c),e(B,go),e(go,ny),e(go,za),e(za,uy),e(go,cy),e(B,py),e(B,Io),e(Io,fy),e(Io,Ra),e(Ra,hy),e(Io,dy),e(B,my),e(B,Ao),e(Ao,vy),e(Ao,Sa),e(Sa,by),e(Ao,yy),e(B,Ey),e(B,To),e(To,wy),e(To,Da),e(Da,_y),e(To,gy),e(B,Iy),e(B,ko),e(ko,Ay),e(ko,Ca),e(Ca,Ty),e(ko,ky),e(B,Ly),e(B,Lo),e(Lo,Py),e(Lo,Ma),e(Ma,zy),e(Lo,Ry),p(t,_c,c),p(t,ur,c),e(ur,Sy),p(t,gc,c),p(t,cr,c),e(cr,pr),e(pr,Dy),e(pr,me),e(me,Ba),e(Ba,Cy),e(me,My),e(me,fr),e(fr,By),e(fr,Na),e(Na,ja),e(ja,Ny),e(me,jy),e(me,xa),e(xa,xy),e(me,qy),e(me,ve),e(ve,Oy),e(ve,Po),e(Po,Hy),e(ve,Fy),e(ve,Xy),e(ve,Uy),e(ve,Gy),e(ve,Wy),p(t,Ic,c),p(t,hr,c),e(hr,Vy),p(t,Ac,c),p(t,Ce,c),e(Ce,$y),e(Ce,zo),e(zo,Jy),e(Ce,Ky),e(Ce,Yy),e(Ce,Qy),p(t,Tc,c),p(t,X,c),e(X,Zy),e(X,qa),e(qa,eE),e(X,tE),e(X,Oa),e(Oa,oE),e(X,lE),e(X,Ha),e(Ha,rE),e(X,iE),e(X,sE),e(X,aE),p(t,kc,c),p(t,Ro,c),e(Ro,nE),e(Ro,So),e(So,uE),p(t,Lc,c),p(t,vt,c),e(vt,Fa),e(Fa,be),e(be,Xa),e(Xa,cE),e(be,pE),e(be,Ua),e(Ua,fE),e(be,hE),e(be,Ga),e(Ga,dE),e(be,mE),e(be,Wa),e(Wa,vE),e(vt,bE),e(vt,S),e(S,ye),e(ye,Va),e(Va,yE),e(ye,EE),e(ye,Pc),e(ye,wE),e(ye,zc),e(ye,_E),e(ye,$a),e($a,gE),e(S,IE),e(S,Ee),e(Ee,Ja),e(Ja,AE),e(Ee,TE),e(Ee,Ka),e(Ka,kE),e(Ee,LE),e(Ee,Rc),e(Ee,PE),e(Ee,Ya),e(Ya,zE),e(S,RE),e(S,we),e(we,Qa),e(Qa,SE),e(we,DE),e(we,Sc),e(we,CE),e(we,Dc),e(we,ME),e(we,Za),e(Za,BE),e(S,NE),e(S,_e),e(_e,en),e(en,jE),e(_e,xE),e(_e,tn),e(tn,qE),e(_e,OE),e(_e,on),e(on,HE),e(_e,FE),e(_e,Cc),e(S,XE),e(S,ge),e(ge,ln),e(ln,UE),e(ge,GE),e(ge,Mc),e(ge,WE),e(ge,rn),e(rn,VE),e(ge,$E),e(ge,Bc),e(S,JE),e(S,Ie),e(Ie,sn),e(sn,KE),e(Ie,YE),e(Ie,Nc),e(Ie,QE),e(Ie,an),e(an,ZE),e(Ie,ew),e(Ie,jc),e(S,tw),e(S,Ae),e(Ae,nn),e(nn,ow),e(Ae,lw),e(Ae,un),e(un,rw),e(Ae,iw),e(Ae,xc),e(Ae,sw),e(Ae,cn),e(cn,aw),p(t,qc,c),p(t,dr,c),e(dr,nw),p(t,Oc,c),p(t,bt,c),e(bt,Do),e(Do,uw),e(Do,pn),e(pn,cw),e(Do,pw),e(bt,fw),e(bt,Co),e(Co,hw),e(Co,fn),e(fn,dw),e(Co,mw),p(t,Hc,c),p(t,mr,c),e(mr,vw),p(t,Fc,c),p(t,yt,c),e(yt,vr),e(vr,bw),e(vr,hn),e(hn,yw),e(yt,Ew),e(yt,dn),e(dn,ww),p(t,Xc,c),p(t,Et,c),e(Et,_w),e(Et,Mo),e(Mo,gw),e(Et,Iw),p(t,Uc,c),p(t,br,c),e(br,Bo),e(Bo,Aw),e(Bo,mn),e(mn,Tw),e(Bo,kw),p(t,Gc,c),p(t,yr,c),e(yr,Lw),p(t,Wc,c),p(t,U,c),e(U,Pw),e(U,No),e(No,zw),e(U,Rw),e(U,Sw),e(U,Dw),e(U,jo),e(jo,Cw),e(U,Mw),e(U,Bw),e(U,Nw),p(t,Vc,c),p(t,Er,c),e(Er,jw),p(t,$c,c),p(t,y,c),e(y,xw),e(y,vn),e(vn,qw),e(y,Ow),e(y,Hw),e(y,Fw),e(y,xo),e(xo,Xw),e(y,Uw),e(y,qo),e(qo,Gw),e(y,Ww),e(y,Vw),e(y,$w),e(y,bn),e(bn,Jw),e(y,Kw),e(y,Yw),e(y,Qw),e(y,yn),e(yn,Zw),e(y,e3),p(t,Jc,c),p(t,Me,c),e(Me,En),e(En,t3),e(Me,o3),e(Me,wn),e(wn,l3),e(Me,r3),e(Me,_n),e(_n,i3),p(t,Kc,c),p(t,O,c),e(O,s3),e(O,a3),e(O,n3),e(O,u3),e(O,c3),e(O,gn),e(gn,p3),e(O,f3),e(O,h3),e(O,Oo),e(Oo,d3),e(O,m3),p(t,Yc,c),p(t,wt,c),e(wt,In),e(In,v3),e(wt,b3),e(wt,An),e(An,y3),p(t,Qc,c),p(t,wr,c),e(wr,E3),p(t,Zc,c),p(t,Be,c),e(Be,Ho),e(Ho,w3),e(Ho,_3),e(Ho,g3),e(Be,I3),e(Be,Fo),e(Fo,A3),e(Fo,T3),e(Fo,k3),e(Be,L3),e(Be,Xo),e(Xo,P3),e(Xo,z3),e(Xo,R3),p(t,ep,c),p(t,_r,c),e(_r,S3),p(t,tp,c),p(t,gr,c),e(gr,D3),p(t,op,c),p(t,Ir,c),e(Ir,Ar),e(Ar,Uo),e(Uo,C3),e(Ar,M3),p(t,lp,c),p(t,Go,c),Go.innerHTML=nT,p(t,rp,c),p(t,Ne,c),e(Ne,Tr),e(Tr,Wo),e(Wo,B3),e(Tr,N3),e(Ne,j3),e(Ne,kr),e(kr,Vo),e(Vo,x3),e(kr,q3),e(Ne,O3),e(Ne,Lr),e(Lr,$o),e($o,H3),e(Lr,F3),p(t,ip,c),p(t,Jo,c),Jo.innerHTML=uT,p(t,sp,c),p(t,Pr,c),e(Pr,X3),p(t,ap,c),p(t,zr,c),e(zr,U3),p(t,np,c),p(t,Rr,c),e(Rr,G3),p(t,up,c),p(t,je,c),e(je,Tn),e(Tn,W3),e(je,V3),e(je,kn),e(kn,$3),e(je,J3),e(je,Ko),e(Ko,K3),e(Ko,Yo),e(Yo,Y3),e(Ko,Q3),p(t,cp,c),p(t,_t,c),e(_t,Z3),e(_t,Qo),e(Qo,e_),e(_t,t_),p(t,pp,c),p(t,G,c),e(G,Ln),e(Ln,o_),e(G,l_),e(G,Pn),e(Pn,r_),e(G,i_),e(G,zn),e(zn,s_),e(G,a_),e(G,Sr),e(Sr,n_),e(Sr,Zo),e(Zo,u_),e(G,c_),e(G,Rn),e(Rn,p_),p(t,fp,c),p(t,N,c),e(N,f_),e(N,el),e(el,h_),e(N,d_),e(N,tl),e(tl,m_),e(N,v_),e(N,ol),e(ol,b_),e(N,y_),e(N,E_),e(N,w_),e(N,__),e(N,g_),p(t,hp,c),p(t,Dr,c),e(Dr,I_),p(t,dp,c),p(t,gt,c),e(gt,Sn),e(Sn,ll),e(ll,A_),e(gt,T_),e(gt,Dn),e(Dn,rl),e(rl,k_),p(t,mp,c),p(t,Cr,c),e(Cr,L_),p(t,vp,c),p(t,Mr,c),e(Mr,P_),p(t,bp,c),p(t,ie,c),e(ie,Cn),e(Cn,z_),e(ie,R_),e(ie,Mn),e(Mn,S_),e(ie,D_),e(ie,Bn),e(Bn,C_),e(ie,M_),e(ie,Nn),e(Nn,B_),p(t,yp,c),p(t,Br,c),e(Br,N_),p(t,Ep,c),p(t,il,c),il.innerHTML=cT,p(t,wp,c),p(t,se,c),e(se,j_),e(se,x_),e(se,q_),e(se,sl),e(sl,O_),e(se,H_),e(se,F_),e(se,X_),p(t,_p,c),p(t,al,c),al.innerHTML=pT,p(t,gp,c),p(t,It,c),e(It,U_),e(It,nl),e(nl,G_),e(It,W_),p(t,Ip,c),p(t,ul,c),ul.innerHTML=fT,p(t,Ap,c),p(t,xe,c),e(xe,V_),e(xe,jn),e(jn,$_),e(xe,J_),e(xe,K_),e(xe,Y_),p(t,Tp,c),p(t,qe,c),e(qe,xn),e(xn,cl),e(cl,Q_),e(qe,Z_),e(qe,qn),e(qn,pl),e(pl,e4),e(qe,t4),e(qe,On),e(On,fl),e(fl,o4),p(t,kp,c),p(t,Oe,c),e(Oe,l4),e(Oe,hl),e(hl,r4),e(Oe,i4),e(Oe,s4),e(Oe,a4),p(t,Lp,c),p(t,E,c),e(E,Nr),e(Nr,n4),e(Nr,Hn),e(Hn,u4),e(E,c4),e(E,jr),e(jr,p4),e(jr,Fn),e(Fn,f4),e(E,h4),e(E,xr),e(xr,d4),e(xr,Xn),e(Xn,m4),e(E,v4),e(E,qr),e(qr,b4),e(qr,Un),e(Un,y4),e(E,E4),e(E,Or),e(Or,w4),e(Or,Gn),e(Gn,_4),e(E,g4),e(E,Hr),e(Hr,I4),e(Hr,Wn),e(Wn,A4),e(E,T4),e(E,Fr),e(Fr,k4),e(Fr,Vn),e(Vn,L4),e(E,P4),e(E,dl),e(dl,z4),e(dl,$n),e($n,R4),e(dl,S4),e(E,D4),e(E,Xr),e(Xr,C4),e(Xr,Jn),e(Jn,M4),p(t,Pp,c),p(t,At,c),e(At,B4),e(At,ml),e(ml,N4),e(At,j4),p(t,zp,c),p(t,W,c),e(W,x4),e(W,vl),e(vl,q4),e(W,O4),e(W,H4),e(W,F4),e(W,X4),e(W,U4),e(W,Kn),e(Kn,G4),e(W,W4),p(t,Rp,c),p(t,V,c),e(V,V4),e(V,$4),e(V,J4),e(V,Yn),e(Yn,K4),e(V,Y4),e(V,Q4),e(V,Qn),e(Qn,Z4),e(V,eg),e(V,tg),p(t,Sp,c),p(t,Ur,c),e(Ur,og),p(t,Dp,c),p(t,$,c),e($,lg),e($,rg),e($,ig),e($,bl),e(bl,sg),e($,ag),e($,ng),e($,ug),e($,Zn),e(Zn,cg),e($,pg),p(t,Cp,c),p(t,Gr,c),e(Gr,fg),p(t,Mp,c),p(t,He,c),e(He,hg),e(He,yl),e(yl,dg),e(He,mg),e(He,vg),e(He,bg),p(t,Bp,c),p(t,Wr,c),e(Wr,yg),p(t,Np,c),p(t,j,c),e(j,Vr),e(Vr,eu),e(eu,Eg),e(Vr,wg),e(j,_g),e(j,tu),e(tu,ou),e(ou,gg),e(j,Ig),e(j,$r),e($r,Ag),e($r,El),e(El,lu),e(lu,Tg),e(El,kg),e(El,ru),e(ru,Lg),e(j,Pg),e(j,iu),e(iu,zg),e(j,Rg),e(j,wl),e(wl,Sg),e(wl,su),e(su,Dg),e(wl,Cg),e(j,Mg),e(j,au),e(au,Bg),p(t,jp,c),p(t,Jr,c),e(Jr,Ng),p(t,xp,c),p(t,Tt,c),e(Tt,nu),e(nu,jg),e(Tt,xg),e(Tt,uu),e(uu,qg)},p:gI,i:gI,o:gI,d(t){t&&o(st),t&&o(pu),t&&o(at),t&&o(fu),t&&o(nt),t&&o(hu),t&&o(gl),t&&o(du),t&&o(C),t&&o(mu),t&&o(Gt),t&&o(vu),t&&o(Il),t&&o(bu),t&&o(ee),t&&o(yu),t&&o(ut),t&&o(Eu),t&&o(Al),t&&o(wu),t&&o(ke),t&&o(_u),t&&o(Tl),t&&o(gu),t&&o(v),t&&o(Iu),t&&o(kl),t&&o(Au),t&&o(Ll),t&&o(Tu),t&&o(H),t&&o(ku),t&&o(Cl),t&&o(Lu),t&&o(_),t&&o(Pu),t&&o(Nl),t&&o(zu),t&&o(jl),t&&o(Ru),t&&o(te),t&&o(Su),t&&o(ct),t&&o(Du),t&&o(Fl),t&&o(Cu),t&&o(k),t&&o(Mu),t&&o(Xl),t&&o(Bu),t&&o(Ul),t&&o(Nu),t&&o(Le),t&&o(ju),t&&o(Pe),t&&o(xu),t&&o(ze),t&&o(qu),t&&o(pt),t&&o(Ou),t&&o(ft),t&&o(Hu),t&&o(Vl),t&&o(Fu),t&&o(g),t&&o(Xu),t&&o(M),t&&o(Uu),t&&o($l),t&&o(Gu),t&&o(Re),t&&o(Wu),t&&o(co),t&&o(Vu),t&&o(Jl),t&&o($u),t&&o(po),t&&o(Ju),t&&o(oe),t&&o(Ku),t&&o(fo),t&&o(Yu),t&&o(F),t&&o(Qu),t&&o(Kl),t&&o(Zu),t&&o(Yl),t&&o(ec),t&&o(le),t&&o(tc),t&&o(Ql),t&&o(oc),t&&o(de),t&&o(lc),t&&o(Zl),t&&o(rc),t&&o(ht),t&&o(ic),t&&o(er),t&&o(sc),t&&o(w),t&&o(ac),t&&o(rt),t&&o(nc),t&&o(dt),t&&o(uc),t&&o(lr),t&&o(cc),t&&o(re),t&&o(pc),t&&o(mt),t&&o(fc),t&&o(Se),t&&o(hc),t&&o(rr),t&&o(dc),t&&o(ir),t&&o(mc),t&&o(De),t&&o(vc),t&&o(b),t&&o(bc),t&&o(Z),t&&o(yc),t&&o(ar),t&&o(Ec),t&&o(nr),t&&o(wc),t&&o(B),t&&o(_c),t&&o(ur),t&&o(gc),t&&o(cr),t&&o(Ic),t&&o(hr),t&&o(Ac),t&&o(Ce),t&&o(Tc),t&&o(X),t&&o(kc),t&&o(Ro),t&&o(Lc),t&&o(vt),t&&o(qc),t&&o(dr),t&&o(Oc),t&&o(bt),t&&o(Hc),t&&o(mr),t&&o(Fc),t&&o(yt),t&&o(Xc),t&&o(Et),t&&o(Uc),t&&o(br),t&&o(Gc),t&&o(yr),t&&o(Wc),t&&o(U),t&&o(Vc),t&&o(Er),t&&o($c),t&&o(y),t&&o(Jc),t&&o(Me),t&&o(Kc),t&&o(O),t&&o(Yc),t&&o(wt),t&&o(Qc),t&&o(wr),t&&o(Zc),t&&o(Be),t&&o(ep),t&&o(_r),t&&o(tp),t&&o(gr),t&&o(op),t&&o(Ir),t&&o(lp),t&&o(Go),t&&o(rp),t&&o(Ne),t&&o(ip),t&&o(Jo),t&&o(sp),t&&o(Pr),t&&o(ap),t&&o(zr),t&&o(np),t&&o(Rr),t&&o(up),t&&o(je),t&&o(cp),t&&o(_t),t&&o(pp),t&&o(G),t&&o(fp),t&&o(N),t&&o(hp),t&&o(Dr),t&&o(dp),t&&o(gt),t&&o(mp),t&&o(Cr),t&&o(vp),t&&o(Mr),t&&o(bp),t&&o(ie),t&&o(yp),t&&o(Br),t&&o(Ep),t&&o(il),t&&o(wp),t&&o(se),t&&o(_p),t&&o(al),t&&o(gp),t&&o(It),t&&o(Ip),t&&o(ul),t&&o(Ap),t&&o(xe),t&&o(Tp),t&&o(qe),t&&o(kp),t&&o(Oe),t&&o(Lp),t&&o(E),t&&o(Pp),t&&o(At),t&&o(zp),t&&o(W),t&&o(Rp),t&&o(V),t&&o(Sp),t&&o(Ur),t&&o(Dp),t&&o($),t&&o(Cp),t&&o(Gr),t&&o(Mp),t&&o(He),t&&o(Bp),t&&o(Wr),t&&o(Np),t&&o(j),t&&o(jp),t&&o(Jr),t&&o(xp),t&&o(Tt)}}}class kT extends wT{constructor(st){super();_T(this,st,null,AT,gT,{})}}export{kT as default};
